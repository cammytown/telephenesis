$starSize: 14px;
$activeBorderWidth: 14px;
$inactiveBorderWidth: 1px;

@mixin border-radius($starWidth, $borderWidth) {
}

@mixin starProps($starWidth, $borderWidth: $activeBorderWidth) {
	$fullWidth: ($starWidth + ($borderWidth*2));
	$pos: $fullWidth * 0.5 * -1;
	left: $pos;
	top: $pos;
	width: $starWidth;
	height: $starWidth;
	border-width: $borderWidth;
	border-radius: $fullWidth * 0.5;
	// border-radius: 14px;
}

.star {
	$star: &;

	display: flex; ///TODO support older browsers?
	align-items: center;
	justify-content: center;

	position: absolute;
	z-index: 1;
	translate: -50% -50%; ///COMPAT ensure browser support and consistency

	width: 20px;
	height: 20px;
	padding: 1px 0 0;

	transition: background 350ms;

	&.moving {
		z-index: -1; ///
	}

	/*.inverse & { color: #222; }*/

	> a {
		// position: absolute;

		display: block;
		@include starProps($starSize, $inactiveBorderWidth);
		color: #bbe;
		background-color: #ff6;
		// border-width: $inactiveBorderWidth;
		border-style: solid;
		border-color: #000;

		transition:
			left 0.3s, top 0.3s,
			width 0.3s, height 0.3s,
			background-color 0.5s,
			border-width 0.3s, border-color 0.5s;

		&:hover {
			background-color: #e7e7f7 !important;
		}
	}

	// &.first > a {
	// 	left: -10px;
	// 	top: -10px;
	// 	width: 20px;
	// 	height: 20px;
	// 	border-radius: 11px;
	// }

	&:hover {
		z-index: 4;
	}

	&.bookmarked {
		> a {
			// border: 2px yellow solid;
			@include starProps($starSize, $activeBorderWidth - 10);
			border-color: #a73292;
		}
	}

	&.active {
		z-index: 3;

		> a {
			// left: -13px;
			// top: -13px;
			// width: 14px;
			// height: 14px;
			// border-style: solid;
			// border-color: #9c7751;
			@include starProps($starSize, $activeBorderWidth);

			animation-duration: 450ms, 20s;
			animation-name: starClick, activeStarBorder;
			animation-iteration-count: 1, infinite;
			animation-delay: 0s, 450ms;
			// border-width: $activeBorderWidth;
			// border-radius: $activeBorderWidth * 2;
		}

		&:hover {
			z-index: 1;
		}
	}

	@keyframes starClick {
		0% {
			@include starProps($starSize, $inactiveBorderWidth);

			border-color: #000;
		}

		45% {
			@include starProps($starSize, $activeBorderWidth + 4);
		}

		100% {
			@include starProps($starSize);

			border-color: #c77929;
		}
	}

	@keyframes activeStarBorder {
		0%	{
			border-color: #c77929;
			border-width: 14px;
		}

		20%	{
			border-color: #77a;
		}

		40%	{
			border-color: #965b88;
		}

		49% {
			// make sure star style properties are at default
			@include starProps($starSize);
		}

		50% {
			// reduce the border size for this moment
			@include starProps($starSize, $activeBorderWidth - 3);
		}

		51% {
			@include starProps($starSize);
		}

		60%	{
			border-color: #6b8a83;
		}

		80% {
			border-color: #658a58;
		}

		100% {
			border-color: #c77929;
		}
	}

	.meta {
		display: none;
		position: absolute;
		left: 32px;
		top: -6px;
		margin: 0 4px;
		transition: left 450ms, top 450ms;
		pointer-events: none;

		background-color: rgba(0, 0, 0, 0.6);
		transition: background-color 250ms;

		.text { ///REVISIT is this class necessary?
			// display: none;
			padding: 2px 5px 2px 3px;

			color: #eee;
			font-size: 1.25em;
			white-space: nowrap;
			font-size: 1.15em;
			line-height: 120%;

			&.playbackTime {
				display: none;
			}

			&.name {
			}
		}

		.creationTime {
			display: none;

		}

		/*.inverse & .text { background-color: #fcfcfc; }*/

		// &:hover .name, &.active .playbackTime {
	}

	&.active, &:hover {
		.meta {
			display: inline-block;
		}
	}

	&.active {
		width: 45px;
		height: 45px;

		.meta {
			left: 32px + $activeBorderWidth;
			top: -22px;

			&:hover {
				// opacity: 0;
				z-index: -1;

				.text {
					color: $dimmedText;
				}
			}

			.creationTime, .playbackTime {
				display: block;
			}
		}
	}

	@at-root {
		body.sorting {
			#{$star} {
				// opacity: 0;
				// transition: opacity 500ms;
				// position: absolute;
				// left: -$starGridSquareSize * 0.5;
				// top: -$starGridSquareSize * 0.5;
				width: $starGridSquareSize;
				height: $starGridSquareSize;
				background: rgba(40, 40, 40, 0.55);

				&.even {
					background: rgba(60, 60, 60, 0.55);
				}

				&:hover {
					background: rgba(232, 177, 150, 0.37);
				}

				.meta {
					left: 100%;

					.creationTime {
						display: block;
					}
				}
			}

			&.list {
				#{$star} {
					.meta {
						display: inline-block;
						cursor: auto;
						pointer-events: all;
					}
				}
			}
		}
	}

	// &.active .name, &.menu .name, &.menu .time {
	// 	display: none;
	// }
}
