/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/animejs/lib/anime.es.js":
/*!**********************************************!*\
  !*** ./node_modules/animejs/lib/anime.es.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*\n * anime.js v3.2.1\n * (c) 2020 Julian Garnier\n * Released under the MIT license\n * animejs.com\n */\n\n// Defaults\n\nvar defaultInstanceSettings = {\n  update: null,\n  begin: null,\n  loopBegin: null,\n  changeBegin: null,\n  change: null,\n  changeComplete: null,\n  loopComplete: null,\n  complete: null,\n  loop: 1,\n  direction: 'normal',\n  autoplay: true,\n  timelineOffset: 0\n};\n\nvar defaultTweenSettings = {\n  duration: 1000,\n  delay: 0,\n  endDelay: 0,\n  easing: 'easeOutElastic(1, .5)',\n  round: 0\n};\n\nvar validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];\n\n// Caching\n\nvar cache = {\n  CSS: {},\n  springs: {}\n};\n\n// Utils\n\nfunction minMax(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction stringContains(str, text) {\n  return str.indexOf(text) > -1;\n}\n\nfunction applyArguments(func, args) {\n  return func.apply(null, args);\n}\n\nvar is = {\n  arr: function (a) { return Array.isArray(a); },\n  obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); },\n  pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); },\n  svg: function (a) { return a instanceof SVGElement; },\n  inp: function (a) { return a instanceof HTMLInputElement; },\n  dom: function (a) { return a.nodeType || is.svg(a); },\n  str: function (a) { return typeof a === 'string'; },\n  fnc: function (a) { return typeof a === 'function'; },\n  und: function (a) { return typeof a === 'undefined'; },\n  nil: function (a) { return is.und(a) || a === null; },\n  hex: function (a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a); },\n  rgb: function (a) { return /^rgb/.test(a); },\n  hsl: function (a) { return /^hsl/.test(a); },\n  col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); },\n  key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; },\n};\n\n// Easings\n\nfunction parseEasingParameters(string) {\n  var match = /\\(([^)]+)\\)/.exec(string);\n  return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : [];\n}\n\n// Spring solver inspired by Webkit Copyright Â© 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js\n\nfunction spring(string, duration) {\n\n  var params = parseEasingParameters(string);\n  var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100);\n  var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100);\n  var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100);\n  var velocity =  minMax(is.und(params[3]) ? 0 : params[3], .1, 100);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n\n  function solver(t) {\n    var progress = duration ? (duration * t) / 1000 : t;\n    if (zeta < 1) {\n      progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n    } else {\n      progress = (a + b * progress) * Math.exp(-progress * w0);\n    }\n    if (t === 0 || t === 1) { return t; }\n    return 1 - progress;\n  }\n\n  function getDuration() {\n    var cached = cache.springs[string];\n    if (cached) { return cached; }\n    var frame = 1/6;\n    var elapsed = 0;\n    var rest = 0;\n    while(true) {\n      elapsed += frame;\n      if (solver(elapsed) === 1) {\n        rest++;\n        if (rest >= 16) { break; }\n      } else {\n        rest = 0;\n      }\n    }\n    var duration = elapsed * frame * 1000;\n    cache.springs[string] = duration;\n    return duration;\n  }\n\n  return duration ? solver : getDuration;\n\n}\n\n// Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n\nfunction steps(steps) {\n  if ( steps === void 0 ) steps = 10;\n\n  return function (t) { return Math.ceil((minMax(t, 0.000001, 1)) * steps) * (1 / steps); };\n}\n\n// BezierEasing https://github.com/gre/bezier-easing\n\nvar bezier = (function () {\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 }\n  function C(aA1)      { return 3.0 * aA1 }\n\n  function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT }\n  function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX, currentT, i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) { aB = currentT; } else { aA = currentT; }\n    } while (Math.abs(currentX) > 0.0000001 && ++i < 10);\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) { return aGuessT; }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function bezier(mX1, mY1, mX2, mY2) {\n\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; }\n    var sampleValues = new Float32Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n\n      var intervalStart = 0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= 0.001) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n\n    }\n\n    return function (x) {\n      if (mX1 === mY1 && mX2 === mY2) { return x; }\n      if (x === 0 || x === 1) { return x; }\n      return calcBezier(getTForX(x), mY1, mY2);\n    }\n\n  }\n\n  return bezier;\n\n})();\n\nvar penner = (function () {\n\n  // Based on jQuery UI's implemenation of easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n  var eases = { linear: function () { return function (t) { return t; }; } };\n\n  var functionEasings = {\n    Sine: function () { return function (t) { return 1 - Math.cos(t * Math.PI / 2); }; },\n    Circ: function () { return function (t) { return 1 - Math.sqrt(1 - t * t); }; },\n    Back: function () { return function (t) { return t * t * (3 * t - 2); }; },\n    Bounce: function () { return function (t) {\n      var pow2, b = 4;\n      while (t < (( pow2 = Math.pow(2, --b)) - 1) / 11) {}\n      return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow(( pow2 * 3 - 2 ) / 22 - t, 2)\n    }; },\n    Elastic: function (amplitude, period) {\n      if ( amplitude === void 0 ) amplitude = 1;\n      if ( period === void 0 ) period = .5;\n\n      var a = minMax(amplitude, 1, 10);\n      var p = minMax(period, .1, 2);\n      return function (t) {\n        return (t === 0 || t === 1) ? t : \n          -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p);\n      }\n    }\n  };\n\n  var baseEasings = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n\n  baseEasings.forEach(function (name, i) {\n    functionEasings[name] = function () { return function (t) { return Math.pow(t, i + 2); }; };\n  });\n\n  Object.keys(functionEasings).forEach(function (name) {\n    var easeIn = functionEasings[name];\n    eases['easeIn' + name] = easeIn;\n    eases['easeOut' + name] = function (a, b) { return function (t) { return 1 - easeIn(a, b)(1 - t); }; };\n    eases['easeInOut' + name] = function (a, b) { return function (t) { return t < 0.5 ? easeIn(a, b)(t * 2) / 2 : \n      1 - easeIn(a, b)(t * -2 + 2) / 2; }; };\n    eases['easeOutIn' + name] = function (a, b) { return function (t) { return t < 0.5 ? (1 - easeIn(a, b)(1 - t * 2)) / 2 : \n      (easeIn(a, b)(t * 2 - 1) + 1) / 2; }; };\n  });\n\n  return eases;\n\n})();\n\nfunction parseEasings(easing, duration) {\n  if (is.fnc(easing)) { return easing; }\n  var name = easing.split('(')[0];\n  var ease = penner[name];\n  var args = parseEasingParameters(easing);\n  switch (name) {\n    case 'spring' : return spring(easing, duration);\n    case 'cubicBezier' : return applyArguments(bezier, args);\n    case 'steps' : return applyArguments(steps, args);\n    default : return applyArguments(ease, args);\n  }\n}\n\n// Strings\n\nfunction selectString(str) {\n  try {\n    var nodes = document.querySelectorAll(str);\n    return nodes;\n  } catch(e) {\n    return;\n  }\n}\n\n// Arrays\n\nfunction filterArray(arr, callback) {\n  var len = arr.length;\n  var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    if (i in arr) {\n      var val = arr[i];\n      if (callback.call(thisArg, val, i, arr)) {\n        result.push(val);\n      }\n    }\n  }\n  return result;\n}\n\nfunction flattenArray(arr) {\n  return arr.reduce(function (a, b) { return a.concat(is.arr(b) ? flattenArray(b) : b); }, []);\n}\n\nfunction toArray(o) {\n  if (is.arr(o)) { return o; }\n  if (is.str(o)) { o = selectString(o) || o; }\n  if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); }\n  return [o];\n}\n\nfunction arrayContains(arr, val) {\n  return arr.some(function (a) { return a === val; });\n}\n\n// Objects\n\nfunction cloneObject(o) {\n  var clone = {};\n  for (var p in o) { clone[p] = o[p]; }\n  return clone;\n}\n\nfunction replaceObjectProps(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; }\n  return o;\n}\n\nfunction mergeObjects(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; }\n  return o;\n}\n\n// Colors\n\nfunction rgbToRgba(rgbValue) {\n  var rgb = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(rgbValue);\n  return rgb ? (\"rgba(\" + (rgb[1]) + \",1)\") : rgbValue;\n}\n\nfunction hexToRgba(hexValue) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) { return r + r + g + g + b + b; } );\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return (\"rgba(\" + r + \",\" + g + \",\" + b + \",1)\");\n}\n\nfunction hslToRgba(hslValue) {\n  var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hslValue) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(hslValue);\n  var h = parseInt(hsl[1], 10) / 360;\n  var s = parseInt(hsl[2], 10) / 100;\n  var l = parseInt(hsl[3], 10) / 100;\n  var a = hsl[4] || 1;\n  function hue2rgb(p, q, t) {\n    if (t < 0) { t += 1; }\n    if (t > 1) { t -= 1; }\n    if (t < 1/6) { return p + (q - p) * 6 * t; }\n    if (t < 1/2) { return q; }\n    if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; }\n    return p;\n  }\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n  return (\"rgba(\" + (r * 255) + \",\" + (g * 255) + \",\" + (b * 255) + \",\" + a + \")\");\n}\n\nfunction colorToRgb(val) {\n  if (is.rgb(val)) { return rgbToRgba(val); }\n  if (is.hex(val)) { return hexToRgba(val); }\n  if (is.hsl(val)) { return hslToRgba(val); }\n}\n\n// Units\n\nfunction getUnit(val) {\n  var split = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);\n  if (split) { return split[1]; }\n}\n\nfunction getTransformUnit(propName) {\n  if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; }\n  if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; }\n}\n\n// Values\n\nfunction getFunctionValue(val, animatable) {\n  if (!is.fnc(val)) { return val; }\n  return val(animatable.target, animatable.id, animatable.total);\n}\n\nfunction getAttribute(el, prop) {\n  return el.getAttribute(prop);\n}\n\nfunction convertPxToUnit(el, value, unit) {\n  var valueUnit = getUnit(value);\n  if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; }\n  var cached = cache.CSS[value + unit];\n  if (!is.und(cached)) { return cached; }\n  var baseline = 100;\n  var tempEl = document.createElement(el.tagName);\n  var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body;\n  parentEl.appendChild(tempEl);\n  tempEl.style.position = 'absolute';\n  tempEl.style.width = baseline + unit;\n  var factor = baseline / tempEl.offsetWidth;\n  parentEl.removeChild(tempEl);\n  var convertedUnit = factor * parseFloat(value);\n  cache.CSS[value + unit] = convertedUnit;\n  return convertedUnit;\n}\n\nfunction getCSSValue(el, prop, unit) {\n  if (prop in el.style) {\n    var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0';\n    return unit ? convertPxToUnit(el, value, unit) : value;\n  }\n}\n\nfunction getAnimationType(el, prop) {\n  if (is.dom(el) && !is.inp(el) && (!is.nil(getAttribute(el, prop)) || (is.svg(el) && el[prop]))) { return 'attribute'; }\n  if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; }\n  if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; }\n  if (el[prop] != null) { return 'object'; }\n}\n\nfunction getElementTransforms(el) {\n  if (!is.dom(el)) { return; }\n  var str = el.style.transform || '';\n  var reg  = /(\\w+)\\(([^)]*)\\)/g;\n  var transforms = new Map();\n  var m; while (m = reg.exec(str)) { transforms.set(m[1], m[2]); }\n  return transforms;\n}\n\nfunction getTransformValue(el, propName, animatable, unit) {\n  var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName);\n  var value = getElementTransforms(el).get(propName) || defaultVal;\n  if (animatable) {\n    animatable.transforms.list.set(propName, value);\n    animatable.transforms['last'] = propName;\n  }\n  return unit ? convertPxToUnit(el, value, unit) : value;\n}\n\nfunction getOriginalTargetValue(target, propName, unit, animatable) {\n  switch (getAnimationType(target, propName)) {\n    case 'transform': return getTransformValue(target, propName, animatable, unit);\n    case 'css': return getCSSValue(target, propName, unit);\n    case 'attribute': return getAttribute(target, propName);\n    default: return target[propName] || 0;\n  }\n}\n\nfunction getRelativeValue(to, from) {\n  var operator = /^(\\*=|\\+=|-=)/.exec(to);\n  if (!operator) { return to; }\n  var u = getUnit(to) || 0;\n  var x = parseFloat(from);\n  var y = parseFloat(to.replace(operator[0], ''));\n  switch (operator[0][0]) {\n    case '+': return x + y + u;\n    case '-': return x - y + u;\n    case '*': return x * y + u;\n  }\n}\n\nfunction validateValue(val, unit) {\n  if (is.col(val)) { return colorToRgb(val); }\n  if (/\\s/g.test(val)) { return val; }\n  var originalUnit = getUnit(val);\n  var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;\n  if (unit) { return unitLess + unit; }\n  return unitLess;\n}\n\n// getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes\n// adapted from https://gist.github.com/SebLambla/3e0550c496c236709744\n\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el) {\n  return Math.PI * 2 * getAttribute(el, 'r');\n}\n\nfunction getRectLength(el) {\n  return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2);\n}\n\nfunction getLineLength(el) {\n  return getDistance(\n    {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, \n    {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')}\n  );\n}\n\nfunction getPolylineLength(el) {\n  var points = el.points;\n  var totalLength = 0;\n  var previousPos;\n  for (var i = 0 ; i < points.numberOfItems; i++) {\n    var currentPos = points.getItem(i);\n    if (i > 0) { totalLength += getDistance(previousPos, currentPos); }\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el) {\n  var points = el.points;\n  return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n}\n\n// Path animation\n\nfunction getTotalLength(el) {\n  if (el.getTotalLength) { return el.getTotalLength(); }\n  switch(el.tagName.toLowerCase()) {\n    case 'circle': return getCircleLength(el);\n    case 'rect': return getRectLength(el);\n    case 'line': return getLineLength(el);\n    case 'polyline': return getPolylineLength(el);\n    case 'polygon': return getPolygonLength(el);\n  }\n}\n\nfunction setDashoffset(el) {\n  var pathLength = getTotalLength(el);\n  el.setAttribute('stroke-dasharray', pathLength);\n  return pathLength;\n}\n\n// Motion path\n\nfunction getParentSvgEl(el) {\n  var parentEl = el.parentNode;\n  while (is.svg(parentEl)) {\n    if (!is.svg(parentEl.parentNode)) { break; }\n    parentEl = parentEl.parentNode;\n  }\n  return parentEl;\n}\n\nfunction getParentSvg(pathEl, svgData) {\n  var svg = svgData || {};\n  var parentSvgEl = svg.el || getParentSvgEl(pathEl);\n  var rect = parentSvgEl.getBoundingClientRect();\n  var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox');\n  var width = rect.width;\n  var height = rect.height;\n  var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]);\n  return {\n    el: parentSvgEl,\n    viewBox: viewBox,\n    x: viewBox[0] / 1,\n    y: viewBox[1] / 1,\n    w: width,\n    h: height,\n    vW: viewBox[2],\n    vH: viewBox[3]\n  }\n}\n\nfunction getPath(path, percent) {\n  var pathEl = is.str(path) ? selectString(path)[0] : path;\n  var p = percent || 100;\n  return function(property) {\n    return {\n      property: property,\n      el: pathEl,\n      svg: getParentSvg(pathEl),\n      totalLength: getTotalLength(pathEl) * (p / 100)\n    }\n  }\n}\n\nfunction getPathProgress(path, progress, isPathTargetInsideSVG) {\n  function point(offset) {\n    if ( offset === void 0 ) offset = 0;\n\n    var l = progress + offset >= 1 ? progress + offset : 0;\n    return path.el.getPointAtLength(l);\n  }\n  var svg = getParentSvg(path.el, path.svg);\n  var p = point();\n  var p0 = point(-1);\n  var p1 = point(+1);\n  var scaleX = isPathTargetInsideSVG ? 1 : svg.w / svg.vW;\n  var scaleY = isPathTargetInsideSVG ? 1 : svg.h / svg.vH;\n  switch (path.property) {\n    case 'x': return (p.x - svg.x) * scaleX;\n    case 'y': return (p.y - svg.y) * scaleY;\n    case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n  }\n}\n\n// Decompose value\n\nfunction decomposeValue(val, unit) {\n  // const rgx = /-?\\d*\\.?\\d+/g; // handles basic numbers\n  // const rgx = /[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var rgx = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';\n  return {\n    original: value,\n    numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],\n    strings: (is.str(val) || unit) ? value.split(rgx) : []\n  }\n}\n\n// Animatables\n\nfunction parseTargets(targets) {\n  var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n  return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; });\n}\n\nfunction getAnimatables(targets) {\n  var parsed = parseTargets(targets);\n  return parsed.map(function (t, i) {\n    return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } };\n  });\n}\n\n// Properties\n\nfunction normalizePropertyTweens(prop, tweenSettings) {\n  var settings = cloneObject(tweenSettings);\n  // Override duration if easing is a spring\n  if (/^spring/.test(settings.easing)) { settings.duration = spring(settings.easing); }\n  if (is.arr(prop)) {\n    var l = prop.length;\n    var isFromTo = (l === 2 && !is.obj(prop[0]));\n    if (!isFromTo) {\n      // Duration divided by the number of tweens\n      if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; }\n    } else {\n      // Transform [from, to] values shorthand to a valid tween value\n      prop = {value: prop};\n    }\n  }\n  var propArray = is.arr(prop) ? prop : [prop];\n  return propArray.map(function (v, i) {\n    var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v};\n    // Default delay value should only be applied to the first tween\n    if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; }\n    // Default endDelay value should only be applied to the last tween\n    if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; }\n    return obj;\n  }).map(function (k) { return mergeObjects(k, settings); });\n}\n\n\nfunction flattenKeyframes(keyframes) {\n  var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); })\n  .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []);\n  var properties = {};\n  var loop = function ( i ) {\n    var propName = propertyNames[i];\n    properties[propName] = keyframes.map(function (key) {\n      var newKey = {};\n      for (var p in key) {\n        if (is.key(p)) {\n          if (p == propName) { newKey.value = key[p]; }\n        } else {\n          newKey[p] = key[p];\n        }\n      }\n      return newKey;\n    });\n  };\n\n  for (var i = 0; i < propertyNames.length; i++) loop( i );\n  return properties;\n}\n\nfunction getProperties(tweenSettings, params) {\n  var properties = [];\n  var keyframes = params.keyframes;\n  if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); }\n  for (var p in params) {\n    if (is.key(p)) {\n      properties.push({\n        name: p,\n        tweens: normalizePropertyTweens(params[p], tweenSettings)\n      });\n    }\n  }\n  return properties;\n}\n\n// Tweens\n\nfunction normalizeTweenValues(tween, animatable) {\n  var t = {};\n  for (var p in tween) {\n    var value = getFunctionValue(tween[p], animatable);\n    if (is.arr(value)) {\n      value = value.map(function (v) { return getFunctionValue(v, animatable); });\n      if (value.length === 1) { value = value[0]; }\n    }\n    t[p] = value;\n  }\n  t.duration = parseFloat(t.duration);\n  t.delay = parseFloat(t.delay);\n  return t;\n}\n\nfunction normalizeTweens(prop, animatable) {\n  var previousTween;\n  return prop.tweens.map(function (t) {\n    var tween = normalizeTweenValues(t, animatable);\n    var tweenValue = tween.value;\n    var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue;\n    var toUnit = getUnit(to);\n    var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable);\n    var previousValue = previousTween ? previousTween.to.original : originalValue;\n    var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;\n    var fromUnit = getUnit(from) || getUnit(originalValue);\n    var unit = toUnit || fromUnit;\n    if (is.und(to)) { to = previousValue; }\n    tween.from = decomposeValue(from, unit);\n    tween.to = decomposeValue(getRelativeValue(to, from), unit);\n    tween.start = previousTween ? previousTween.end : 0;\n    tween.end = tween.start + tween.delay + tween.duration + tween.endDelay;\n    tween.easing = parseEasings(tween.easing, tween.duration);\n    tween.isPath = is.pth(tweenValue);\n    tween.isPathTargetInsideSVG = tween.isPath && is.svg(animatable.target);\n    tween.isColor = is.col(tween.from.original);\n    if (tween.isColor) { tween.round = 1; }\n    previousTween = tween;\n    return tween;\n  });\n}\n\n// Tween progress\n\nvar setProgressValue = {\n  css: function (t, p, v) { return t.style[p] = v; },\n  attribute: function (t, p, v) { return t.setAttribute(p, v); },\n  object: function (t, p, v) { return t[p] = v; },\n  transform: function (t, p, v, transforms, manual) {\n    transforms.list.set(p, v);\n    if (p === transforms.last || manual) {\n      var str = '';\n      transforms.list.forEach(function (value, prop) { str += prop + \"(\" + value + \") \"; });\n      t.style.transform = str;\n    }\n  }\n};\n\n// Set Value helper\n\nfunction setTargetsValue(targets, properties) {\n  var animatables = getAnimatables(targets);\n  animatables.forEach(function (animatable) {\n    for (var property in properties) {\n      var value = getFunctionValue(properties[property], animatable);\n      var target = animatable.target;\n      var valueUnit = getUnit(value);\n      var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable);\n      var unit = valueUnit || getUnit(originalValue);\n      var to = getRelativeValue(validateValue(value, unit), originalValue);\n      var animType = getAnimationType(target, property);\n      setProgressValue[animType](target, property, to, animatable.transforms, true);\n    }\n  });\n}\n\n// Animations\n\nfunction createAnimation(animatable, prop) {\n  var animType = getAnimationType(animatable.target, prop.name);\n  if (animType) {\n    var tweens = normalizeTweens(prop, animatable);\n    var lastTween = tweens[tweens.length - 1];\n    return {\n      type: animType,\n      property: prop.name,\n      animatable: animatable,\n      tweens: tweens,\n      duration: lastTween.end,\n      delay: tweens[0].delay,\n      endDelay: lastTween.endDelay\n    }\n  }\n}\n\nfunction getAnimations(animatables, properties) {\n  return filterArray(flattenArray(animatables.map(function (animatable) {\n    return properties.map(function (prop) {\n      return createAnimation(animatable, prop);\n    });\n  })), function (a) { return !is.und(a); });\n}\n\n// Create Instance\n\nfunction getInstanceTimings(animations, tweenSettings) {\n  var animLength = animations.length;\n  var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; };\n  var timings = {};\n  timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration;\n  timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay;\n  timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay;\n  return timings;\n}\n\nvar instanceID = 0;\n\nfunction createNewInstance(params) {\n  var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);\n  var tweenSettings = replaceObjectProps(defaultTweenSettings, params);\n  var properties = getProperties(tweenSettings, params);\n  var animatables = getAnimatables(params.targets);\n  var animations = getAnimations(animatables, properties);\n  var timings = getInstanceTimings(animations, tweenSettings);\n  var id = instanceID;\n  instanceID++;\n  return mergeObjects(instanceSettings, {\n    id: id,\n    children: [],\n    animatables: animatables,\n    animations: animations,\n    duration: timings.duration,\n    delay: timings.delay,\n    endDelay: timings.endDelay\n  });\n}\n\n// Core\n\nvar activeInstances = [];\n\nvar engine = (function () {\n  var raf;\n\n  function play() {\n    if (!raf && (!isDocumentHidden() || !anime.suspendWhenDocumentHidden) && activeInstances.length > 0) {\n      raf = requestAnimationFrame(step);\n    }\n  }\n  function step(t) {\n    // memo on algorithm issue:\n    // dangerous iteration over mutable `activeInstances`\n    // (that collection may be updated from within callbacks of `tick`-ed animation instances)\n    var activeInstancesLength = activeInstances.length;\n    var i = 0;\n    while (i < activeInstancesLength) {\n      var activeInstance = activeInstances[i];\n      if (!activeInstance.paused) {\n        activeInstance.tick(t);\n        i++;\n      } else {\n        activeInstances.splice(i, 1);\n        activeInstancesLength--;\n      }\n    }\n    raf = i > 0 ? requestAnimationFrame(step) : undefined;\n  }\n\n  function handleVisibilityChange() {\n    if (!anime.suspendWhenDocumentHidden) { return; }\n\n    if (isDocumentHidden()) {\n      // suspend ticks\n      raf = cancelAnimationFrame(raf);\n    } else { // is back to active tab\n      // first adjust animations to consider the time that ticks were suspended\n      activeInstances.forEach(\n        function (instance) { return instance ._onDocumentVisibility(); }\n      );\n      engine();\n    }\n  }\n  if (typeof document !== 'undefined') {\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n  }\n\n  return play;\n})();\n\nfunction isDocumentHidden() {\n  return !!document && document.hidden;\n}\n\n// Public Instance\n\nfunction anime(params) {\n  if ( params === void 0 ) params = {};\n\n\n  var startTime = 0, lastTime = 0, now = 0;\n  var children, childrenLength = 0;\n  var resolve = null;\n\n  function makePromise(instance) {\n    var promise = window.Promise && new Promise(function (_resolve) { return resolve = _resolve; });\n    instance.finished = promise;\n    return promise;\n  }\n\n  var instance = createNewInstance(params);\n  var promise = makePromise(instance);\n\n  function toggleInstanceDirection() {\n    var direction = instance.direction;\n    if (direction !== 'alternate') {\n      instance.direction = direction !== 'normal' ? 'normal' : 'reverse';\n    }\n    instance.reversed = !instance.reversed;\n    children.forEach(function (child) { return child.reversed = instance.reversed; });\n  }\n\n  function adjustTime(time) {\n    return instance.reversed ? instance.duration - time : time;\n  }\n\n  function resetTime() {\n    startTime = 0;\n    lastTime = adjustTime(instance.currentTime) * (1 / anime.speed);\n  }\n\n  function seekChild(time, child) {\n    if (child) { child.seek(time - child.timelineOffset); }\n  }\n\n  function syncInstanceChildren(time) {\n    if (!instance.reversePlayback) {\n      for (var i = 0; i < childrenLength; i++) { seekChild(time, children[i]); }\n    } else {\n      for (var i$1 = childrenLength; i$1--;) { seekChild(time, children[i$1]); }\n    }\n  }\n\n  function setAnimationsProgress(insTime) {\n    var i = 0;\n    var animations = instance.animations;\n    var animationsLength = animations.length;\n    while (i < animationsLength) {\n      var anim = animations[i];\n      var animatable = anim.animatable;\n      var tweens = anim.tweens;\n      var tweenLength = tweens.length - 1;\n      var tween = tweens[tweenLength];\n      // Only check for keyframes if there is more than one tween\n      if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; }\n      var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;\n      var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed);\n      var strings = tween.to.strings;\n      var round = tween.round;\n      var numbers = [];\n      var toNumbersLength = tween.to.numbers.length;\n      var progress = (void 0);\n      for (var n = 0; n < toNumbersLength; n++) {\n        var value = (void 0);\n        var toNumber = tween.to.numbers[n];\n        var fromNumber = tween.from.numbers[n] || 0;\n        if (!tween.isPath) {\n          value = fromNumber + (eased * (toNumber - fromNumber));\n        } else {\n          value = getPathProgress(tween.value, eased * toNumber, tween.isPathTargetInsideSVG);\n        }\n        if (round) {\n          if (!(tween.isColor && n > 2)) {\n            value = Math.round(value * round) / round;\n          }\n        }\n        numbers.push(value);\n      }\n      // Manual Array.reduce for better performances\n      var stringsLength = strings.length;\n      if (!stringsLength) {\n        progress = numbers[0];\n      } else {\n        progress = strings[0];\n        for (var s = 0; s < stringsLength; s++) {\n          var a = strings[s];\n          var b = strings[s + 1];\n          var n$1 = numbers[s];\n          if (!isNaN(n$1)) {\n            if (!b) {\n              progress += n$1 + ' ';\n            } else {\n              progress += n$1 + b;\n            }\n          }\n        }\n      }\n      setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms);\n      anim.currentValue = progress;\n      i++;\n    }\n  }\n\n  function setCallback(cb) {\n    if (instance[cb] && !instance.passThrough) { instance[cb](instance); }\n  }\n\n  function countIteration() {\n    if (instance.remaining && instance.remaining !== true) {\n      instance.remaining--;\n    }\n  }\n\n  function setInstanceProgress(engineTime) {\n    var insDuration = instance.duration;\n    var insDelay = instance.delay;\n    var insEndDelay = insDuration - instance.endDelay;\n    var insTime = adjustTime(engineTime);\n    instance.progress = minMax((insTime / insDuration) * 100, 0, 100);\n    instance.reversePlayback = insTime < instance.currentTime;\n    if (children) { syncInstanceChildren(insTime); }\n    if (!instance.began && instance.currentTime > 0) {\n      instance.began = true;\n      setCallback('begin');\n    }\n    if (!instance.loopBegan && instance.currentTime > 0) {\n      instance.loopBegan = true;\n      setCallback('loopBegin');\n    }\n    if (insTime <= insDelay && instance.currentTime !== 0) {\n      setAnimationsProgress(0);\n    }\n    if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) {\n      setAnimationsProgress(insDuration);\n    }\n    if (insTime > insDelay && insTime < insEndDelay) {\n      if (!instance.changeBegan) {\n        instance.changeBegan = true;\n        instance.changeCompleted = false;\n        setCallback('changeBegin');\n      }\n      setCallback('change');\n      setAnimationsProgress(insTime);\n    } else {\n      if (instance.changeBegan) {\n        instance.changeCompleted = true;\n        instance.changeBegan = false;\n        setCallback('changeComplete');\n      }\n    }\n    instance.currentTime = minMax(insTime, 0, insDuration);\n    if (instance.began) { setCallback('update'); }\n    if (engineTime >= insDuration) {\n      lastTime = 0;\n      countIteration();\n      if (!instance.remaining) {\n        instance.paused = true;\n        if (!instance.completed) {\n          instance.completed = true;\n          setCallback('loopComplete');\n          setCallback('complete');\n          if (!instance.passThrough && 'Promise' in window) {\n            resolve();\n            promise = makePromise(instance);\n          }\n        }\n      } else {\n        startTime = now;\n        setCallback('loopComplete');\n        instance.loopBegan = false;\n        if (instance.direction === 'alternate') {\n          toggleInstanceDirection();\n        }\n      }\n    }\n  }\n\n  instance.reset = function() {\n    var direction = instance.direction;\n    instance.passThrough = false;\n    instance.currentTime = 0;\n    instance.progress = 0;\n    instance.paused = true;\n    instance.began = false;\n    instance.loopBegan = false;\n    instance.changeBegan = false;\n    instance.completed = false;\n    instance.changeCompleted = false;\n    instance.reversePlayback = false;\n    instance.reversed = direction === 'reverse';\n    instance.remaining = instance.loop;\n    children = instance.children;\n    childrenLength = children.length;\n    for (var i = childrenLength; i--;) { instance.children[i].reset(); }\n    if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; }\n    setAnimationsProgress(instance.reversed ? instance.duration : 0);\n  };\n\n  // internal method (for engine) to adjust animation timings before restoring engine ticks (rAF)\n  instance._onDocumentVisibility = resetTime;\n\n  // Set Value helper\n\n  instance.set = function(targets, properties) {\n    setTargetsValue(targets, properties);\n    return instance;\n  };\n\n  instance.tick = function(t) {\n    now = t;\n    if (!startTime) { startTime = now; }\n    setInstanceProgress((now + (lastTime - startTime)) * anime.speed);\n  };\n\n  instance.seek = function(time) {\n    setInstanceProgress(adjustTime(time));\n  };\n\n  instance.pause = function() {\n    instance.paused = true;\n    resetTime();\n  };\n\n  instance.play = function() {\n    if (!instance.paused) { return; }\n    if (instance.completed) { instance.reset(); }\n    instance.paused = false;\n    activeInstances.push(instance);\n    resetTime();\n    engine();\n  };\n\n  instance.reverse = function() {\n    toggleInstanceDirection();\n    instance.completed = instance.reversed ? false : true;\n    resetTime();\n  };\n\n  instance.restart = function() {\n    instance.reset();\n    instance.play();\n  };\n\n  instance.remove = function(targets) {\n    var targetsArray = parseTargets(targets);\n    removeTargetsFromInstance(targetsArray, instance);\n  };\n\n  instance.reset();\n\n  if (instance.autoplay) { instance.play(); }\n\n  return instance;\n\n}\n\n// Remove targets from animation\n\nfunction removeTargetsFromAnimations(targetsArray, animations) {\n  for (var a = animations.length; a--;) {\n    if (arrayContains(targetsArray, animations[a].animatable.target)) {\n      animations.splice(a, 1);\n    }\n  }\n}\n\nfunction removeTargetsFromInstance(targetsArray, instance) {\n  var animations = instance.animations;\n  var children = instance.children;\n  removeTargetsFromAnimations(targetsArray, animations);\n  for (var c = children.length; c--;) {\n    var child = children[c];\n    var childAnimations = child.animations;\n    removeTargetsFromAnimations(targetsArray, childAnimations);\n    if (!childAnimations.length && !child.children.length) { children.splice(c, 1); }\n  }\n  if (!animations.length && !children.length) { instance.pause(); }\n}\n\nfunction removeTargetsFromActiveInstances(targets) {\n  var targetsArray = parseTargets(targets);\n  for (var i = activeInstances.length; i--;) {\n    var instance = activeInstances[i];\n    removeTargetsFromInstance(targetsArray, instance);\n  }\n}\n\n// Stagger helpers\n\nfunction stagger(val, params) {\n  if ( params === void 0 ) params = {};\n\n  var direction = params.direction || 'normal';\n  var easing = params.easing ? parseEasings(params.easing) : null;\n  var grid = params.grid;\n  var axis = params.axis;\n  var fromIndex = params.from || 0;\n  var fromFirst = fromIndex === 'first';\n  var fromCenter = fromIndex === 'center';\n  var fromLast = fromIndex === 'last';\n  var isRange = is.arr(val);\n  var val1 = isRange ? parseFloat(val[0]) : parseFloat(val);\n  var val2 = isRange ? parseFloat(val[1]) : 0;\n  var unit = getUnit(isRange ? val[1] : val) || 0;\n  var start = params.start || 0 + (isRange ? val1 : 0);\n  var values = [];\n  var maxValue = 0;\n  return function (el, i, t) {\n    if (fromFirst) { fromIndex = 0; }\n    if (fromCenter) { fromIndex = (t - 1) / 2; }\n    if (fromLast) { fromIndex = t - 1; }\n    if (!values.length) {\n      for (var index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(Math.abs(fromIndex - index));\n        } else {\n          var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2;\n          var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2;\n          var toX = index%grid[0];\n          var toY = Math.floor(index/grid[0]);\n          var distanceX = fromX - toX;\n          var distanceY = fromY - toY;\n          var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') { value = -distanceX; }\n          if (axis === 'y') { value = -distanceY; }\n          values.push(value);\n        }\n        maxValue = Math.max.apply(Math, values);\n      }\n      if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); }\n      if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); }\n    }\n    var spacing = isRange ? (val2 - val1) / maxValue : val1;\n    return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit;\n  }\n}\n\n// Timeline\n\nfunction timeline(params) {\n  if ( params === void 0 ) params = {};\n\n  var tl = anime(params);\n  tl.duration = 0;\n  tl.add = function(instanceParams, timelineOffset) {\n    var tlIndex = activeInstances.indexOf(tl);\n    var children = tl.children;\n    if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); }\n    function passThrough(ins) { ins.passThrough = true; }\n    for (var i = 0; i < children.length; i++) { passThrough(children[i]); }\n    var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params));\n    insParams.targets = insParams.targets || params.targets;\n    var tlDuration = tl.duration;\n    insParams.autoplay = false;\n    insParams.direction = tl.direction;\n    insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration);\n    passThrough(tl);\n    tl.seek(insParams.timelineOffset);\n    var ins = anime(insParams);\n    passThrough(ins);\n    children.push(ins);\n    var timings = getInstanceTimings(children, params);\n    tl.delay = timings.delay;\n    tl.endDelay = timings.endDelay;\n    tl.duration = timings.duration;\n    tl.seek(0);\n    tl.reset();\n    if (tl.autoplay) { tl.play(); }\n    return tl;\n  };\n  return tl;\n}\n\nanime.version = '3.2.1';\nanime.speed = 1;\n// TODO:#review: naming, documentation\nanime.suspendWhenDocumentHidden = true;\nanime.running = activeInstances;\nanime.remove = removeTargetsFromActiveInstances;\nanime.get = getOriginalTargetValue;\nanime.set = setTargetsValue;\nanime.convertPx = convertPxToUnit;\nanime.path = getPath;\nanime.setDashoffset = setDashoffset;\nanime.stagger = stagger;\nanime.timeline = timeline;\nanime.easing = parseEasings;\nanime.penner = penner;\nanime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; };\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (anime);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/animejs/lib/anime.es.js\n");

/***/ }),

/***/ "./abstract/Star.js":
/*!**************************!*\
  !*** ./abstract/Star.js ***!
  \**************************/
/***/ ((module) => {

eval("// import clientState from './ClientState';\n\n/**\r\n * This class is used by both server and client to\r\n * work with stars; largely as a centralized\r\n * data structure.\r\n * @constructor\r\n */\nfunction Star() {\n  var me = this;\n  /**\r\n   * The properties relevant to import/export methods.\r\n   * @type {Array}\r\n   */\n\n  this.identityProps = ['id', 'originStarID', 'title', // 'x',\n  // 'y',\n  'position', 'color', 'tier', 'creator', 'constellationID', 'hostType', 'fileURL', 'timestamp'];\n  this.serverProps = ['active', 'deleted'];\n  this.objectProps = ['position'];\n  init();\n\n  function init() {\n    var allProps = me.identityProps.concat(me.serverProps);\n\n    for (var propIndex = 0; propIndex < allProps.length; propIndex++) {\n      var prop = allProps[propIndex];\n      me[prop] = null;\n    }\n\n    ;\n  }\n}\n\nmodule.exports = Star; // export default Star();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWxlcGhlbmVzaXMtbm9kZWpzLy4vYWJzdHJhY3QvU3Rhci5qcz82MmY2Il0sIm5hbWVzIjpbIlN0YXIiLCJtZSIsImlkZW50aXR5UHJvcHMiLCJzZXJ2ZXJQcm9wcyIsIm9iamVjdFByb3BzIiwiaW5pdCIsImFsbFByb3BzIiwiY29uY2F0IiwicHJvcEluZGV4IiwibGVuZ3RoIiwicHJvcCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNBLElBQVQsR0FBZ0I7QUFDZixNQUFJQyxFQUFFLEdBQUcsSUFBVDtBQUVBO0FBQ0Q7QUFDQTtBQUNBOztBQUNDLE9BQUtDLGFBQUwsR0FBcUIsQ0FDcEIsSUFEb0IsRUFFcEIsY0FGb0IsRUFHcEIsT0FIb0IsRUFJcEI7QUFDQTtBQUNBLFlBTm9CLEVBT3BCLE9BUG9CLEVBUXBCLE1BUm9CLEVBU3BCLFNBVG9CLEVBVXBCLGlCQVZvQixFQVdwQixVQVhvQixFQVlwQixTQVpvQixFQWFwQixXQWJvQixDQUFyQjtBQWdCQSxPQUFLQyxXQUFMLEdBQW1CLENBQ2xCLFFBRGtCLEVBRWxCLFNBRmtCLENBQW5CO0FBS0EsT0FBS0MsV0FBTCxHQUFtQixDQUNsQixVQURrQixDQUFuQjtBQUlBQyxFQUFBQSxJQUFJOztBQUVKLFdBQVNBLElBQVQsR0FBZ0I7QUFDZixRQUFJQyxRQUFRLEdBQUdMLEVBQUUsQ0FBQ0MsYUFBSCxDQUFpQkssTUFBakIsQ0FBd0JOLEVBQUUsQ0FBQ0UsV0FBM0IsQ0FBZjs7QUFFQSxTQUFLLElBQUlLLFNBQVMsR0FBRyxDQUFyQixFQUF3QkEsU0FBUyxHQUFHRixRQUFRLENBQUNHLE1BQTdDLEVBQXFERCxTQUFTLEVBQTlELEVBQWtFO0FBQ2pFLFVBQUlFLElBQUksR0FBR0osUUFBUSxDQUFDRSxTQUFELENBQW5CO0FBQ0FQLE1BQUFBLEVBQUUsQ0FBQ1MsSUFBRCxDQUFGLEdBQVcsSUFBWDtBQUNBOztBQUFBO0FBQ0Q7QUFDRDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixJQUFqQixDLENBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgY2xpZW50U3RhdGUgZnJvbSAnLi9DbGllbnRTdGF0ZSc7XHJcblxyXG4vKipcclxuICogVGhpcyBjbGFzcyBpcyB1c2VkIGJ5IGJvdGggc2VydmVyIGFuZCBjbGllbnQgdG9cclxuICogd29yayB3aXRoIHN0YXJzOyBsYXJnZWx5IGFzIGEgY2VudHJhbGl6ZWRcclxuICogZGF0YSBzdHJ1Y3R1cmUuXHJcbiAqIEBjb25zdHJ1Y3RvclxyXG4gKi9cclxuZnVuY3Rpb24gU3RhcigpIHtcclxuXHR2YXIgbWUgPSB0aGlzO1xyXG5cclxuXHQvKipcclxuXHQgKiBUaGUgcHJvcGVydGllcyByZWxldmFudCB0byBpbXBvcnQvZXhwb3J0IG1ldGhvZHMuXHJcblx0ICogQHR5cGUge0FycmF5fVxyXG5cdCAqL1xyXG5cdHRoaXMuaWRlbnRpdHlQcm9wcyA9IFtcclxuXHRcdCdpZCcsXHJcblx0XHQnb3JpZ2luU3RhcklEJyxcclxuXHRcdCd0aXRsZScsXHJcblx0XHQvLyAneCcsXHJcblx0XHQvLyAneScsXHJcblx0XHQncG9zaXRpb24nLFxyXG5cdFx0J2NvbG9yJyxcclxuXHRcdCd0aWVyJyxcclxuXHRcdCdjcmVhdG9yJyxcclxuXHRcdCdjb25zdGVsbGF0aW9uSUQnLFxyXG5cdFx0J2hvc3RUeXBlJyxcclxuXHRcdCdmaWxlVVJMJyxcclxuXHRcdCd0aW1lc3RhbXAnXHJcblx0XTtcclxuXHJcblx0dGhpcy5zZXJ2ZXJQcm9wcyA9IFtcclxuXHRcdCdhY3RpdmUnLFxyXG5cdFx0J2RlbGV0ZWQnLFxyXG5cdF07XHJcblxyXG5cdHRoaXMub2JqZWN0UHJvcHMgPSBbXHJcblx0XHQncG9zaXRpb24nXHJcblx0XTtcclxuXHJcblx0aW5pdCgpO1xyXG5cclxuXHRmdW5jdGlvbiBpbml0KCkge1xyXG5cdFx0dmFyIGFsbFByb3BzID0gbWUuaWRlbnRpdHlQcm9wcy5jb25jYXQobWUuc2VydmVyUHJvcHMpO1xyXG5cclxuXHRcdGZvciAodmFyIHByb3BJbmRleCA9IDA7IHByb3BJbmRleCA8IGFsbFByb3BzLmxlbmd0aDsgcHJvcEluZGV4KyspIHtcclxuXHRcdFx0dmFyIHByb3AgPSBhbGxQcm9wc1twcm9wSW5kZXhdO1xyXG5cdFx0XHRtZVtwcm9wXSA9IG51bGw7XHJcblx0XHR9O1xyXG5cdH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBTdGFyO1xyXG4vLyBleHBvcnQgZGVmYXVsdCBTdGFyKCk7XHJcbiJdLCJmaWxlIjoiLi9hYnN0cmFjdC9TdGFyLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./abstract/Star.js\n");

/***/ }),

/***/ "./abstract/Vector.js":
/*!****************************!*\
  !*** ./abstract/Vector.js ***!
  \****************************/
/***/ ((module) => {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * Simple vector class.\r\n */\nvar Vector = /*#__PURE__*/function () {\n  /**\r\n   * Create a new Vector.\r\n   * @param [x=0] {float} - x coordinate\r\n   * @param [y=0] {float} - y coordinate\r\n   */\n  function Vector() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, Vector);\n\n    /**\r\n     * X value.\r\n     * @type {float}\r\n     */\n    this.x = parseFloat(x);\n    /**\r\n     * Y value.\r\n     * @type {float}\r\n     */\n\n    this.y = parseFloat(y);\n  }\n  /**\r\n   * Returns a new vector which is the result of adding this and another vector.\r\n   * @param inputVector {Vector} - Vector to add.\r\n   * @returns {Vector} Sum of this vector and inputVector\r\n   */\n\n\n  _createClass(Vector, [{\n    key: \"add\",\n    value: function add(inputVector) {\n      return new Vector(this.x + inputVector.x, this.y + inputVector.y);\n    }\n    /**\r\n     * Returns a new vector which is the result of subtracting inputVector from this vector.\r\n     * @param inputVector {Vector} - Vector to subtract.\r\n     * @returns {Vector} Result of subtracting inputVector from this one.\r\n     */\n\n  }, {\n    key: \"subtract\",\n    value: function subtract(inputVector) {\n      if (inputVector instanceof Vector == false) {\n        ///MOVE\n        console.error(\"not a vector\");\n        throw new Error(\"inputVector not a Vector\");\n      }\n\n      return new Vector(this.x - inputVector.x, this.y - inputVector.y);\n    }\n    /**\r\n     * Returns a new vector which is the result of dividing the components of this one by a number.\r\n     * @param divisor {float} - Vector to subtract.\r\n     * @returns {Vector} Result of dividing components by divisor.\r\n     * @todo Consider handling zero vector\r\n     */\n\n  }, {\n    key: \"divideComponents\",\n    value: function divideComponents(divisor) {\n      return new Vector(this.x / divisor, this.y / divisor);\n    }\n    /**\r\n     * Returns a new vector which is this vector scaled by a number. Essentially multiplies the components by a number.\r\n     * @param amount {float} - Amount to scale the vector by.\r\n     * @returns {Vector} Scaled vector.\r\n     */\n\n  }, {\n    key: \"scale\",\n    value: function scale(amount) {\n      return new Vector(this.x * amount, this.y * amount);\n    }\n    /**\r\n     * Returns a normalized instance of this vector.\r\n     * @returns {Vector} Normalized vector.\r\n     * @todo Consider handling zero vector\r\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var magnitude = this.getMagnitude();\n      return this.divideComponents(magnitude);\n    }\n    /**\r\n     * Returns magnitude of vector.\r\n     * @returns {float}\r\n     */\n\n  }, {\n    key: \"getMagnitude\",\n    value: function getMagnitude() {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    /**\r\n     * Returns new vector with properties of this vector rounded down.\r\n     * @returns {Vector} rounded vector.\r\n     */\n\n  }, {\n    key: \"floor\",\n    value: function floor() {\n      return new Vector(Math.floor(this.x), Math.floor(this.y));\n    }\n  }]);\n\n  return Vector;\n}();\n\nmodule.exports = Vector; // export default Vector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWxlcGhlbmVzaXMtbm9kZWpzLy4vYWJzdHJhY3QvVmVjdG9yLmpzP2YxZDUiXSwibmFtZXMiOlsiVmVjdG9yIiwieCIsInkiLCJwYXJzZUZsb2F0IiwiaW5wdXRWZWN0b3IiLCJjb25zb2xlIiwiZXJyb3IiLCJFcnJvciIsImRpdmlzb3IiLCJhbW91bnQiLCJtYWduaXR1ZGUiLCJnZXRNYWduaXR1ZGUiLCJkaXZpZGVDb21wb25lbnRzIiwiTWF0aCIsInNxcnQiLCJmbG9vciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtJQUNNQSxNO0FBQ0w7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNDLG9CQUEwQjtBQUFBLFFBQWRDLENBQWMsdUVBQVYsQ0FBVTtBQUFBLFFBQVBDLENBQU8sdUVBQUgsQ0FBRzs7QUFBQTs7QUFDekI7QUFDRjtBQUNBO0FBQ0E7QUFDRSxTQUFLRCxDQUFMLEdBQVNFLFVBQVUsQ0FBQ0YsQ0FBRCxDQUFuQjtBQUVBO0FBQ0Y7QUFDQTtBQUNBOztBQUNFLFNBQUtDLENBQUwsR0FBU0MsVUFBVSxDQUFDRCxDQUFELENBQW5CO0FBQ0E7QUFFRDtBQUNEO0FBQ0E7QUFDQTtBQUNBOzs7OztXQUNDLGFBQUlFLFdBQUosRUFBaUI7QUFDaEIsYUFBTyxJQUFJSixNQUFKLENBQ04sS0FBS0MsQ0FBTCxHQUFTRyxXQUFXLENBQUNILENBRGYsRUFFTixLQUFLQyxDQUFMLEdBQVNFLFdBQVcsQ0FBQ0YsQ0FGZixDQUFQO0FBSUE7QUFFRDtBQUNEO0FBQ0E7QUFDQTtBQUNBOzs7O1dBQ0Msa0JBQVNFLFdBQVQsRUFBc0I7QUFDckIsVUFBR0EsV0FBVyxZQUFZSixNQUF2QixJQUFpQyxLQUFwQyxFQUEyQztBQUFFO0FBQzVDSyxRQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBYyxjQUFkO0FBQ0EsY0FBTSxJQUFJQyxLQUFKLENBQVUsMEJBQVYsQ0FBTjtBQUNBOztBQUVELGFBQU8sSUFBSVAsTUFBSixDQUNOLEtBQUtDLENBQUwsR0FBU0csV0FBVyxDQUFDSCxDQURmLEVBRU4sS0FBS0MsQ0FBTCxHQUFTRSxXQUFXLENBQUNGLENBRmYsQ0FBUDtBQUlBO0FBRUQ7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O1dBQ0MsMEJBQWlCTSxPQUFqQixFQUEwQjtBQUN6QixhQUFPLElBQUlSLE1BQUosQ0FDTixLQUFLQyxDQUFMLEdBQVNPLE9BREgsRUFFTixLQUFLTixDQUFMLEdBQVNNLE9BRkgsQ0FBUDtBQUlBO0FBRUQ7QUFDRDtBQUNBO0FBQ0E7QUFDQTs7OztXQUNDLGVBQU1DLE1BQU4sRUFBYztBQUNiLGFBQU8sSUFBSVQsTUFBSixDQUNOLEtBQUtDLENBQUwsR0FBU1EsTUFESCxFQUVOLEtBQUtQLENBQUwsR0FBU08sTUFGSCxDQUFQO0FBSUE7QUFFRDtBQUNEO0FBQ0E7QUFDQTtBQUNBOzs7O1dBQ0MscUJBQVk7QUFDWCxVQUFJQyxTQUFTLEdBQUcsS0FBS0MsWUFBTCxFQUFoQjtBQUNBLGFBQU8sS0FBS0MsZ0JBQUwsQ0FBc0JGLFNBQXRCLENBQVA7QUFDQTtBQUVEO0FBQ0Q7QUFDQTtBQUNBOzs7O1dBQ0Msd0JBQWU7QUFDZCxhQUFPRyxJQUFJLENBQUNDLElBQUwsQ0FBVSxLQUFLYixDQUFMLEdBQU8sS0FBS0EsQ0FBWixHQUFnQixLQUFLQyxDQUFMLEdBQU8sS0FBS0EsQ0FBdEMsQ0FBUDtBQUNBO0FBRUQ7QUFDRDtBQUNBO0FBQ0E7Ozs7V0FDQyxpQkFBUTtBQUNQLGFBQU8sSUFBSUYsTUFBSixDQUFXYSxJQUFJLENBQUNFLEtBQUwsQ0FBVyxLQUFLZCxDQUFoQixDQUFYLEVBQStCWSxJQUFJLENBQUNFLEtBQUwsQ0FBVyxLQUFLYixDQUFoQixDQUEvQixDQUFQO0FBQ0E7Ozs7OztBQUdGYyxNQUFNLENBQUNDLE9BQVAsR0FBaUJqQixNQUFqQixDLENBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogU2ltcGxlIHZlY3RvciBjbGFzcy5cclxuICovXHJcbmNsYXNzIFZlY3RvciB7XHJcblx0LyoqXHJcblx0ICogQ3JlYXRlIGEgbmV3IFZlY3Rvci5cclxuXHQgKiBAcGFyYW0gW3g9MF0ge2Zsb2F0fSAtIHggY29vcmRpbmF0ZVxyXG5cdCAqIEBwYXJhbSBbeT0wXSB7ZmxvYXR9IC0geSBjb29yZGluYXRlXHJcblx0ICovXHJcblx0Y29uc3RydWN0b3IoeCA9IDAsIHkgPSAwKSB7XHJcblx0XHQvKipcclxuXHRcdCAqIFggdmFsdWUuXHJcblx0XHQgKiBAdHlwZSB7ZmxvYXR9XHJcblx0XHQgKi9cclxuXHRcdHRoaXMueCA9IHBhcnNlRmxvYXQoeCk7XHJcblxyXG5cdFx0LyoqXHJcblx0XHQgKiBZIHZhbHVlLlxyXG5cdFx0ICogQHR5cGUge2Zsb2F0fVxyXG5cdFx0ICovXHJcblx0XHR0aGlzLnkgPSBwYXJzZUZsb2F0KHkpO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogUmV0dXJucyBhIG5ldyB2ZWN0b3Igd2hpY2ggaXMgdGhlIHJlc3VsdCBvZiBhZGRpbmcgdGhpcyBhbmQgYW5vdGhlciB2ZWN0b3IuXHJcblx0ICogQHBhcmFtIGlucHV0VmVjdG9yIHtWZWN0b3J9IC0gVmVjdG9yIHRvIGFkZC5cclxuXHQgKiBAcmV0dXJucyB7VmVjdG9yfSBTdW0gb2YgdGhpcyB2ZWN0b3IgYW5kIGlucHV0VmVjdG9yXHJcblx0ICovXHJcblx0YWRkKGlucHV0VmVjdG9yKSB7XHJcblx0XHRyZXR1cm4gbmV3IFZlY3RvcihcclxuXHRcdFx0dGhpcy54ICsgaW5wdXRWZWN0b3IueCxcclxuXHRcdFx0dGhpcy55ICsgaW5wdXRWZWN0b3IueVxyXG5cdFx0KTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIFJldHVybnMgYSBuZXcgdmVjdG9yIHdoaWNoIGlzIHRoZSByZXN1bHQgb2Ygc3VidHJhY3RpbmcgaW5wdXRWZWN0b3IgZnJvbSB0aGlzIHZlY3Rvci5cclxuXHQgKiBAcGFyYW0gaW5wdXRWZWN0b3Ige1ZlY3Rvcn0gLSBWZWN0b3IgdG8gc3VidHJhY3QuXHJcblx0ICogQHJldHVybnMge1ZlY3Rvcn0gUmVzdWx0IG9mIHN1YnRyYWN0aW5nIGlucHV0VmVjdG9yIGZyb20gdGhpcyBvbmUuXHJcblx0ICovXHJcblx0c3VidHJhY3QoaW5wdXRWZWN0b3IpIHtcclxuXHRcdGlmKGlucHV0VmVjdG9yIGluc3RhbmNlb2YgVmVjdG9yID09IGZhbHNlKSB7IC8vL01PVkVcclxuXHRcdFx0Y29uc29sZS5lcnJvcihcIm5vdCBhIHZlY3RvclwiKTtcclxuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiaW5wdXRWZWN0b3Igbm90IGEgVmVjdG9yXCIpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBuZXcgVmVjdG9yKFxyXG5cdFx0XHR0aGlzLnggLSBpbnB1dFZlY3Rvci54LFxyXG5cdFx0XHR0aGlzLnkgLSBpbnB1dFZlY3Rvci55XHJcblx0XHQpO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogUmV0dXJucyBhIG5ldyB2ZWN0b3Igd2hpY2ggaXMgdGhlIHJlc3VsdCBvZiBkaXZpZGluZyB0aGUgY29tcG9uZW50cyBvZiB0aGlzIG9uZSBieSBhIG51bWJlci5cclxuXHQgKiBAcGFyYW0gZGl2aXNvciB7ZmxvYXR9IC0gVmVjdG9yIHRvIHN1YnRyYWN0LlxyXG5cdCAqIEByZXR1cm5zIHtWZWN0b3J9IFJlc3VsdCBvZiBkaXZpZGluZyBjb21wb25lbnRzIGJ5IGRpdmlzb3IuXHJcblx0ICogQHRvZG8gQ29uc2lkZXIgaGFuZGxpbmcgemVybyB2ZWN0b3JcclxuXHQgKi9cclxuXHRkaXZpZGVDb21wb25lbnRzKGRpdmlzb3IpIHtcclxuXHRcdHJldHVybiBuZXcgVmVjdG9yKFxyXG5cdFx0XHR0aGlzLnggLyBkaXZpc29yLFxyXG5cdFx0XHR0aGlzLnkgLyBkaXZpc29yXHJcblx0XHQpO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogUmV0dXJucyBhIG5ldyB2ZWN0b3Igd2hpY2ggaXMgdGhpcyB2ZWN0b3Igc2NhbGVkIGJ5IGEgbnVtYmVyLiBFc3NlbnRpYWxseSBtdWx0aXBsaWVzIHRoZSBjb21wb25lbnRzIGJ5IGEgbnVtYmVyLlxyXG5cdCAqIEBwYXJhbSBhbW91bnQge2Zsb2F0fSAtIEFtb3VudCB0byBzY2FsZSB0aGUgdmVjdG9yIGJ5LlxyXG5cdCAqIEByZXR1cm5zIHtWZWN0b3J9IFNjYWxlZCB2ZWN0b3IuXHJcblx0ICovXHJcblx0c2NhbGUoYW1vdW50KSB7XHJcblx0XHRyZXR1cm4gbmV3IFZlY3RvcihcclxuXHRcdFx0dGhpcy54ICogYW1vdW50LFxyXG5cdFx0XHR0aGlzLnkgKiBhbW91bnRcclxuXHRcdCk7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBSZXR1cm5zIGEgbm9ybWFsaXplZCBpbnN0YW5jZSBvZiB0aGlzIHZlY3Rvci5cclxuXHQgKiBAcmV0dXJucyB7VmVjdG9yfSBOb3JtYWxpemVkIHZlY3Rvci5cclxuXHQgKiBAdG9kbyBDb25zaWRlciBoYW5kbGluZyB6ZXJvIHZlY3RvclxyXG5cdCAqL1xyXG5cdG5vcm1hbGl6ZSgpIHtcclxuXHRcdHZhciBtYWduaXR1ZGUgPSB0aGlzLmdldE1hZ25pdHVkZSgpO1xyXG5cdFx0cmV0dXJuIHRoaXMuZGl2aWRlQ29tcG9uZW50cyhtYWduaXR1ZGUpO1xyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogUmV0dXJucyBtYWduaXR1ZGUgb2YgdmVjdG9yLlxyXG5cdCAqIEByZXR1cm5zIHtmbG9hdH1cclxuXHQgKi9cclxuXHRnZXRNYWduaXR1ZGUoKSB7XHJcblx0XHRyZXR1cm4gTWF0aC5zcXJ0KHRoaXMueCp0aGlzLnggKyB0aGlzLnkqdGhpcy55KTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIFJldHVybnMgbmV3IHZlY3RvciB3aXRoIHByb3BlcnRpZXMgb2YgdGhpcyB2ZWN0b3Igcm91bmRlZCBkb3duLlxyXG5cdCAqIEByZXR1cm5zIHtWZWN0b3J9IHJvdW5kZWQgdmVjdG9yLlxyXG5cdCAqL1xyXG5cdGZsb29yKCkge1xyXG5cdFx0cmV0dXJuIG5ldyBWZWN0b3IoTWF0aC5mbG9vcih0aGlzLngpLCBNYXRoLmZsb29yKHRoaXMueSkpO1xyXG5cdH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBWZWN0b3I7XHJcbi8vIGV4cG9ydCBkZWZhdWx0IFZlY3RvcjtcclxuIl0sImZpbGUiOiIuL2Fic3RyYWN0L1ZlY3Rvci5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./abstract/Vector.js\n");

/***/ }),

/***/ "./abstract/constants.js":
/*!*******************************!*\
  !*** ./abstract/constants.js ***!
  \*******************************/
/***/ ((module) => {

eval("/** @namespace CONSTANTS **/\nvar CONSTANTS = {\n  /**\r\n   * Error codes.\r\n   * @readonly\r\n   * @enum {string}\r\n   **/\n  ERROR: {\n    /** Represents user attempting to create without tickets. **/\n    NO_CREATION_TICKETS: \"NO_CREATION_TICKETS\",\n\n    /** Represents user attempting to recreate without tickets. **/\n    NO_RECREATION_TICKETS: \"NO_RECREATION_TICKETS\"\n  },\n\n  /**\r\n   * Star ordering methods.\r\n   * @readonly\r\n   * @enum {string}\r\n   **/\n  ORDER: {\n    MOST_RECENT: \"MOST_RECENT\",\n    MOST_POPULAR: \"MOST_POPULAR\",\n    BOOKMARKS: \"BOOKMARKS\",\n    CONSTELLATIONS: \"CONSTELLATIONS\",\n    ///REVISIT architecture; also both order and view?\n    GALAXY: \"GALAXY\" ///REVISIT do we want this in both order and view or should we choose one?\n\n  },\n\n  /**\r\n   * Galaxy views.\r\n   * @readonly\r\n   * @enum {string}\r\n   **/\n  VIEW: {\n    LIST: \"LIST\",\n    GRID: \"GRID\",\n    CONSTELLATIONS: \"CONSTELLATIONS\",\n    ///REVISIT architecture\n    GALAXY: \"GALAXY\"\n  },\n\n  /**\r\n   * Client page actions.\r\n   * @readonly\r\n   * @enum {string}\r\n   **/\n  ACTION: {\n    TOGGLE_BOOKMARK: \"TOGGLE_BOOKMARK\",\n    USE_CREATION_TICKET: \"USE_CREATION_TICKET\",\n    USE_RECREATION_TICKET: \"USE_RECREATION_TICKET\"\n  }\n}; //export const ERROR = {\n\nmodule.exports = CONSTANTS;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWxlcGhlbmVzaXMtbm9kZWpzLy4vYWJzdHJhY3QvY29uc3RhbnRzLmpzP2YwYzEiXSwibmFtZXMiOlsiQ09OU1RBTlRTIiwiRVJST1IiLCJOT19DUkVBVElPTl9USUNLRVRTIiwiTk9fUkVDUkVBVElPTl9USUNLRVRTIiwiT1JERVIiLCJNT1NUX1JFQ0VOVCIsIk1PU1RfUE9QVUxBUiIsIkJPT0tNQVJLUyIsIkNPTlNURUxMQVRJT05TIiwiR0FMQVhZIiwiVklFVyIsIkxJU1QiLCJHUklEIiwiQUNUSU9OIiwiVE9HR0xFX0JPT0tNQVJLIiwiVVNFX0NSRUFUSU9OX1RJQ0tFVCIsIlVTRV9SRUNSRUFUSU9OX1RJQ0tFVCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBTUEsU0FBUyxHQUFHO0FBQ2pCO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQ0MsRUFBQUEsS0FBSyxFQUFFO0FBQ047QUFDQUMsSUFBQUEsbUJBQW1CLEVBQUUscUJBRmY7O0FBR047QUFDQUMsSUFBQUEscUJBQXFCLEVBQUU7QUFKakIsR0FOVTs7QUFhakI7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNDQyxFQUFBQSxLQUFLLEVBQUU7QUFDTkMsSUFBQUEsV0FBVyxFQUFFLGFBRFA7QUFFTkMsSUFBQUEsWUFBWSxFQUFFLGNBRlI7QUFHTkMsSUFBQUEsU0FBUyxFQUFFLFdBSEw7QUFJTkMsSUFBQUEsY0FBYyxFQUFFLGdCQUpWO0FBSTRCO0FBQ2xDQyxJQUFBQSxNQUFNLEVBQUUsUUFMRixDQUtZOztBQUxaLEdBbEJVOztBQTBCakI7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNDQyxFQUFBQSxJQUFJLEVBQUU7QUFDTEMsSUFBQUEsSUFBSSxFQUFFLE1BREQ7QUFFTEMsSUFBQUEsSUFBSSxFQUFFLE1BRkQ7QUFHTEosSUFBQUEsY0FBYyxFQUFFLGdCQUhYO0FBRzZCO0FBQ2xDQyxJQUFBQSxNQUFNLEVBQUU7QUFKSCxHQS9CVzs7QUFzQ2pCO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQ0ksRUFBQUEsTUFBTSxFQUFFO0FBQ1BDLElBQUFBLGVBQWUsRUFBRSxpQkFEVjtBQUVQQyxJQUFBQSxtQkFBbUIsRUFBRSxxQkFGZDtBQUdQQyxJQUFBQSxxQkFBcUIsRUFBRTtBQUhoQjtBQTNDUyxDQUFsQixDLENBa0RBOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJsQixTQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAbmFtZXNwYWNlIENPTlNUQU5UUyAqKi9cclxuXHJcbmNvbnN0IENPTlNUQU5UUyA9IHtcclxuXHQvKipcclxuXHQgKiBFcnJvciBjb2Rlcy5cclxuXHQgKiBAcmVhZG9ubHlcclxuXHQgKiBAZW51bSB7c3RyaW5nfVxyXG5cdCAqKi9cclxuXHRFUlJPUjoge1xyXG5cdFx0LyoqIFJlcHJlc2VudHMgdXNlciBhdHRlbXB0aW5nIHRvIGNyZWF0ZSB3aXRob3V0IHRpY2tldHMuICoqL1xyXG5cdFx0Tk9fQ1JFQVRJT05fVElDS0VUUzogXCJOT19DUkVBVElPTl9USUNLRVRTXCIsXHJcblx0XHQvKiogUmVwcmVzZW50cyB1c2VyIGF0dGVtcHRpbmcgdG8gcmVjcmVhdGUgd2l0aG91dCB0aWNrZXRzLiAqKi9cclxuXHRcdE5PX1JFQ1JFQVRJT05fVElDS0VUUzogXCJOT19SRUNSRUFUSU9OX1RJQ0tFVFNcIixcclxuXHR9LFxyXG5cclxuXHQvKipcclxuXHQgKiBTdGFyIG9yZGVyaW5nIG1ldGhvZHMuXHJcblx0ICogQHJlYWRvbmx5XHJcblx0ICogQGVudW0ge3N0cmluZ31cclxuXHQgKiovXHJcblx0T1JERVI6IHtcclxuXHRcdE1PU1RfUkVDRU5UOiBcIk1PU1RfUkVDRU5UXCIsXHJcblx0XHRNT1NUX1BPUFVMQVI6IFwiTU9TVF9QT1BVTEFSXCIsXHJcblx0XHRCT09LTUFSS1M6IFwiQk9PS01BUktTXCIsXHJcblx0XHRDT05TVEVMTEFUSU9OUzogXCJDT05TVEVMTEFUSU9OU1wiLCAvLy9SRVZJU0lUIGFyY2hpdGVjdHVyZTsgYWxzbyBib3RoIG9yZGVyIGFuZCB2aWV3P1xyXG5cdFx0R0FMQVhZOiBcIkdBTEFYWVwiLCAvLy9SRVZJU0lUIGRvIHdlIHdhbnQgdGhpcyBpbiBib3RoIG9yZGVyIGFuZCB2aWV3IG9yIHNob3VsZCB3ZSBjaG9vc2Ugb25lP1xyXG5cdH0sXHJcblxyXG5cdC8qKlxyXG5cdCAqIEdhbGF4eSB2aWV3cy5cclxuXHQgKiBAcmVhZG9ubHlcclxuXHQgKiBAZW51bSB7c3RyaW5nfVxyXG5cdCAqKi9cclxuXHRWSUVXOiB7XHJcblx0XHRMSVNUOiBcIkxJU1RcIixcclxuXHRcdEdSSUQ6IFwiR1JJRFwiLFxyXG5cdFx0Q09OU1RFTExBVElPTlM6IFwiQ09OU1RFTExBVElPTlNcIiwgLy8vUkVWSVNJVCBhcmNoaXRlY3R1cmVcclxuXHRcdEdBTEFYWTogXCJHQUxBWFlcIixcclxuXHR9LFxyXG5cclxuXHQvKipcclxuXHQgKiBDbGllbnQgcGFnZSBhY3Rpb25zLlxyXG5cdCAqIEByZWFkb25seVxyXG5cdCAqIEBlbnVtIHtzdHJpbmd9XHJcblx0ICoqL1xyXG5cdEFDVElPTjoge1xyXG5cdFx0VE9HR0xFX0JPT0tNQVJLOiBcIlRPR0dMRV9CT09LTUFSS1wiLFxyXG5cdFx0VVNFX0NSRUFUSU9OX1RJQ0tFVDogXCJVU0VfQ1JFQVRJT05fVElDS0VUXCIsXHJcblx0XHRVU0VfUkVDUkVBVElPTl9USUNLRVQ6IFwiVVNFX1JFQ1JFQVRJT05fVElDS0VUXCIsXHJcblx0fSxcclxufVxyXG5cclxuLy9leHBvcnQgY29uc3QgRVJST1IgPSB7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IENPTlNUQU5UUztcclxuIl0sImZpbGUiOiIuL2Fic3RyYWN0L2NvbnN0YW50cy5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./abstract/constants.js\n");

/***/ }),

/***/ "./abstract/telep.config.js":
/*!**********************************!*\
  !*** ./abstract/telep.config.js ***!
  \**********************************/
/***/ ((module) => {

eval("module.exports = {\n  /** Minimum account level required to create stars. **/\n  creatorLevel: 0,\n\n  /** Enforced space between stars. **/\n  starSpacing: 50\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWxlcGhlbmVzaXMtbm9kZWpzLy4vYWJzdHJhY3QvdGVsZXAuY29uZmlnLmpzP2RlMzMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0b3JMZXZlbCIsInN0YXJTcGFjaW5nIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2hCO0FBQ0FDLEVBQUFBLFlBQVksRUFBRSxDQUZFOztBQUloQjtBQUNBQyxFQUFBQSxXQUFXLEVBQUU7QUFMRyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xyXG5cdC8qKiBNaW5pbXVtIGFjY291bnQgbGV2ZWwgcmVxdWlyZWQgdG8gY3JlYXRlIHN0YXJzLiAqKi9cclxuXHRjcmVhdG9yTGV2ZWw6IDAsXHJcblxyXG5cdC8qKiBFbmZvcmNlZCBzcGFjZSBiZXR3ZWVuIHN0YXJzLiAqKi9cclxuXHRzdGFyU3BhY2luZzogNTAsXHJcbn1cclxuIl0sImZpbGUiOiIuL2Fic3RyYWN0L3RlbGVwLmNvbmZpZy5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./abstract/telep.config.js\n");

/***/ }),

/***/ "./client/js/admin.js":
/*!****************************!*\
  !*** ./client/js/admin.js ***!
  \****************************/
/***/ (() => {

eval("/***\r\n** ADMIN FUNCTIONS\r\n***/\nfunction initializeRecolor() {\n  /// consolidate:\n  var colorwheelSelect = document.getElementById('colorwheelSelect');\n  acting_star.appendChild(colorwheelSelect);\n  Anm.fadeIn(colorwheelSelect);\n  var x = parseInt(acting_star.style.left);\n  var y = parseInt(acting_star.style.top);\n  spc.ctr(x, y); /// create callback function for ctr? currently using validPlacementZone fadeOut delay\n  //// preventmovement?\n\n  var starLink = acting_star.getElementsByTagName('a')[0];\n  cor.al(colorwheelSelect, 'mousemove', getColor);\n  cor.al(colorwheelSelect, 'click', function () {\n    cor.rl(colorwheelSelect, 'mousemove', getColor);\n    var newrgb = starLink.style.backgroundColor.substr(4).slice(0, -1); /// bad code / maybe unreliable\n\n    Anm.fadeOut(colorwheelSelect);\n    var p = 'rgb=' + newrgb + '&sid=' + acting_star.id.split('s')[1];\n    ajx('/ajax/recolor', p, function (d) {\n      var r = JSON.parse(d);\n    });\n    acting_star = false;\n  });\n\n  function getColor(e) {\n    var cx = -(x + (spc.map.offsetLeft - e.clientX));\n    var cy = y + (spc.map.offsetTop - e.clientY);\n    var angle = -Math.atan2(cy, cx) * 180 / Math.PI + 180;\n    var selectedhue;\n    if (angle > 0 && angle < 60) selectedhue = 110;else if (angle > 60 && angle < 120) selectedhue = 60;else if (angle > 120 && angle < 180) selectedhue = 25;else if (angle > 180 && angle < 240) selectedhue = 0;else if (angle > 240 && angle < 300) selectedhue = 270;else if (angle > 300) selectedhue = 240;\n    starLink.style.backgroundColor = 'hsl(' + selectedhue + ', 45%, 80%)';\n  }\n}\n\nfunction initializeMove() {\n  cor.ac(acting_star, 'moving');\n  setTimeout(function () {\n    ////\n    cor.al(spc.element, 'click', clickStarMove);\n  }, 200);\n  cor.al(spc.element, 'mousemove', mouseMoveStarMove);\n\n  function mouseMoveStarMove(e) {\n    acting_star.style.left = e.clientX + 'px'; /// new variable; moving_star ?\n\n    acting_star.style.top = e.clientY + 'px'; /// new variable; moving_star ?\n  }\n\n  function clickStarMove(e) {\n    var x = e.clientX - spc.map.offsetLeft;\n    var y = e.clientY - spc.map.offsetTop;\n    var p = 'x=' + x + '&y=' + y + '&sid=' + acting_star.id.split('s')[1];\n    ajx('/ajax/move', p, function (d) {\n      var r = JSON.parse(d);\n    }); /// could be confused with place\n\n    acting_star = false;\n    cor.rl(spc.element, 'mousemove', mouseMoveStarMove);\n    cor.rl(spc.element, 'click', clickStarMove);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/admin.js\n");

/***/ }),

/***/ "./client/js/components/Admin.js":
/*!***************************************!*\
  !*** ./client/js/components/Admin.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../libs/minlab/cor */ \"./client/js/libs/minlab/cor.js\");\n/* harmony import */ var _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../libs/minlab/spc */ \"./client/js/libs/minlab/spc.js\");\n/* harmony import */ var _ClientState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ClientState */ \"./client/js/components/ClientState.js\");\n\n\n\n/**\r\n * Class of administrator methods.\r\n * @constructor\r\n **/\n\nfunction TelepAdmin() {\n  var me = this;\n  /**\r\n   * The star that an administrator is manipulating.\r\n   * @type {ClientStar}\r\n   **/\n\n  this.targetStar = null;\n\n  this.init = function () {\n    var adminLinks = document.querySelectorAll('a.admin');\n    adminLinks.forEach(function (adminLink) {\n      adminLink.addEventListener('click', onAdminLinkClick);\n    });\n  };\n\n  function onAdminLinkClick(event) {\n    event.preventDefault();\n    me.targetStar = _ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].actingStar; ///TODO probably improve architecture; maybe use URL()\n\n    var operation = event.target.pathname.split('/')[1];\n\n    switch (operation) {\n      case 'moveStar':\n        {\n          initializeMove();\n        }\n        break;\n\n      case 'recolorStar':\n        {\n          initializeRecolor();\n        }\n        break;\n\n      case 'deleteStar':\n        {\n          confirmDelete();\n        }\n        break;\n\n      case 'updateDBSchemas':\n        {\n          if (confirm(\"Update database schema to reflect changes in code?\")) {\n            _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].POST('/ajax/admin/updateDBSchemas');\n          }\n        }\n        break;\n\n      default:\n        {\n          console.error(\"Unhandled admin operation: \" + operation);\n        }\n    }\n  }\n\n  function initializeMove() {\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].actingStar.element, 'moving'); ///TODO I think it would cleaner maybe to reference like\n    //Creation.moveWorkingStarToMouse() rather than place these\n    //event listener callbacks right here:\n    // Have star follow mouse:\n\n    _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element.addEventListener('mousemove', mouseMoveStarMove); // Add click listener after a delay to prevent accidental clicks:\n\n    setTimeout(function () {\n      _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element.addEventListener('click', clickStarMove);\n    }, 200);\n  }\n\n  function mouseMoveStarMove(eve) {\n    me.targetStar.moveToXY(eve.clientX - _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].map.offsetLeft, ///TODO spc should just have properties... shouldnt have to use offsetLeft\n    eve.clientY - _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].map.offsetTop);\n  }\n\n  function clickStarMove(eve) {\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].POST('/ajax/admin/moveStar', {\n      starID: _ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].actingStar.id,\n      x: me.targetStar.position.x,\n      y: me.targetStar.position.y\n    });\n    _ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].actingStar = null;\n    _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element.removeEventListener('mousemove', mouseMoveStarMove);\n    _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element.removeEventListener('click', clickStarMove);\n  } //function initializeRecolor() {\n  //console.log('recolor');\n  //}\n\n\n  function confirmDelete() {\n    if (confirm(\"Delete the star?\")) {\n      ///FUTURE revisit admin ui some day\n      _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].POST('/ajax/admin/deleteStar', {\n        starID: _ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].actingStar.id\n      });\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new TelepAdmin());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDRDs7O0FBRUEsV0FBU1QsYUFBVCxHQUF5QjtBQUN4QixRQUFHQyxPQUFPLENBQUMsa0JBQUQsQ0FBVixFQUFnQztBQUFFO0FBQ2pDeEIsTUFBQUEsNkRBQUEsQ0FBUyx3QkFBVCxFQUFtQztBQUNsQ3dDLFFBQUFBLE1BQU0sRUFBRXRDLGtFQUF5QnVDO0FBREMsT0FBbkM7QUFHQTtBQUNEO0FBQ0Q7O0FBRUQsaUVBQWUsSUFBSXRDLFVBQUosRUFBZiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbGVwaGVuZXNpcy1ub2RlanMvLi9jbGllbnQvanMvY29tcG9uZW50cy9BZG1pbi5qcz80MWJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDT1IgZnJvbSAnLi4vbGlicy9taW5sYWIvY29yJztcclxuaW1wb3J0IHNwYyBmcm9tICcuLi9saWJzL21pbmxhYi9zcGMnO1xyXG5cclxuaW1wb3J0IGNsaWVudFN0YXRlIGZyb20gJy4vQ2xpZW50U3RhdGUnO1xyXG5cclxuLyoqXHJcbiAqIENsYXNzIG9mIGFkbWluaXN0cmF0b3IgbWV0aG9kcy5cclxuICogQGNvbnN0cnVjdG9yXHJcbiAqKi9cclxuZnVuY3Rpb24gVGVsZXBBZG1pbigpIHtcclxuXHR2YXIgbWUgPSB0aGlzO1xyXG5cclxuXHQvKipcclxuXHQgKiBUaGUgc3RhciB0aGF0IGFuIGFkbWluaXN0cmF0b3IgaXMgbWFuaXB1bGF0aW5nLlxyXG5cdCAqIEB0eXBlIHtDbGllbnRTdGFyfVxyXG5cdCAqKi9cclxuXHR0aGlzLnRhcmdldFN0YXIgPSBudWxsO1xyXG5cclxuXHR0aGlzLmluaXQgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBhZG1pbkxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYS5hZG1pbicpO1xyXG5cdFx0YWRtaW5MaW5rcy5mb3JFYWNoKGFkbWluTGluayA9PiB7XHJcblx0XHRcdGFkbWluTGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uQWRtaW5MaW5rQ2xpY2spO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBvbkFkbWluTGlua0NsaWNrKGV2ZW50KSB7XHJcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRcdG1lLnRhcmdldFN0YXIgPSBjbGllbnRTdGF0ZS5hY3RpbmdTdGFyO1xyXG5cclxuXHRcdC8vL1RPRE8gcHJvYmFibHkgaW1wcm92ZSBhcmNoaXRlY3R1cmU7IG1heWJlIHVzZSBVUkwoKVxyXG5cdFx0dmFyIG9wZXJhdGlvbiA9IGV2ZW50LnRhcmdldC5wYXRobmFtZS5zcGxpdCgnLycpWzFdO1xyXG5cdFx0c3dpdGNoKG9wZXJhdGlvbikge1xyXG5cdFx0XHRjYXNlICdtb3ZlU3Rhcic6IHtcclxuXHRcdFx0XHRpbml0aWFsaXplTW92ZSgpO1xyXG5cdFx0XHR9IGJyZWFrO1xyXG5cclxuXHRcdFx0Y2FzZSAncmVjb2xvclN0YXInOiB7XHJcblx0XHRcdFx0aW5pdGlhbGl6ZVJlY29sb3IoKTtcclxuXHRcdFx0fSBicmVhaztcclxuXHJcblx0XHRcdGNhc2UgJ2RlbGV0ZVN0YXInOiB7XHJcblx0XHRcdFx0Y29uZmlybURlbGV0ZSgpO1xyXG5cdFx0XHR9IGJyZWFrO1xyXG5cclxuXHRcdFx0Y2FzZSAndXBkYXRlREJTY2hlbWFzJzoge1xyXG5cdFx0XHRcdGlmKGNvbmZpcm0oXCJVcGRhdGUgZGF0YWJhc2Ugc2NoZW1hIHRvIHJlZmxlY3QgY2hhbmdlcyBpbiBjb2RlP1wiKSkge1xyXG5cdFx0XHRcdFx0Q09SLlBPU1QoJy9hamF4L2FkbWluL3VwZGF0ZURCU2NoZW1hcycpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBicmVhaztcclxuXHJcblx0XHRcdGRlZmF1bHQ6IHtcclxuXHRcdFx0XHRjb25zb2xlLmVycm9yKFwiVW5oYW5kbGVkIGFkbWluIG9wZXJhdGlvbjogXCIgKyBvcGVyYXRpb24pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBpbml0aWFsaXplTW92ZSgpIHtcclxuXHRcdENPUi5hYyhjbGllbnRTdGF0ZS5hY3RpbmdTdGFyLmVsZW1lbnQsICdtb3ZpbmcnKTtcclxuXHJcblx0XHQvLy9UT0RPIEkgdGhpbmsgaXQgd291bGQgY2xlYW5lciBtYXliZSB0byByZWZlcmVuY2UgbGlrZVxyXG5cdFx0Ly9DcmVhdGlvbi5tb3ZlV29ya2luZ1N0YXJUb01vdXNlKCkgcmF0aGVyIHRoYW4gcGxhY2UgdGhlc2VcclxuXHRcdC8vZXZlbnQgbGlzdGVuZXIgY2FsbGJhY2tzIHJpZ2h0IGhlcmU6XHJcblxyXG5cdFx0Ly8gSGF2ZSBzdGFyIGZvbGxvdyBtb3VzZTpcclxuXHRcdHNwYy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG1vdXNlTW92ZVN0YXJNb3ZlKTtcclxuXHJcblx0XHQvLyBBZGQgY2xpY2sgbGlzdGVuZXIgYWZ0ZXIgYSBkZWxheSB0byBwcmV2ZW50IGFjY2lkZW50YWwgY2xpY2tzOlxyXG5cdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdHNwYy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xpY2tTdGFyTW92ZSk7XHJcblx0XHR9LCAyMDApO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gbW91c2VNb3ZlU3Rhck1vdmUoZXZlKSB7XHJcblx0XHRtZS50YXJnZXRTdGFyLm1vdmVUb1hZKFxyXG5cdFx0XHRldmUuY2xpZW50WCAtIHNwYy5tYXAub2Zmc2V0TGVmdCwgLy8vVE9ETyBzcGMgc2hvdWxkIGp1c3QgaGF2ZSBwcm9wZXJ0aWVzLi4uIHNob3VsZG50IGhhdmUgdG8gdXNlIG9mZnNldExlZnRcclxuXHRcdFx0ZXZlLmNsaWVudFkgLSBzcGMubWFwLm9mZnNldFRvcCxcclxuXHRcdCk7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBjbGlja1N0YXJNb3ZlKGV2ZSkge1xyXG5cdFx0Q09SLlBPU1QoJy9hamF4L2FkbWluL21vdmVTdGFyJywge1xyXG5cdFx0XHRzdGFySUQ6IGNsaWVudFN0YXRlLmFjdGluZ1N0YXIuaWQsXHJcblx0XHRcdHg6IG1lLnRhcmdldFN0YXIucG9zaXRpb24ueCxcclxuXHRcdFx0eTogbWUudGFyZ2V0U3Rhci5wb3NpdGlvbi55LFxyXG5cdFx0fSk7XHJcblxyXG5cdFx0Y2xpZW50U3RhdGUuYWN0aW5nU3RhciA9IG51bGw7XHJcblxyXG5cdFx0c3BjLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgbW91c2VNb3ZlU3Rhck1vdmUpO1xyXG5cdFx0c3BjLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbGlja1N0YXJNb3ZlKTtcclxuXHR9XHJcblxyXG5cdC8vZnVuY3Rpb24gaW5pdGlhbGl6ZVJlY29sb3IoKSB7XHJcblx0XHQvL2NvbnNvbGUubG9nKCdyZWNvbG9yJyk7XHJcblx0Ly99XHJcblxyXG5cdGZ1bmN0aW9uIGNvbmZpcm1EZWxldGUoKSB7XHJcblx0XHRpZihjb25maXJtKFwiRGVsZXRlIHRoZSBzdGFyP1wiKSkgeyAvLy9GVVRVUkUgcmV2aXNpdCBhZG1pbiB1aSBzb21lIGRheVxyXG5cdFx0XHRDT1IuUE9TVCgnL2FqYXgvYWRtaW4vZGVsZXRlU3RhcicsIHtcclxuXHRcdFx0XHRzdGFySUQ6IGNsaWVudFN0YXRlLmFjdGluZ1N0YXIuaWQsXHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IFRlbGVwQWRtaW4oKTtcclxuIl0sIm5hbWVzIjpbIkNPUiIsInNwYyIsImNsaWVudFN0YXRlIiwiVGVsZXBBZG1pbiIsIm1lIiwidGFyZ2V0U3RhciIsImluaXQiLCJhZG1pbkxpbmtzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImFkbWluTGluayIsImFkZEV2ZW50TGlzdGVuZXIiLCJvbkFkbWluTGlua0NsaWNrIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImFjdGluZ1N0YXIiLCJvcGVyYXRpb24iLCJ0YXJnZXQiLCJwYXRobmFtZSIsInNwbGl0IiwiaW5pdGlhbGl6ZU1vdmUiLCJpbml0aWFsaXplUmVjb2xvciIsImNvbmZpcm1EZWxldGUiLCJjb25maXJtIiwiUE9TVCIsImNvbnNvbGUiLCJlcnJvciIsImFjIiwiZWxlbWVudCIsIm1vdXNlTW92ZVN0YXJNb3ZlIiwic2V0VGltZW91dCIsImNsaWNrU3Rhck1vdmUiLCJldmUiLCJtb3ZlVG9YWSIsImNsaWVudFgiLCJtYXAiLCJvZmZzZXRMZWZ0IiwiY2xpZW50WSIsIm9mZnNldFRvcCIsInN0YXJJRCIsImlkIiwieCIsInBvc2l0aW9uIiwieSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./client/js/components/Admin.js\n");

/***/ }),

/***/ "./client/js/components/ClientEffects.js":
/*!***********************************************!*\
  !*** ./client/js/components/ClientEffects.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ClientState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientState */ \"./client/js/components/ClientState.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ClientEffects());\n\nfunction ClientEffects() {\n  var me = this;\n  me.canvas;\n  me.context;\n\n  this.init = function () {\n    me.canvas = document.getElementById('uiEffects');\n    me.context = me.canvas.getContext('2d'); // Run onResize to initialize canvas size\n\n    me.onResize(); // Listen for window resize\n\n    window.addEventListener('resize', me.onResize);\n  };\n\n  this.onResize = function () {\n    ///REVISIT I don't like this solution but can't think of something\n    //better right now:\n    // Reset height of canvas so it is not a part of scrollWidth/scrollHeight\n    me.canvas.width = 0;\n    me.canvas.height = 0;\n    me.canvas.width = document.documentElement.scrollWidth;\n    me.canvas.height = document.documentElement.scrollHeight; //me.canvas.width = document.body.offsetWidth;\n    //me.canvas.height = document.body.offsetHeight;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvanMvY29tcG9uZW50cy9DbGllbnRFZmZlY3RzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFFQSxpRUFBZSxJQUFJQyxhQUFKLEVBQWY7O0FBRUEsU0FBU0EsYUFBVCxHQUF5QjtBQUN4QixNQUFJQyxFQUFFLEdBQUcsSUFBVDtBQUVBQSxFQUFBQSxFQUFFLENBQUNDLE1BQUg7QUFDQUQsRUFBQUEsRUFBRSxDQUFDRSxPQUFIOztBQUVBLE9BQUtDLElBQUwsR0FBWSxZQUFXO0FBQ3RCSCxJQUFBQSxFQUFFLENBQUNDLE1BQUgsR0FBWUcsUUFBUSxDQUFDQyxjQUFULENBQXdCLFdBQXhCLENBQVo7QUFDQUwsSUFBQUEsRUFBRSxDQUFDRSxPQUFILEdBQWFGLEVBQUUsQ0FBQ0MsTUFBSCxDQUFVSyxVQUFWLENBQXFCLElBQXJCLENBQWIsQ0FGc0IsQ0FJdEI7O0FBQ0FOLElBQUFBLEVBQUUsQ0FBQ08sUUFBSCxHQUxzQixDQU90Qjs7QUFDQUMsSUFBQUEsTUFBTSxDQUFDQyxnQkFBUCxDQUF3QixRQUF4QixFQUFrQ1QsRUFBRSxDQUFDTyxRQUFyQztBQUNBLEdBVEQ7O0FBV0EsT0FBS0EsUUFBTCxHQUFnQixZQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBUCxJQUFBQSxFQUFFLENBQUNDLE1BQUgsQ0FBVVMsS0FBVixHQUFrQixDQUFsQjtBQUNBVixJQUFBQSxFQUFFLENBQUNDLE1BQUgsQ0FBVVUsTUFBVixHQUFtQixDQUFuQjtBQUVBWCxJQUFBQSxFQUFFLENBQUNDLE1BQUgsQ0FBVVMsS0FBVixHQUFrQk4sUUFBUSxDQUFDUSxlQUFULENBQXlCQyxXQUEzQztBQUNBYixJQUFBQSxFQUFFLENBQUNDLE1BQUgsQ0FBVVUsTUFBVixHQUFtQlAsUUFBUSxDQUFDUSxlQUFULENBQXlCRSxZQUE1QyxDQVIwQixDQVMxQjtBQUNBO0FBQ0EsR0FYRDtBQVlBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVsZXBoZW5lc2lzLW5vZGVqcy8uL2NsaWVudC9qcy9jb21wb25lbnRzL0NsaWVudEVmZmVjdHMuanM/OTE1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2xpZW50U3RhdGUgZnJvbSAnLi9DbGllbnRTdGF0ZSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgQ2xpZW50RWZmZWN0cygpO1xyXG5cclxuZnVuY3Rpb24gQ2xpZW50RWZmZWN0cygpIHtcclxuXHR2YXIgbWUgPSB0aGlzO1xyXG5cclxuXHRtZS5jYW52YXM7XHJcblx0bWUuY29udGV4dDtcclxuXHJcblx0dGhpcy5pbml0ID0gZnVuY3Rpb24oKSB7XHJcblx0XHRtZS5jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndWlFZmZlY3RzJyk7XHJcblx0XHRtZS5jb250ZXh0ID0gbWUuY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcblxyXG5cdFx0Ly8gUnVuIG9uUmVzaXplIHRvIGluaXRpYWxpemUgY2FudmFzIHNpemVcclxuXHRcdG1lLm9uUmVzaXplKCk7XHJcblxyXG5cdFx0Ly8gTGlzdGVuIGZvciB3aW5kb3cgcmVzaXplXHJcblx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgbWUub25SZXNpemUpO1xyXG5cdH1cclxuXHJcblx0dGhpcy5vblJlc2l6ZSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0Ly8vUkVWSVNJVCBJIGRvbid0IGxpa2UgdGhpcyBzb2x1dGlvbiBidXQgY2FuJ3QgdGhpbmsgb2Ygc29tZXRoaW5nXHJcblx0XHQvL2JldHRlciByaWdodCBub3c6XHJcblx0XHQvLyBSZXNldCBoZWlnaHQgb2YgY2FudmFzIHNvIGl0IGlzIG5vdCBhIHBhcnQgb2Ygc2Nyb2xsV2lkdGgvc2Nyb2xsSGVpZ2h0XHJcblx0XHRtZS5jYW52YXMud2lkdGggPSAwO1xyXG5cdFx0bWUuY2FudmFzLmhlaWdodCA9IDA7XHJcblxyXG5cdFx0bWUuY2FudmFzLndpZHRoID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFdpZHRoO1xyXG5cdFx0bWUuY2FudmFzLmhlaWdodCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQ7XHJcblx0XHQvL21lLmNhbnZhcy53aWR0aCA9IGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7XHJcblx0XHQvL21lLmNhbnZhcy5oZWlnaHQgPSBkb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodDtcclxuXHR9XHJcbn1cclxuIl0sIm5hbWVzIjpbImNsaWVudFN0YXRlIiwiQ2xpZW50RWZmZWN0cyIsIm1lIiwiY2FudmFzIiwiY29udGV4dCIsImluaXQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0Q29udGV4dCIsIm9uUmVzaXplIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsIndpZHRoIiwiaGVpZ2h0IiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsV2lkdGgiLCJzY3JvbGxIZWlnaHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./client/js/components/ClientEffects.js\n");

/***/ }),

/***/ "./client/js/components/ClientStar.js":
/*!********************************************!*\
  !*** ./client/js/components/ClientStar.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! animejs/lib/anime.es.js */ \"./node_modules/animejs/lib/anime.es.js\");\n/* harmony import */ var _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../libs/minlab/cor */ \"./client/js/libs/minlab/cor.js\");\n/* harmony import */ var _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../libs/minlab/spc */ \"./client/js/libs/minlab/spc.js\");\n/* harmony import */ var _abstract_Star_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../abstract/Star.js */ \"./abstract/Star.js\");\n/* harmony import */ var _abstract_Star_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_abstract_Star_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _abstract_Vector_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../abstract/Vector.js */ \"./abstract/Vector.js\");\n/* harmony import */ var _abstract_Vector_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_abstract_Vector_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _MediaPlayer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MediaPlayer */ \"./client/js/components/MediaPlayer.js\");\n/* harmony import */ var _ClientState__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ClientState */ \"./client/js/components/ClientState.js\");\n/* harmony import */ var _Navigation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Navigation */ \"./client/js/components/Navigation.js\");\n\n\n //// ultimately whatever spc becomes probably won't output a singleton\n// import clientState from './components/ClientState';\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ClientStar);\n/**\r\n * Star data structure for client use.\r\n * @param [element] {Element} - Optional pre-existing DOM element which holds the star and attributes.\r\n * @extends Star\r\n * @constructor\r\n */\n\nfunction ClientStar(element) {\n  ///REVISIT element not in use atm\n  var me = this; // Inherits properties from Star.js ...\n  ///ARCHITECTURE:\n\n  var currentAnimation = false;\n  var animationLength = 200;\n  var animationTimer;\n  var animatingPosition; ///ARCHITECTURE:\n\n  this.element;\n  this.linkElement;\n  this.titleElement;\n  this.dateElement; //this.state = ;\n\n  this.fileReady = false;\n  this.isPlaced = false;\n  this.isBookmarked = false;\n\n  function init() {\n    var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    _abstract_Star_js__WEBPACK_IMPORTED_MODULE_3___default().call(me);\n\n    if (element) {\n      me.element = element; ///TODO I think we should have a more semantically-clear way of expressing that setting these to true is safe:\n      /// for now, we just assume that if we're passing in an element, it's a completed star...\n\n      me.fileReady = true;\n      me.isPlaced = true;\n\n      if (me.element.classList.contains('bookmarked')) {\n        ///REVISIT improve architecture?\n        me.isBookmarked = true;\n      }\n    } else {\n      ///REVISIT cleaner solution?:\n      me.element = document.getElementById('placementSymbol').cloneNode(true); /// deep parameter in IE8??\n    } ///REVISIT architecture\n\n\n    me.linkElement = me.element.getElementsByTagName('a')[0];\n    me.titleElement = me.element.getElementsByClassName('text title')[0];\n    me.dateElement = me.element.getElementsByClassName('text creationTime')[0]; // Attach event listeners:\n\n    me.linkElement.addEventListener('mousedown', onMouseDown);\n    me.linkElement.addEventListener('click', onClick); // Create identity properties:\n\n    me.observeAttributes(); // Add to DOM:\n\n    _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_2__[\"default\"].map.appendChild(me.element);\n  }\n\n  function onMouseDown(event) {\n    // If user is placing this star, ignore mousedown to prevent dragging\n    // star intead of space:\n    if (!me.isPlaced) {\n      event.preventDefault();\n    }\n  }\n\n  function onClick(event) {\n    event.preventDefault(); ///REVISIT me.isPlaced feels kinda hacky:\n\n    if (me.isPlaced) {\n      //me.play();\n      _Navigation__WEBPACK_IMPORTED_MODULE_7__[\"default\"].navigate(\"/star/\" + me.id);\n    } else {\n      return false;\n    }\n  }\n  /**\r\n   * Moves the star to a 2D coordinate.\r\n   * @param x {number}\r\n   * @param y {number}\r\n   * @param animate {bool}\r\n   */\n\n\n  this.moveToXY = function (x, y) {\n    var _this = this;\n\n    var animate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var newPos = new (_abstract_Vector_js__WEBPACK_IMPORTED_MODULE_4___default())(x, y);\n\n    if (!animate) {\n      me.position = newPos;\n    } else {\n      animatingPosition = newPos;\n      animationTimer = animationLength;\n\n      if (!currentAnimation) {\n        var animation = (0,animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n          /// move this block somewhere central:\n          targets: me.element,\n          left: function left() {\n            return animatingPosition.x + 'px';\n          },\n          top: function top() {\n            return animatingPosition.y + 'px';\n          },\n          duration: function duration() {\n            return animationTimer;\n          },\n          complete: function complete() {\n            // Stars.generateConstellationLines();\n            currentAnimation = false;\n\n            _this.moveToXY(x, y, false);\n          }\n        });\n        return animation.finished;\n      }\n    }\n  };\n  /**\r\n   * Play the media attached to the star.\r\n   */\n\n\n  this.play = function () {\n    var starTitle = me.element.getAttribute('data-title');\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_1__[\"default\"]._('#playingStarTitle').innerHTML = starTitle;\n    var creatorName = me.element.getAttribute('data-creatorName');\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_1__[\"default\"]._('#playingCreatorName').innerHTML = creatorName;\n    var creatorLink = me.element.getAttribute('data-creatorLink');\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_1__[\"default\"]._('#playingCreatorLink').innerHTML = creatorLink; // cor._('#playingStarHeader').style.display = 'block';\n\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ac(document.body, 'playing');\n    _MediaPlayer__WEBPACK_IMPORTED_MODULE_5__[\"default\"].playStar(me);\n  };\n  /**\r\n   * Bookmarks the star for the client's user account.\r\n   **/\n\n\n  this.bookmark = function () {\n    var _this2 = this;\n\n    return _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_1__[\"default\"].POST('/ajax/bookmark', {\n      starID: this.id\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      if (result.errors) {\n        throw result.errors;\n      }\n\n      _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ac(_this2.element, 'bookmarked');\n      me.isBookmarked = true;\n      _ClientState__WEBPACK_IMPORTED_MODULE_6__[\"default\"].bookmarks.push(me);\n      _ClientState__WEBPACK_IMPORTED_MODULE_6__[\"default\"].update();\n    })[\"catch\"](function (err) {\n      console.error(err); ///TODO\n    });\n  };\n  /**\r\n   * Removes bookmark from star for client's user account.\r\n   **/\n\n\n  this.removeBookmark = function () {\n    var _this3 = this;\n\n    return _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_1__[\"default\"].POST('/ajax/removeBookmark', {\n      starID: this.id\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      if (result.errors) {\n        throw result.errors;\n      }\n\n      _this3.element.classList.remove('bookmarked');\n\n      me.isBookmarked = false;\n      _ClientState__WEBPACK_IMPORTED_MODULE_6__[\"default\"].bookmarks.splice(_ClientState__WEBPACK_IMPORTED_MODULE_6__[\"default\"].bookmarks.indexOf(me), 1);\n      _ClientState__WEBPACK_IMPORTED_MODULE_6__[\"default\"].update();\n    })[\"catch\"](function (err) {\n      console.error(err); ///TODO\n    });\n  };\n  /**\r\n   * Set properties according to HTML element attribute values.\r\n   **/\n\n\n  this.observeAttributes = function () {\n    // Function-scoped variable so we can use getter/setter with same name.\n    var positionValue;\n\n    for (var propIndex = 0; propIndex < me.identityProps.length; propIndex++) {\n      var property = me.identityProps[propIndex];\n\n      switch (property) {\n        case 'position':\n          {\n            Object.defineProperty(me, 'position', {\n              ///REVISIT architecture\n              get: function get() {\n                return positionValue;\n              },\n              set: function set(newPos) {\n                positionValue = newPos;\n                me.element.style.left = newPos.x + 'px';\n                me.element.style.top = newPos.y + 'px';\n              } // configurable: true,\n\n            });\n            me.position = new (_abstract_Vector_js__WEBPACK_IMPORTED_MODULE_4___default())(parseInt(me.element.getAttribute('data-x')), parseInt(me.element.getAttribute('data-y'))); // console.log(me.position);\n          }\n          break;\n\n        case 'id':\n          {\n            me.id = parseInt(me.element.id.split('s')[1]); ///ARCHITECTURE\n          }\n          break;\n\n        case 'originStarID':\n        case 'constellationID':\n        case 'tier':\n          {\n            me[property] = parseInt(me.element.getAttribute('data-' + property));\n          }\n          break;\n\n        default:\n          {\n            me[property] = me.element.getAttribute('data-' + property);\n          }\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   * Set HTML element attributes according to property values.\r\n   **/\n\n\n  this.observeProperties = function () {\n    for (var propIndex = 0; propIndex < me.identityProps.length; propIndex++) {\n      var property = me.identityProps[propIndex];\n\n      switch (property) {\n        case 'id':\n          {\n            me.element.id = 's' + me.id;\n          }\n          break;\n\n        case 'position':\n          {\n            me.element.setAttribute('data-x', me.position.x);\n            me.element.setAttribute('data-y', me.position.y);\n          }\n          break;\n\n        case 'originStarID':\n          {\n            me.element.setAttribute('data-originStarID', me.originStarID);\n            me.element.setAttribute('data-prev', me.originStarID);\n          }\n\n        case 'fileURL':\n          {\n            me.element.setAttribute('data-fileURL', me.fileURL);\n            me.linkElement.href = me.fileURL;\n          }\n          break;\n\n        case 'timestamp':\n          {\n            me.dateElement.innerText = new Date(me.timestamp).toLocaleDateString();\n          }\n          break;\n\n        default:\n          {\n            me.element.setAttribute('data-' + property, me[property]);\n          }\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   * Convert identity properties to exportable data structure.\r\n   * @param dataType {string} - Type of data structure to return.\r\n   */\n\n\n  this[\"export\"] = function () {\n    var dataType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"FormData\";\n\n    switch (dataType) {\n      case 'FormData':\n        {\n          var formData = new FormData();\n\n          for (var propIndex = 0; propIndex < me.identityProps.length; propIndex++) {\n            var identityProp = me.identityProps[propIndex]; // If property is an object:\n\n            if (me.objectProps.indexOf(identityProp) != -1) {\n              ///probably keep array of which properties are objects in Star class\n              formData.append(identityProp, JSON.stringify(me[identityProp])); // Property is a literal value; no need to stringify:\n            } else {\n              formData.append(identityProp, me[identityProp]);\n            }\n          }\n\n          return formData;\n        }\n        break;\n\n      default:\n        {\n          var error = \"ClientStar.export(): Unhandled dataType '\" + dataType + \"'\";\n          console.error(error);\n          throw new Error(error);\n        }\n    }\n  };\n  /** Remove the ClientStar from the client. **/\n\n\n  this[\"delete\"] = function () {\n    ////TODO IE needs a polyfill; otherwise use removeChild:\n    me.element.remove();\n  };\n\n  init(element);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/components/ClientStar.js\n");

/***/ }),

/***/ "./client/js/components/ClientState.js":
/*!*********************************************!*\
  !*** ./client/js/components/ClientState.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _abstract_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../abstract/constants */ \"./abstract/constants.js\");\n/* harmony import */ var _abstract_constants__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_abstract_constants__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Stars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Stars */ \"./client/js/components/Stars.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//import mediaPlayer from './MediaPlayer';\n\n\n/**\r\n * Holds data relevant to the client and initializes components.\r\n * @constructor\r\n **/\n\nfunction ClientState() {\n  var me = this;\n  /**\r\n   * The user's bookmarks.\r\n   * @type {ClientStar[]}\r\n   **/\n\n  this.bookmarks = [];\n  /**\r\n   * The star being created or interacted with by the user.\r\n   * @type {ClientStar}\r\n   **/\n\n  this.actingStar = null;\n  /**\r\n   * The star currently being played by the media player.\r\n   * @type {ClientStar}\r\n   **/\n\n  this.playingStar = null;\n  /**\r\n   * The page open on the client.\r\n   * @type {string}\r\n   **/\n  ///REVISIT consolidate this with activeWindow?\n  ///REVISIT default value; doing this mainly because changes in historystate\n  //currently result in this value if going to homepage:\n\n  this.currentPage = '';\n  /**\r\n   * The element of the page currently open on the client.\r\n   * @type {Element}\r\n   **/\n\n  this.activeWindow = false;\n  /**\r\n   * Number of creation tickets available to user.\r\n   * @type {number}\r\n   **/\n\n  this.creationTickets = null;\n  /**\r\n   * Number of recreation tickets available to user.\r\n   * @type {number}\r\n   **/\n\n  this.recreationTickets = null;\n  var components = []; ///REVISIT perhaps unnecessary\n  // var readyCallbacks = [];\n\n  this.init = function () {\n    ///REVISIT placement... maybe ticket count retrieval should go into a component:\n    me.creationTickets = parseInt(document.getElementById('creation-tickets').value);\n    me.recreationTickets = parseInt(document.getElementById('recreation-tickets').value);\n\n    if (document.readyState != 'complete') {\n      document.addEventListener(\"DOMContentLoaded\", initializeComponents);\n    } else {\n      initializeComponents();\n    }\n  };\n  /**\r\n   * Calls .init() on each component, and then calls .ready() on each component.\r\n   **/\n\n\n  function initializeComponents() {\n    // Call init() on each component:\n    var _iterator = _createForOfIteratorHelper(components),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var component = _step.value;\n        component.init();\n      } // If component has a ready function, call it.\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var _iterator2 = _createForOfIteratorHelper(components),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var component = _step2.value;\n\n        if (typeof component.ready === 'function') {\n          component.ready();\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    readBookmarksCache(); // for (var componentIndex = 0; componentIndex < uninitializedComponents.length; componentIndex++) {\n    //while(uninitializedComponents.length) {\n    //uninitializedComponents.shift().init();\n    //}\n    // for (var callbackIndex = 0; callbackIndex < readyCallbacks.length; callbackIndex++) {\n    // \tvar readyCallback = readyCallbacks[callbackIndex];\n    // \treadyCallback();\n    // }\n  }\n\n  function readBookmarksCache() {\n    ///REVISIT placement\n    var bookmarksInputEle = document.getElementById('user-bookmarks');\n\n    var _iterator3 = _createForOfIteratorHelper(bookmarksInputEle.value.split(',')),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var starID = _step3.value;\n        me.bookmarks.push(_Stars__WEBPACK_IMPORTED_MODULE_1__[\"default\"].clientStars[parseInt(starID)]);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  } ///REVISIT architecture:\n\n  /**\r\n   * Run an action.\r\n   * @param {CONSTS.ACTION} action\r\n   **/\n\n\n  this.act = function (action) {\n    console.log('acting: ' + action);\n\n    switch (action) {\n      case (_abstract_constants__WEBPACK_IMPORTED_MODULE_0___default().ACTION.USE_CREATION_TICKET):\n        {\n          me.creationTickets -= 1;\n        }\n        break;\n\n      case (_abstract_constants__WEBPACK_IMPORTED_MODULE_0___default().ACTION.USE_RECREATION_TICKET):\n        {\n          me.recreationTickets -= 1;\n        }\n        break;\n\n      default:\n        {\n          throw \"ClientState.act(): unhandled action: \" + action;\n        }\n    }\n\n    me.update([action]);\n  };\n  /**\r\n   * Updates elements of the interface to reflect new state.\r\n   **/\n\n\n  this.update = function () {\n    var actions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.values((_abstract_constants__WEBPACK_IMPORTED_MODULE_0___default().ACTION));\n\n    ///REVISIT naming; updateState? updateInterface?\n    // For each state-watcher, run relevant method:\n    var _iterator4 = _createForOfIteratorHelper(actions),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var action = _step4.value;\n\n        switch (action) {\n          case (_abstract_constants__WEBPACK_IMPORTED_MODULE_0___default().ACTION.TOGGLE_BOOKMARK):\n            {\n              //var bookmarkCount = document.getElementsByClassName();\n              var _iterator5 = _createForOfIteratorHelper(document.getElementsByClassName('bookmarks-sort')),\n                  _step5;\n\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  var bookmarkSortLink = _step5.value;\n\n                  if (me.bookmarks.length) {\n                    if (bookmarkSortLink.classList.contains('disabled')) {\n                      bookmarkSortLink.classList.remove('disabled');\n                    }\n                  } else {\n                    bookmarkSortLink.classList.add('disabled');\n                  }\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n            }\n            break;\n\n          case (_abstract_constants__WEBPACK_IMPORTED_MODULE_0___default().ACTION.USE_CREATION_TICKET):\n            {\n              var countEle = document.querySelector('.creationTickets .count');\n              countEle.innerText = me.creationTickets;\n            }\n            break;\n\n          case (_abstract_constants__WEBPACK_IMPORTED_MODULE_0___default().ACTION.USE_RECREATION_TICKET):\n            {\n              var countEle = document.querySelector('.recreationTickets .count');\n              countEle.innerText = me.recreationTickets;\n            }\n            break;\n\n          default:\n            {\n              ///REVISIT\n              throw \"Unhandled action: \" + action;\n            }\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }; // function onReady() { ///REVISIT naming/architecture\n  // \tmediaPlayer.audio.element.addEventListener('timeupdate', onMediaTimeUpdate);\n  // }\n\n  /**\r\n   * Adds a new components to the client.\r\n   * @param {Object} component - The component to be added. Requires an .init function.\r\n   */\n\n\n  this.addComponent = function (component) {\n    components.push(component); //uninitializedComponents.push(component);\n  }; // me.observeEvent = function(event) { ///REVISIT naming/architecture\n  // }\n  // me.whenReady = function(callback) { ///REVISIT naming/architecture\n  // \treadyCallbacks.push(callback);\n  // }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ClientState());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/components/ClientState.js\n");

/***/ }),

/***/ "./client/js/components/Creator.js":
/*!*****************************************!*\
  !*** ./client/js/components/Creator.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../libs/minlab/cor */ \"./client/js/libs/minlab/cor.js\");\n/* harmony import */ var _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../libs/minlab/spc */ \"./client/js/libs/minlab/spc.js\");\n/* harmony import */ var _libs_minlab_anm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../libs/minlab/anm */ \"./client/js/libs/minlab/anm.js\");\n/* harmony import */ var _libs_minlab_upl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../libs/minlab/upl */ \"./client/js/libs/minlab/upl.js\");\n/* harmony import */ var _libs_minlab_colorTool_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../libs/minlab/colorTool.js */ \"./client/js/libs/minlab/colorTool.js\");\n/* harmony import */ var _Navigation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Navigation */ \"./client/js/components/Navigation.js\");\n/* harmony import */ var _ClientState_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ClientState.js */ \"./client/js/components/ClientState.js\");\n/* harmony import */ var _ClientStar_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ClientStar.js */ \"./client/js/components/ClientStar.js\");\n/* harmony import */ var _Stars_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Stars.js */ \"./client/js/components/Stars.js\");\n/* harmony import */ var _Interface_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Interface.js */ \"./client/js/components/Interface.js\");\n/* harmony import */ var _abstract_Vector_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../abstract/Vector.js */ \"./abstract/Vector.js\");\n/* harmony import */ var _abstract_Vector_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_abstract_Vector_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _abstract_constants_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../abstract/constants.js */ \"./abstract/constants.js\");\n/* harmony import */ var _abstract_constants_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_abstract_constants_js__WEBPACK_IMPORTED_MODULE_11__);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n //// ultimately whatever spc becomes probably won't output a singleton\n\n\n\n // import ajx from '../libs/minlab/ajx'; ///TODO get rid of in favor or Pijin\n// import HistoryTime from '../libs/history-time';\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Creator());\n/**\r\n * Class used for creating new stars on the client.\r\n * @constructor\r\n **/\n\nfunction Creator() {\n  /**\r\n   * The star that the user is creating.\r\n   * @type ClientStar\r\n   **/\n  var workingStar;\n  /**\r\n   * The originStar of the star the user is creating.\r\n   * @type ClientStar\r\n   **/\n  ///REVISIT should we just keep this in workingStar.originStar?\n\n  var workingOriginStar;\n  /**\r\n   * The creation step the user is on.\r\n   * @type { false | \"place\" | \"color\" }\r\n   **/\n\n  var currentStep;\n  var validPlacementZone; //var accessSettingInput;\n  //var publicGameButton;\n  //var privateGameButton;\n\n  /** @type {Vector2} **/\n\n  var mouseDownPos;\n  /** The color wheel used for coloring genesis stars. **/\n\n  var colorwheelSelect;\n\n  this.init = function () {\n    // accessSettingInput = cor._('#accessSetting')\n    // publicGameButton = cor._('#publicGameButton');\n    // privateGameButton = cor._('#privateGameButton');\n    // publicGameButton.addEventListener('click', onPublicGameButtonClick);\n    // privateGameButton.addEventListener('click', onPrivateGameButtonClick);\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('#create-page').addEventListener('submit', onCreateSubmit);\n\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('#recreate-page').addEventListener('submit', onCreateSubmit); ///REVISIT removed because we're only doing links atm:\n    // cor._('#submission').addEventListener('change', uploadCreation);\n\n\n    var _iterator = _createForOfIteratorHelper(_libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('.createStar')),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var recreateLink = _step.value;\n        recreateLink.addEventListener('click', onCreateStarClick);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var _iterator2 = _createForOfIteratorHelper(_libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('.recreateStar')),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var recreateLink = _step2.value;\n        recreateLink.addEventListener('click', onRecreateStarClick);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    validPlacementZone = document.getElementById('validPlacementZone');\n    validPlacementZone.style.display = 'none';\n    _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].map.appendChild(validPlacementZone);\n    colorwheelSelect = document.getElementById('colorwheelSelect');\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(colorwheelSelect, 'mousemove', getColorFromWheelPosition);\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(colorwheelSelect, 'click', function () {\n      _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rl(colorwheelSelect, 'mousemove', getColorFromWheelPosition);\n      workingStar.color = workingStar.linkElement.style.backgroundColor.substr(4).slice(0, -1); /// bad code / maybe unreliable\n\n      _libs_minlab_anm__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fadeOut(colorwheelSelect);\n      workingStar.isPlaced = true;\n      actualizeCreation(); // if(!workingStar.isUploaded) {\n      // \tworkingStar.isPlaced = true;\n      // } else {\n      // \tactualizeCreation();\n      // }\n    });\n  };\n  /** Cancel creation process. **/\n\n\n  this.cancel = function () {\n    workingStar[\"delete\"]();\n    _Interface_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].hideMessage();\n    endCreationStep();\n  };\n\n  function onCreateStarClick(event) {\n    event.preventDefault();\n    _Navigation__WEBPACK_IMPORTED_MODULE_5__[\"default\"].navigate(event.target.pathname);\n  }\n\n  function onRecreateStarClick(event) {\n    event.preventDefault();\n    _Navigation__WEBPACK_IMPORTED_MODULE_5__[\"default\"].navigate(event.target.pathname + '/' + _ClientState_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].actingStar.id);\n  }\n  /**\r\n   * Begin star creation process.\r\n   * @param {ClientStar | false} originStar\r\n   **/\n\n\n  this.initializeCreation = function () {\n    var originStar = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    workingStar = new _ClientStar_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n    workingStar.element.style.display = 'none';\n    workingStar.id = \"placeholder\"; ///REVISIT architecture\n\n    workingStar.originStarID = originStar ? originStar.id : -1;\n    workingStar.tier = originStar ? originStar.tier + 1 : 0;\n\n    if (originStar) {\n      workingOriginStar = originStar;\n    }\n  };\n\n  function onCreateSubmit(event) {\n    // starting a new constellation\n    event.preventDefault();\n    var formEle = event.target;\n    workingStar.hostType = 'external'; ////\n\n    workingStar.title = formEle.getElementsByClassName('star-title')[0].value;\n    workingStar.fileURL = formEle.getElementsByClassName('file-url')[0].value;\n    workingStar.element.style.display = null; ///REVISIT best method?\n    //workingStar.title = cor._('#genesis-star-title').value;\n    //workingStar.fileURL = cor._('#genesis-file-url').value;\n\n    if (workingStar.hostType == 'upload') {////REVISIT\n      // uploadCreation();\n    } else {\n      ////TODO validate the file\n      workingStar.fileReady = true;\n      initializePlacement();\n    }\n  } // function onRecreateSubmit(event) {\n  // \tinitializePlacement(false);\n  // }\n  // function onPublicGameButtonClick(event) {\n  // \t// cor._('#privateGameSelect');\n  // \taccessSetting.value = 'public';\n  // \tcor.ac(publicGameButton, 'active');\n  // \tcor.rc(privateGameButton, 'active');\n  // \tvar timeSettingsEl = cor._('#timeSettings');\n  // \tcor.ac(timeSettingsEl, 'public');\n  // \tcor.rc(timeSettingsEl, 'private');\n  // }\n  // function onPrivateGameButtonClick(event) {\n  // \taccessSetting.value = 'private';\n  // \tcor.ac(privateGameButton, 'active');\n  // \tcor.rc(publicGameButton, 'active');\n  // \tvar timeSettingsEl = cor._('#timeSettings');\n  // \tcor.ac(timeSettingsEl, 'private');\n  // \tcor.rc(timeSettingsEl, 'public');\n  // }\n  ///REVISIT maybe rename this to be more specific to event handling since\n  //that's currently all it does:\n\n\n  function endCreationStep() {\n    switch (currentStep) {\n      case 'place':\n        {\n          if (workingStar.originStarID == -1) {\n            // Is a constellation genesis star.\n            _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element.removeEventListener('mousemove', moveWorkingStarToMouse);\n            _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element.removeEventListener('mouseup', onPlacementMouseUp);\n          } else {\n            validPlacementZone.removeEventListener('mousemove', moveWorkingStarToMouse);\n            validPlacementZone.removeEventListener('mouseup', onPlacementMouseUp);\n          }\n        }\n        break;\n\n      case 'color':\n        {}\n        break;\n\n      default:\n        {\n          console.error(\"Unhandled creation step: \" + currentStep);\n        }\n    }\n\n    currentStep = false;\n  }\n\n  function initializePlacement() {\n    currentStep = 'place'; // close the creation UI\n    ///REVISIT uris /create/place doesn't work with our thrown-together uri system\n\n    _Navigation__WEBPACK_IMPORTED_MODULE_5__[\"default\"].navigate('place'); ///TODO probably replace 'notification' message type with something\n    //like 'createInstruction' or something and have it appear differently\n    //(more prominently):\n\n    if (workingStar.originStarID == -1) {\n      _Interface_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].displayMessage(\"Choose a spot for your star!\", 'notification', 0); // User can place star anywhere in the galaxy:\n\n      _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element.addEventListener('mousemove', moveWorkingStarToMouse);\n      _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element.addEventListener('mousedown', onPlacementMouseDown);\n      _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element.addEventListener('mouseup', onPlacementMouseUp);\n    } else {\n      _Interface_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].displayMessage(\"Choose a spot for your star near the one you recreated!\", 'notification', 0); // Create valid placement zone around the area of the origin star:\n\n      var current_x = workingOriginStar.position.x;\n      var current_y = workingOriginStar.position.y;\n      validPlacementZone.style.left = current_x - 77 + 'px';\n      validPlacementZone.style.top = current_y - 73 + 'px';\n      validPlacementZone.style.display = 'block';\n      _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(validPlacementZone, 'mousemove', moveWorkingStarToMouse);\n      validPlacementZone.addEventListener('mousedown', onPlacementMouseDown);\n      validPlacementZone.addEventListener('mouseup', onPlacementMouseUp); // Center camera around origin star:\n\n      _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ctr(current_x, current_y);\n    }\n  }\n\n  function moveWorkingStarToMouse(event) {\n    workingStar.moveToXY(event.clientX - _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].map.offsetLeft, event.clientY - _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].map.offsetTop);\n    return true;\n  }\n\n  function onPlacementMouseDown(event) {\n    //event.preventDefault();\n    mouseDownPos = new (_abstract_Vector_js__WEBPACK_IMPORTED_MODULE_10___default())(event.clientX, event.clientY);\n    return true;\n  }\n\n  function onPlacementMouseUp(event) {\n    var mouseUpPos = new (_abstract_Vector_js__WEBPACK_IMPORTED_MODULE_10___default())(event.clientX, event.clientY);\n    var differenceVector = mouseDownPos.subtract(mouseUpPos); // Calculate how far the mouse has been dragged:\n\n    var distance = differenceVector.getMagnitude(); // If the drag distance is negligible, treat as a click:\n\n    if (distance < 5) {\n      workingStarClick(event);\n    }\n\n    return true;\n  }\n\n  function workingStarClick(event) {\n    // User has selected the position for their star.\n    // workingStar.moveToXY( ///REVISIT do we need to have this code both here and in moveWorkingStarToMouse?\n    // \tevent.clientX - spc.map.offsetLeft,\n    // \tevent.clientY - spc.map.offsetTop\n    // );\n    // Stars.addStar(workingStar);\n    // spc.ctr(workingStar.position.x, workingStar.position.y); /// create callback function for ctr? currently using validPlacementZone fadeOut delay\n    endCreationStep();\n    initializeColoring();\n  }\n\n  function initializeColoring() {\n    ///TODO prevent movement??\n    currentStep = 'color';\n\n    if (workingStar.originStarID == -1) {\n      _Interface_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].displayMessage(\"Choose a color for your star.\", 'notification', 0);\n      workingStar.element.appendChild(colorwheelSelect);\n      _libs_minlab_anm__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fadeIn(colorwheelSelect);\n    } else {\n      _Interface_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].displayMessage(\"Choose a color for your star. You can only shift the color slightly \" + \"from the star you recreated!\", 'notification', 0); // Coloring a constellation star; only hues adjacent to origin star are allowed.\n\n      _libs_minlab_anm__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fadeOut(validPlacementZone); ///REVISIT at least document with comments if not refactor:\n\n      var colorShiftSelect = document.getElementById('colorShiftSelect');\n      var rgb = workingOriginStar.linkElement.style.backgroundColor.substr(4).split(',');\n      var hsl = _libs_minlab_colorTool_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].rgb(rgb[0], rgb[1], parseInt(rgb[2]));\n      colorShiftSelect.children[0].style.background = 'hsl(' + (hsl[0] - 17) + ', 45%, 80%)';\n      colorShiftSelect.children[1].style.background = 'hsl(' + (hsl[0] + 17) + ', 45%, 80%)';\n      workingStar.element.appendChild(colorShiftSelect);\n      _libs_minlab_anm__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fadeIn(colorShiftSelect, 250, function () {\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(colorShiftSelect, 'mouseover', function (e) {\n          workingStar.linkElement.style.background = e.target.style.background;\n        });\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(colorShiftSelect, 'click', function (e) {\n          // (finish)\n          workingStar.color = e.target.style.backgroundColor.substr(4).slice(0, -1);\n          workingStar.linkElement.style.background = e.target.style.background;\n          _libs_minlab_anm__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fadeOut(colorShiftSelect, 300, function () {\n            colorShiftSelect.parentNode.removeChild(colorShiftSelect);\n          });\n          limbo.appendChild(validPlacementZone); // document.body.removeAttribute('class');\n          // spc.on = true;\n\n          workingStar.isPlaced = true;\n          actualizeCreation(); // if(!workingStar.isUploaded) {\n          // \tworkingStar.isPlaced = true;\n          // \tAnm.fadeOut(colorShiftSelect);\n          // \t// console.log(workingStar.color);\n          // } else {\n          // \tactualizeCreation()\n          // }\n        });\n      });\n    } // \tguide.innerHTML = \"Now choose a color. You can only shift the color 11 degrees from the previous star.\";\n\n  } // coloring a genesis star; any color is allowed\n\n\n  function getColorFromWheelPosition(e) {\n    var cx = -(workingStar.position.x + (_libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].map.offsetLeft - e.clientX)); ///TODO + half star width, I think? same for below with height?\n\n    var cy = workingStar.position.y + (_libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].map.offsetTop - e.clientY);\n    var angle = -Math.atan2(cy, cx) * 180 / Math.PI + 180;\n    var selectedhue;\n    if (angle > 0 && angle < 60) selectedhue = 110;else if (angle > 60 && angle < 120) selectedhue = 60;else if (angle > 120 && angle < 180) selectedhue = 25;else if (angle > 180 && angle < 240) selectedhue = 0;else if (angle > 240 && angle < 300) selectedhue = 270;else if (angle > 300) selectedhue = 240;\n    workingStar.linkElement.style.backgroundColor = 'hsl(' + selectedhue + ', 45%, 80%)';\n  }\n\n  function uploadCreation() {\n    /// create back and forth navigation\n    /// could use some attention\n    // state.updating = false;\n    _Navigation__WEBPACK_IMPORTED_MODULE_5__[\"default\"].navigate('/'); // document.body.className = null;\n    //spc.ctr(0, 0);\n\n    var originStarID = workingOriginStar ? workingOriginStar.id : -1;\n    var file = document.getElementById('submission');\n    var upl = new _libs_minlab_upl__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('/ajax/upload/' + originStarID, file, onUploadProgress, onUploadComplete);\n    initializePlacement();\n\n    function onUploadProgress(e) {\n      if (e.lengthComputable) {\n        var progress = e.loaded / e.total;\n        workingStar.textElement.innerHTML = Math.floor(progress * 100) + '% uploaded';\n\n        if (progress == 1) {/// safe?\n          // complete();\n        } //workingStar.linkElement.style.background = 'rgba(100, 255, 100', '+progress+')';\n\n      } else {//console.log('total size is unknown');\n      }\n    }\n\n    function onUploadComplete(e) {\n      uploaded = true;\n      var d = e.target.responseText;\n      var response = JSON.parse(d);\n\n      if (response.error) {\n        console.log(response.error); ////\n\n        throw response.error;\n      }\n\n      workingStar.id = response.sid;\n      workingStar.element.id = 's' + workingStar.id;\n      workingStar.element.setAttribute('data-prev', originStarID);\n      actualizeCreation();\n    }\n  }\n\n  function actualizeCreation() {\n    window.onbeforeunload = false;\n\n    if (!workingStar.fileReady || !workingStar.isPlaced) {\n      console.log(workingStar);\n      return false;\n    }\n\n    _Interface_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].hideMessage();\n    var formData = workingStar[\"export\"]('FormData');\n    var request = {\n      method: \"POST\",\n      body: formData\n    };\n    fetch('/ajax/actualize', request) ///REVISIT old browser compatability?\n    .then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      if (result.errors) {\n        throw result.errors;\n      } ///REVISIT improve architecture, probably; maybe just\n      //have server return the whole new star and call\n      //loadData on workingStar:\n      // Update star element attributes:\n\n\n      workingStar.id = result.newStarID;\n      workingStar.titleElement.className = 'text name';\n      workingStar.titleElement.innerText = workingStar.title;\n      workingStar.timestamp = result.timestamp; //workingStar.linkElement.href = '/' + result.newStarID;\n\n      workingStar.element.classList.remove('placementSymbol'); //workingStar.setAttribute('data-prev',\n\n      _Stars_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].addStar(workingStar); // Update ticket count:\n\n      if (workingStar.originStarID == -1) {\n        _ClientState_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].act(_abstract_constants_js__WEBPACK_IMPORTED_MODULE_11__.ACTION.USE_CREATION_TICKET);\n      } else {\n        _ClientState_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].act(_abstract_constants_js__WEBPACK_IMPORTED_MODULE_11__.ACTION.USE_RECREATION_TICKET);\n      } // Shift stars around according to server instructions:\n\n\n      for (var starID in result.starMovements) {\n        var newPosition = result.starMovements[starID];\n        Promise.resolve(_Stars_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].clientStars[starID].moveToXY(newPosition.x, newPosition.y)) ///REVISIT architecture... should we prefer just a ClientStar.actualize() method?:\n        .then(function () {\n          return workingStar.observeProperties();\n        }).then(function () {\n          return _Stars_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].generateConstellationLines();\n        });\n      } // Unset workingStar; we're finished:\n\n\n      workingStar = null; // Back to homepage.\n\n      _Navigation__WEBPACK_IMPORTED_MODULE_5__[\"default\"].navigate('/');\n    })[\"catch\"](function (errors) {\n      console.error(errors);\n\n      for (var errIndex = 0; errIndex < errors.length; errIndex++) {\n        var err = errors[errIndex];\n\n        switch (err) {\n          case _abstract_constants_js__WEBPACK_IMPORTED_MODULE_11__.ERROR.NO_CREATION_TICKETS:\n          case _abstract_constants_js__WEBPACK_IMPORTED_MODULE_11__.ERROR.NO_RECREATION_TICKETS:\n            {\n              _Interface_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].displayError(err);\n            }\n            break;\n\n          default:\n            {///REVISIT\n            }\n        }\n      }\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/components/Creator.js\n");

/***/ }),

/***/ "./client/js/components/Forms.js":
/*!***************************************!*\
  !*** ./client/js/components/Forms.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../libs/minlab/cor */ \"./client/js/libs/minlab/cor.js\");\n/* harmony import */ var _libs_pijin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../libs/pijin-js */ \"./client/js/libs/pijin-js/index.js\");\n/* harmony import */ var _Navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Navigation */ \"./client/js/components/Navigation.js\");\n/* harmony import */ var _ClientState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ClientState */ \"./client/js/components/ClientState.js\");\n/* harmony import */ var _abstract_telep_config_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../abstract/telep.config.js */ \"./abstract/telep.config.js\");\n/* harmony import */ var _abstract_telep_config_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_abstract_telep_config_js__WEBPACK_IMPORTED_MODULE_4__);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n // import HistoryTime from '../libs/history-time';\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ClientForms());\n\nfunction ClientForms() {\n  this.init = function () {\n    //// not a good solution:\n    // var forms = document.getElementsByTagName('form');\n    // for(var i=0, j=forms.length; i<j; i++) {\n    // \tif(cor.cc(forms[i], 'ajax')) {\n    // \t\tPijin.listen(forms[i], 'response', onAjaxResponse);\n    // \t\t// cor.al(forms[i], 'submit', onFormSubmit);\n    // \t}\n    // }\n    _libs_pijin_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].init({\n      className: 'ajax',\n      actionAttribute: 'data-ajax-action',\n      submitCallback: onAjaxSubmit,\n      responseCallback: onAjaxResponse\n    });\n  };\n\n  function onAjaxSubmit(event) {\n    /// quick-fix; if working on a star, update the field values appropriately; this should obviously happen somewhere else\n    if (_ClientState__WEBPACK_IMPORTED_MODULE_3__[\"default\"].actingStar) {\n      var activeStarIdInputs = document.getElementsByClassName('activeStarIdInput');\n\n      for (var inputIndex = 0; inputIndex < activeStarIdInputs.length; inputIndex++) {\n        var input = activeStarIdInputs[inputIndex];\n        input.value = _ClientState__WEBPACK_IMPORTED_MODULE_3__[\"default\"].actingStar.id;\n      }\n    }\n  } // function onFormSubmit(event) { //// temporary; should find more robust solution probably // converts all form elements to ajax\n\n\n  function onAjaxResponse(result, request, event) {\n    // event.preventDefault();\n    var form = event.target; // var children = form.children;\n\n    var op = form.id.split('-page')[0]; ///REVISIT bad architecture\n\n    if (result.errors.length) {\n      // console.error(result.errors);\n      // throw new Error(result.errors);\n      var errorsWrapper = form.getElementsByClassName('errors')[0]; ///REVISIT architecture\n\n      if (!errorsWrapper) {\n        throw \"No .errors wrapper available in <form> element.\";\n      }\n\n      console.log(result.errors);\n\n      var _iterator = _createForOfIteratorHelper(result.errors),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var error = _step.value;\n          ///REVISIT architecture:\n          var errorItemEle = document.createElement('li');\n          var errorLabelEle = document.createElement('label');\n          errorLabelEle.innerText = error; ///TODO add 'for' attribute and link it to correlated form field if appropriate\n\n          errorItemEle.appendChild(errorLabelEle);\n          errorsWrapper.appendChild(errorLabelEle);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else {\n      ///\n      // HistoryTime.goBack()\n      history.back(); ////\n      // window.history.go(-1);\n      // navigate('/'); /// previous screen\n      ///\n      // if(state.path.split('/')[1] == 'invite') {\n      // \twindow.reload();\n      // }\n\n      switch (op) {\n        case 'register':\n        case 'login':\n          {\n            _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(document.body, 'in');\n            console.log((_abstract_telep_config_js__WEBPACK_IMPORTED_MODULE_4___default()));\n            console.log(result);\n\n            if (op == 'login' && result.lv >= (_abstract_telep_config_js__WEBPACK_IMPORTED_MODULE_4___default().creatorLevel)) {\n              _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(document.body, 'creator');\n            }\n\n            _Navigation__WEBPACK_IMPORTED_MODULE_2__[\"default\"].navigate('/'); ///\n          }\n          break;\n\n        default:\n          {\n            console.error(\"onAjaxResponse(): unhandled op '\" + op + '\"');\n          }\n      }\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/components/Forms.js\n");

/***/ }),

/***/ "./client/js/components/Interface.js":
/*!*******************************************!*\
  !*** ./client/js/components/Interface.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../libs/minlab/cor */ \"./client/js/libs/minlab/cor.js\");\n/* harmony import */ var _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../libs/minlab/spc */ \"./client/js/libs/minlab/spc.js\");\n/* harmony import */ var _libs_history_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../libs/history-time */ \"./client/js/libs/history-time/index.js\");\n/* harmony import */ var _Navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Navigation */ \"./client/js/components/Navigation.js\");\n/* harmony import */ var _ClientState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ClientState */ \"./client/js/components/ClientState.js\");\n/* harmony import */ var _MediaPlayer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MediaPlayer */ \"./client/js/components/MediaPlayer.js\");\n/* harmony import */ var _Stars__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Stars */ \"./client/js/components/Stars.js\");\n/* harmony import */ var _abstract_constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../abstract/constants.js */ \"./abstract/constants.js\");\n/* harmony import */ var _abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _locale_en_us_json__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../locale/en_us.json */ \"./locale/en_us.json\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n///TODO convert to ES6 class\n // import ajx from '../libs/minlab/ajx';\n\n\n\n\n\n //import effects from './ClientEffects';\n\n\n\n ///REVISIT\n\n/**\r\n * Telephenesis class for user interface methods.\r\n * @constructor\r\n **/\n\nfunction Interface() {\n  // var currentOrderLink;\n  var me = this;\n  me.order = (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().ORDER.GALAXY);\n  me.view = (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.GALAXY);\n  /** Element which holds messages shown to user. **/\n\n  var messageElement;\n  /**\r\n   * The ID of the setTimeout timer being used to display\r\n   * the current message.\r\n   * @type {number}\r\n   **/\n\n  var messageTimerID = null;\n\n  this.init = function () {\n    messageElement = document.getElementById('notification'); // var closes = document.getElementsByClassName('close');\n    // if(closes.length) for(var i=0, j=closes.length; i<j; i++) {\n    // \tcor.al(closes[i], 'click', function(event) {\n    // \t\tevent.preventDefault();\n    // \t\tnavigate('/');\n    // \t});\n    // }\n\n    _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].moveCallbacks.push(_Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].drawLineStep);\n    window.addEventListener('scroll', function (eve) {\n      window.requestAnimationFrame(_Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].drawLineStep);\n    }); ////REVISIT can we guarantee this will run AFTER\n    //clientEffects's listener does on every browser?  if it\n    //doesn't, the canvas will be cleared after we draw the stars:\n\n    window.addEventListener('resize', function () {\n      window.requestAnimationFrame(_Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].drawLineStep);\n    });\n    /* NAVIGATION */\n\n    var menuToggleElement = document.getElementsByClassName('menuToggle')[0]; ////\n    // currentOrderLink = document.getElementsByClassName('sort active')[0]; ///REVISIT naming/architecture\n    // Open header menu when button is clicked\n\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(menuToggleElement, 'click', toggleMenu);\n\n    function toggleMenu(e) {\n      var menu = document.getElementById('menu');\n      var isActive = _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cc(menu, 'active');\n\n      if (isActive) {\n        e.target.innerHTML = '|||';\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(e.target, 'active');\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(menu, 'active');\n      } else {\n        e.target.innerHTML = '&rarr;';\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(e.target, 'active');\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(menu, 'active');\n      }\n    }\n    /* SHORTCUTS */\n\n\n    window.addEventListener('keydown', function (e) {\n      if (e.target.tagName.toUpperCase() == \"INPUT\") {\n        // .toUpperCase() out of paranoia\n        return true;\n      }\n\n      switch (e.keyCode) {\n        // Left arrow:\n        case 37:\n          {\n            e.preventDefault(); // If a star is currently active in the media player:\n\n            if (_ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playingStar) {\n              // If there's a previous star:\n              if (_ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playingStar.originStarID != -1) {\n                var previousStar = _Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].clientStars[_ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playingStar.originStarID];\n                _MediaPlayer__WEBPACK_IMPORTED_MODULE_5__[\"default\"].playStar(previousStar);\n              }\n            }\n          }\n          break;\n        // Right arrow:\n\n        case 39:\n          {\n            e.preventDefault();\n\n            if (_ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playingStar) {\n              ///TODO better solution:\n              var nsid = parseInt(_ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].playingStar.element.getAttribute('data-next')); /// if next star isn't loaded? if there is no next star?\n\n              var nextStar = _Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].clientStars[nsid];\n\n              if (!nextStar) {\n                ///REVISIT\n                return false;\n              }\n\n              _MediaPlayer__WEBPACK_IMPORTED_MODULE_5__[\"default\"].playStar(nextStar);\n            }\n          }\n          break;\n        // Spacebar:\n\n        case 32:\n          {\n            if (!_ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeWindow) {\n              e.preventDefault();\n              _MediaPlayer__WEBPACK_IMPORTED_MODULE_5__[\"default\"].audio.element.paused ? _MediaPlayer__WEBPACK_IMPORTED_MODULE_5__[\"default\"].audio.play() : _MediaPlayer__WEBPACK_IMPORTED_MODULE_5__[\"default\"].audio.pause();\n            }\n          }\n          break;\n        // ESC / Escape:\n\n        case 27:\n          {\n            if (_libs_history_time__WEBPACK_IMPORTED_MODULE_2__[\"default\"].state.url != '/') {\n              _Navigation__WEBPACK_IMPORTED_MODULE_3__[\"default\"].navigate('/'); //// page title\n\n              if (me.view != (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.GALAXY)) {\n                me.sort((_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.GALAXY));\n              }\n            }\n          }\n          break;\n      }\n    });\n    /* SORTING */\n\n    var _iterator = _createForOfIteratorHelper(_libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('.sort')),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var sortLinks = _step.value;\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(sortLinks, 'click', onSortClick);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n  /**\r\n   * Called when all components have loaded.\r\n   * @see ClientState#addComponent\r\n   **/\n\n\n  this.ready = function () {\n    _Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].generateConstellationLines(); ///TODO revisit implementation; probably render on the server:\n    // If loaded URL contains a query string:\n\n    if (location.search.length) {\n      // Check for view and/or order in query string:\n      var params = new URLSearchParams(location.search);\n      var initialOrder = params.get('order');\n      var initialView = params.get('view'); // If there's a view or order in the query string:\n\n      if (initialOrder || initialView) {\n        // Display the view and/or order:\n        me.sort(initialOrder, initialView);\n      }\n    }\n  };\n  /**\r\n   * Displays a message to the user.\r\n   * @param {string} message - The message to display.\r\n   * @param {string} [type=\"notification\"] - The type of message.\r\n   * @param {number} [duration=5000] - How long to display the message for.\r\n   */\n\n\n  this.displayMessage = function (message) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"notification\";\n    var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5000;\n    ///REVISIT naming\n    clearMessageTimer();\n    messageElement.innerText = message;\n    messageElement.className = type; ///REVISIT might already be appended to body.. should we check?\n\n    document.body.appendChild(messageElement);\n\n    if (duration) {\n      ///REVISIT more explicit check?\n      ///TODO fade out\n      messageTimerID = setTimeout(function () {\n        return me.hideMessage();\n      }, duration);\n    }\n  };\n  /**\r\n   * Hide the message displayed to the user, if any.\r\n   **/\n\n\n  this.hideMessage = function () {\n    ///REVISIT rename to clearMessage ?\n    clearMessageTimer();\n    limbo.appendChild(messageElement);\n  };\n\n  function clearMessageTimer() {\n    if (messageTimerID !== null) {\n      clearTimeout(messageTimerID);\n      messageTimerID = null;\n    }\n  }\n  /**\r\n   * Displays an error to the user.\r\n   * @param {string} errorCode - The error code from {@link CONSTANTS.ERROR} to display a message for.\r\n   */\n\n\n  this.displayError = function (errorCode) {\n    var errorMessages = {\n      ///TODO probably to be moved when we start localization work\n      NO_CREATION_TICKETS: \"Sorry, you have no creation tickets left. Please wait a while!\",\n      NO_RECREATION_TICKETS: \"Sorry, you have no recreation tickets left. Please wait a while!\"\n    };\n    var errorMessage;\n\n    if (errorMessages.hasOwnProperty(errorCode)) {\n      errorMessage = errorMessages[errorCode];\n    } else {\n      errorMessage = \"Sorry, something went wrong. Please try again.\";\n    }\n\n    me.displayMessage(errorMessage, \"error\");\n  };\n\n  function onSortClick(event) {\n    event.preventDefault();\n\n    if (event.currentTarget.classList.contains('disabled')) {\n      return false;\n    }\n\n    me.sort(event.currentTarget.getAttribute('data-order'), event.currentTarget.getAttribute('data-view'), event.currentTarget); // Update the URI:\n\n    var newURI = \"/\";\n\n    if (me.view != (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.GALAXY)) {\n      newURI += '?view=' + me.view.toLowerCase() + '&order=' + me.order.toLowerCase();\n    }\n\n    _Navigation__WEBPACK_IMPORTED_MODULE_3__[\"default\"].navigate(newURI);\n  }\n  /**\r\n   * Sort the stars in the interface and display them in {@link view}.\r\n   * @param {CONSTANTS.ORDER} order - The nature of the ordering of the stars.\r\n   * @param {CONSTANTS.VIEW} view - The view by which to show the stars.\r\n   * @param {Element} [clickedEle = false] - The sort link that was clicked to run this method.\r\n   **/\n\n\n  this.sort = function (order, view) {\n    var clickedEle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    ///REVISIT not into all this .toLowerCase() business... better design?\n    if (order) {\n      // If there's an order already, remove its class from document.body:\n      if (me.order) {\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(document.body, me.order.toLowerCase() + '-order'); ////\n      } // Add the new order's class to document.body:\n\n\n      _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(document.body, order.toLowerCase() + '-order'); ////\n      // If the order is GALAXY or CONSTELLATIONS, so is the view:\n\n      if (order == (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().ORDER.GALAXY) || order == (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().ORDER.CONSTELLATIONS)) {\n        ////REVISIT this solution; not sure it's best architecture; for\n        //one, we're not referencing CONSTS.VIEW but CONSTS.ORDER:\n        view = order; // If view is not GALAXY:\n      } else {\n        // If no view was provided to sort():\n        if (!view) {\n          // If we're already in a non-galaxy view (i.e. list/grid):\n          if (me.view != (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.GALAXY) && me.view != (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.CONSTELLATIONS)) {///TODO remove constellations\n            // Do nothing; keep current view.\n            // If we're in galaxy view, default to 'list' so that new order can be shown:\n          } else {\n            // There's no current table view; default to list:\n            view = (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.LIST);\n          }\n        }\n      } // Convert to upper in case of user input:\n\n\n      me.order = order.toUpperCase();\n    } // If a view was supplied to sort() and it is different from the current one:\n\n\n    if (view && view != me.view) {\n      // If there's already a view, remove its class from document.body:\n      if (me.view) {\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(document.body, me.view.toLowerCase() + '-view'); ////\n      } // Add the new view's class to document.body:\n\n\n      _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(document.body, view.toLowerCase() + '-view'); ////\n      // Convert to upper in case of user input:\n\n      me.view = view.toUpperCase();\n    } ///TODO only do this stuff if the value has changed:\n    // Update labels that display the current order:\n\n\n    var _iterator2 = _createForOfIteratorHelper(document.getElementsByClassName('current-order')),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var orderLabelEle = _step2.value;\n        orderLabelEle.innerText = _locale_en_us_json__WEBPACK_IMPORTED_MODULE_8__[me.order].toLowerCase();\n      } // Update any labels that display the current view:\n\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    var _iterator3 = _createForOfIteratorHelper(document.getElementsByClassName('current-view')),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var viewLabelEle = _step3.value;\n        viewLabelEle.innerText = _locale_en_us_json__WEBPACK_IMPORTED_MODULE_8__[me.view].toLowerCase();\n      } // Update the header of the view (to reflect the order):\n\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    var _iterator4 = _createForOfIteratorHelper(document.getElementsByClassName('view-header')),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var viewHeaderEle = _step4.value;\n        viewHeaderEle.innerText = _locale_en_us_json__WEBPACK_IMPORTED_MODULE_8__['SORT-BY-' + me.order];\n      } // Actually sort and position the stars:\n\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    _Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].sort(me.order, me.view);\n  }; // me.invite = function(event) {\n  // \t/// can't load if not logged in\n  // \t/// create separate aud for sound-effects like this\n  // \tmediaPlayer.load('/audio/ticket.mp3');\n  // \tvar ticket = document.getElementById('ticket');\n  // \tdocument.body.appendChild(ticket, limbo);\n  // \tAnm.fadeIn(ticket, 2750); ///\n  // \t// spc.flt(true);\n  // \tevent.preventDefault();\n  // }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Interface());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/components/Interface.js\n");

/***/ }),

/***/ "./client/js/components/MediaPlayer.js":
/*!*********************************************!*\
  !*** ./client/js/components/MediaPlayer.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../libs/minlab/cor */ \"./client/js/libs/minlab/cor.js\");\n/* harmony import */ var _libs_minlab_aud__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../libs/minlab/aud */ \"./client/js/libs/minlab/aud.js\");\n/* harmony import */ var _ClientState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ClientState */ \"./client/js/components/ClientState.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new MediaPlayer());\n\nfunction MediaPlayer() {\n  var me = this;\n  me.audio;\n  var lastSyncTime;\n  var playerConfig = {\n    syncInterval: 30 * 1000,\n    partialPlaySeconds: 5,\n    longPlayPercent: 50\n  };\n  var mediaStates = [];\n  var activeMediaState = null;\n  var pendingServerUpdates = [];\n\n  this.init = function () {\n    me.audio = new _libs_minlab_aud__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n      elementID: 'aud',\n      seekbar: document.getElementById('playbackProgress')\n    });\n    me.audio.element.addEventListener('timeupdate', onMediaTimeUpdate);\n    me.audio.element.addEventListener('ended', onMediaPlayerFinish); ////DEBUG:\n    // pendingServerUpdates.push({ type: 'longPlay', starID: 42 });\n    // serverSync();\n\n    setInterval(serverSync, playerConfig.syncInterval); ////TODO probably don't use or use something in addition to setInterval\n  };\n\n  this.playStar = function (clientStar) {\n    // If star is already focused by player:\n    if (_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar == clientStar) {\n      // Toggle playback play/pause:\n      me.audio.element.paused ? me.audio.play() : me.audio.pause();\n    } else {\n      // Loading a new star into the player\n      // If there's already a star loaded:\n      if (_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar) {\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar.element, \"active\");\n      }\n\n      _ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar = clientStar;\n      _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(clientStar.element, \"active\"); // Load the new star's media:\n\n      me.audio.load(clientStar.linkElement.getAttribute('data-mediaURL')); // me.audio.load('/music/'+sid+'.mp3');\n\n      if (activeMediaState) {\n        mediaStates[clientStar.id] = activeMediaState;\n      }\n\n      if (mediaStates[clientStar.id]) {\n        activeMediaState = mediaStates[clientStar.id];\n      } else {\n        activeMediaState = {\n          lastUpdateMediaTime: 0,\n          totalMediaPlaySeconds: 0,\n          flags: {\n            partialPlay: false,\n            longPlay: false\n          }\n        };\n      } // When we have media metadata (i.e. length), begin streaming:\n\n\n      me.audio.element.addEventListener('loadedmetadata', function () {\n        me.audio.play();\n      }, {\n        once: true // Remove this listener after running. /// Why not just put this listener in .init and remove `once` property? /// browser support?\n\n      });\n    }\n  };\n\n  function onMediaTimeUpdate(event) {\n    // Update playback time label:\n    _ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar.element.getElementsByClassName('playbackTime')[0].innerHTML = me.audio.timeString; // Update width of playback progress bar:\n\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._('#playbackProgressBar').style.width = me.audio.playbackProgress * 100.0 + \"%\"; // Get time since last run:\n\n    var delta = me.audio.element.currentTime - activeMediaState.lastUpdateMediaTime;\n    activeMediaState.lastUpdateMediaTime = me.audio.element.currentTime; // Add to total play time of media:\n\n    activeMediaState.totalMediaPlaySeconds += delta; // Check if played long enough to ping server:\n\n    if (!activeMediaState.flags.longPlay) {\n      if (!activeMediaState.flags.partialPlay) {\n        // If played long enough to flag partial play:\n        if (activeMediaState.totalMediaPlaySeconds >= playerConfig.partialPlaySeconds) {\n          activeMediaState.flags.partialPlay = true;\n          pendingServerUpdates.push({\n            type: 'partialPlay',\n            starID: _ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar.id\n          });\n        }\n      } // If played long enough to flag long play:\n\n\n      var totalPlayTimeFloat = activeMediaState.totalMediaPlaySeconds / me.audio.element.duration;\n\n      if (totalPlayTimeFloat >= playerConfig.longPlayPercent / 100) {\n        activeMediaState.flags.longPlay = true;\n        pendingServerUpdates.push({\n          type: 'longPlay',\n          starID: _ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar.id\n        });\n      }\n    }\n  }\n\n  function onMediaPlayerFinish(event) {\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar.element, 'active');\n\n    if (_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar.element.getAttribute('data-next')) {\n      var star = document.getElementById('s' + _ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar.element.getAttribute('data-next'));\n      load(star);\n    } else {\n      _ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].playingStar = false;\n    }\n  }\n\n  function serverSync() {\n    // Do nothing if there are no server updates to sync ////TODO still sync but with less regularity (to check for client updates)\n    if (!pendingServerUpdates.length) {\n      return false;\n    }\n\n    console.log(pendingServerUpdates);\n    var request = {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        serverUpdates: pendingServerUpdates\n      })\n    };\n    fetch('/ajax/sync', request) ////TODO: to be moved\n    .then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      ///TODO retrieve new information?\n      console.log(result);\n    });\n    pendingServerUpdates = [];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/components/MediaPlayer.js\n");

/***/ }),

/***/ "./client/js/components/Navigation.js":
/*!********************************************!*\
  !*** ./client/js/components/Navigation.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../libs/minlab/cor */ \"./client/js/libs/minlab/cor.js\");\n/* harmony import */ var _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../libs/minlab/spc */ \"./client/js/libs/minlab/spc.js\");\n/* harmony import */ var _libs_minlab_anm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../libs/minlab/anm */ \"./client/js/libs/minlab/anm.js\");\n/* harmony import */ var _libs_history_time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../libs/history-time */ \"./client/js/libs/history-time/index.js\");\n/* harmony import */ var _ClientState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ClientState */ \"./client/js/components/ClientState.js\");\n/* harmony import */ var _Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Interface */ \"./client/js/components/Interface.js\");\n/* harmony import */ var _Stars__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Stars */ \"./client/js/components/Stars.js\");\n/* harmony import */ var _Creator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Creator */ \"./client/js/components/Creator.js\");\n/* harmony import */ var _abstract_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../abstract/constants */ \"./abstract/constants.js\");\n/* harmony import */ var _abstract_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_abstract_constants__WEBPACK_IMPORTED_MODULE_8__);\n\n /// relying on implied singleton\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ClientNavigation()); ///TODO consider combining with Interface\n\n/**\r\n * Handles page transitions and navigation links.\r\n * @constructor\r\n */\n\nfunction ClientNavigation() {\n  var me = this;\n  var starContextMenu;\n  var galaxyContextMenu;\n  var boxPages = ['login', 'register', 'settings', //'invite',\n  'create', 'recreate', 'help' //'renameStar',\n  //'deleteStar',\n  ];\n  var createPages = ['create', 'recreate', 'place', 'color'];\n\n  this.init = function () {\n    // Setup element references:\n    starContextMenu = document.getElementById('starContextMenu');\n    galaxyContextMenu = document.getElementById('galaxyContextMenu'); // Add listener for URI changes:\n\n    _libs_history_time__WEBPACK_IMPORTED_MODULE_3__[\"default\"].bindPathToCallback('*', observePath); // Add listeners to internal navigation links:\n\n    var navLinks = document.getElementsByClassName('nav'); ///REVISIT not really into this class name; something more descriptive?\n\n    for (var navLinkIndex = 0; navLinkIndex < navLinks.length; navLinkIndex++) {\n      var navLink = navLinks[navLinkIndex];\n      navLink.addEventListener('click', onNavLinkClick);\n    }\n\n    var ajaxLinks = document.querySelectorAll('a.ajax'); ///REVISIT architecture\n\n    for (var ajaxLinkIndex = 0; ajaxLinkIndex < ajaxLinks.length; ajaxLinkIndex++) {\n      var ajaxLink = ajaxLinks[ajaxLinkIndex];\n      ajaxLink.addEventListener('click', onAjaxLinkClick);\n    } // Close context menus when outer space is clicked:\n\n\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(_libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element, 'click', function (event) {\n      closeContextMenu(); //if(event.target.parentNode.id == 'spc' && HistoryTime.state.path != '/') { ///\n      //        // state.updating = true;\n      //        me.navigate('/'); //// page title\n      //}\n    }); // Open context menu on right click\n\n    _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(_libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element, 'contextmenu', onContextMenu);\n  };\n\n  this.ready = function () {\n    ///REVISIT architecture:\n    // Set activeWindow if path calls for it; it will already be visible\n    // from the server render:\n    var page = location.pathname.split('/')[1];\n\n    if (page) {\n      ///REVISIT ugly architecture:\n      if (boxPages.includes(page)) {\n        // Assume the server already displayed the page; set variables:\n        _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].currentPage = page;\n        var initialPageEle = document.getElementById(page + '-page');\n        _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeWindow = initialPageEle;\n      }\n\n      switch (page) {\n        case 'star':\n        case 'create':\n        case 'recreate':\n          {\n            // Run normal path logic, setting pageInit arg to true:\n            observePath(location.pathname, true);\n          }\n          break;\n      }\n    }\n  };\n\n  function onNavLinkClick(event) {\n    event.preventDefault(); // state.updating = true;\n\n    me.navigate(event.target.pathname); ///// make page titles\n    // if(cor.cc(this.parentNode, 'star')) {\n    // \tnavigate(path);\n    // } else {\n    // \tif(state.path == path) navigate('/');\n    // \telse navigate(path);\n    // }\n  }\n\n  function onAjaxLinkClick(event) {\n    event.preventDefault(); // Observe path without actually changing it:\n\n    observePath(event.target.pathname);\n  }\n  /**\r\n   * Callback for when user opens the context menu (i.e. right-clicking).\r\n   * @param {Event} event\r\n   **/\n\n\n  function onContextMenu(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    closeContextMenu();\n    var isStarClick = _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cc(event.target.parentNode, 'star'); ///REVISIT weird architecture?\n\n    if (isStarClick) {\n      var starEle = event.target.parentNode;\n      var starID = parseInt(starEle.id.split('s')[1]);\n      console.log(_Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].clientStars);\n      var clientStar = _Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].clientStars[starID]; //document.getElementById('download').href = '/f/'+starID+'.mp3';\n\n      _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].actingStar = clientStar;\n      var bookmarkLink = starContextMenu.getElementsByClassName('bookmarkToggle')[0]; ///TODO i think add starIDs to the URIs? but actually,\n      //then people can send users to that link to force them\n      //to bookmark; so let's not / or at least have a\n      //confirmation box if that happens.\n\n      if (clientStar.isBookmarked) {\n        bookmarkLink.innerText = \"Remove Bookmark\";\n        bookmarkLink.href = \"/removeBookmark\";\n      } else {\n        bookmarkLink.innerText = \"Bookmark\";\n        bookmarkLink.href = \"/bookmark\";\n      }\n\n      if (_Interface__WEBPACK_IMPORTED_MODULE_5__[\"default\"].order == (_abstract_constants__WEBPACK_IMPORTED_MODULE_8___default().ORDER.GALAXY)) {\n        starContextMenu.style.left = clientStar.position.x + 12 + 'px';\n        starContextMenu.style.top = clientStar.position.y - 5 + 'px';\n      } else {\n        starContextMenu.style.left = event.clientX + 'px';\n        starContextMenu.style.top = event.clientY + 'px';\n      } //starContextMenu.children[1].href = starID+'/recreate';\n\n\n      _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].map.appendChild(starContextMenu);\n    } else {\n      closeContextMenu();\n      _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].actingStar = false;\n      galaxyContextMenu.style.left = event.clientX + 'px';\n      galaxyContextMenu.style.top = event.clientY + 'px';\n      document.body.appendChild(galaxyContextMenu);\n    }\n  }\n  /**\r\n   * Close any open context menu.\r\n   **/\n\n\n  function closeContextMenu() {\n    // var menus = document.getElementsByClassName('star menu');\n    // if(menus.length) menus[0].className = 'star';\n    limbo.appendChild(starContextMenu);\n    limbo.appendChild(galaxyContextMenu);\n  }\n  /**\r\n   * Navigate to a URI path.\r\n   * @param {string} path - The path to navigate to.\r\n   **/\n\n\n  this.navigate = function (path) {\n    var pathParts = path.split('/');\n    var newPage = pathParts[1];\n    var pageTitle = \"telephenesis\";\n\n    if (newPage) {\n      ////TODO\n      pageTitle += ' : ' + newPage;\n    } // Pass state handling to HistoryTime:\n\n\n    _libs_history_time__WEBPACK_IMPORTED_MODULE_3__[\"default\"].navigateTo(path, pageTitle);\n  };\n  /**\r\n   * Unload anything related to the current page.\r\n   * @param {string} newPage\r\n   **/\n\n\n  function preparePathChange(newPage) {\n    var oldPage = _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].currentPage; // Handle previous page state: ///REVISIT move to separate method?\n\n    if (boxPages.includes(_ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].currentPage)) {\n      close();\n    } else {\n      switch (oldPage) {\n        case '':\n        case 'star':\n          {// Nothing.\n          }\n          break;\n\n        case 'place':\n        case 'color':\n          {\n            // If exiting creation flow:\n            if (!createPages.includes(newPage)) {\n              // Remove working star:\n              _Creator__WEBPACK_IMPORTED_MODULE_7__[\"default\"].cancel();\n            }\n          }\n          break;\n\n        default:\n          {\n            console.error(\"observePath(): unhandled oldPage '\" + oldPage + '\"');\n          }\n      }\n    }\n  }\n  /**\r\n   * Manipulates the page state according to the path.\r\n   * @param {string} path - The path that the client navigated to.\r\n   **/\n  ///REVISIT not sold on architecture of pageInitialization:\n\n\n  function observePath(path) {\n    var pageInitialization = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var pathParts = path.split('/');\n    var newPage = pathParts[1]; // If this is not initial page load:\n\n    if (!pageInitialization) {\n      closeContextMenu(); ///REVISIT always?\n\n      preparePathChange(newPage);\n\n      if (boxPages.includes(newPage)) {\n        open(newPage);\n      }\n\n      if (createPages.includes(newPage)) {\n        _Interface__WEBPACK_IMPORTED_MODULE_5__[\"default\"].sort((_abstract_constants__WEBPACK_IMPORTED_MODULE_8___default().ORDER.GALAXY));\n      }\n    }\n\n    switch (newPage) {\n      case 'star':\n        {\n          var starID = parseInt(pathParts[2]);\n\n          if (pageInitialization) {\n            ///REVISIT only on pageInit ?\n            ///REVISIT probably do this on server side; though maybe it's cool\n            _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ctr(_Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].clientStars[starID].position.x, _Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].clientStars[starID].position.y); ///TODO change spc over to Vectors\n          }\n\n          _Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].clientStars[starID].play();\n        }\n        break;\n\n      case 'create':\n        {\n          // Check if user has creation tickets:\n          if (!_ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].creationTickets) {\n            _Interface__WEBPACK_IMPORTED_MODULE_5__[\"default\"].displayError((_abstract_constants__WEBPACK_IMPORTED_MODULE_8___default().ERROR.NO_CREATION_TICKETS));\n            return false;\n          }\n\n          _Creator__WEBPACK_IMPORTED_MODULE_7__[\"default\"].initializeCreation();\n        }\n        break;\n\n      case 'recreate':\n        {\n          var starID = parseInt(pathParts[2]); // Check if user has recreation tickets:\n\n          if (!_ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].recreationTickets) {\n            _Interface__WEBPACK_IMPORTED_MODULE_5__[\"default\"].displayError((_abstract_constants__WEBPACK_IMPORTED_MODULE_8___default().ERROR.NO_RECREATION_TICKETS));\n            return false;\n          }\n\n          _Creator__WEBPACK_IMPORTED_MODULE_7__[\"default\"].initializeCreation(_Stars__WEBPACK_IMPORTED_MODULE_6__[\"default\"].clientStars[starID]);\n        }\n        break;\n\n      case 'bookmark':\n        {\n          limbo.appendChild(starContextMenu); ///REVISIT\n\n          _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].actingStar.bookmark();\n        }\n        break;\n\n      case 'removeBookmark':\n        {\n          limbo.appendChild(starContextMenu);\n          _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].actingStar.removeBookmark();\n        }\n        break;\n\n      case 'logout':\n        {\n          logout().then(function () {\n            return me.navigate('/');\n          });\n        }\n        break;\n\n      case '':\n        {\n          ///REVISIT architecture; should newPage be false for this?\n          if (_Interface__WEBPACK_IMPORTED_MODULE_5__[\"default\"].order != (_abstract_constants__WEBPACK_IMPORTED_MODULE_8___default().ORDER.GALAXY)) {\n            _Interface__WEBPACK_IMPORTED_MODULE_5__[\"default\"].sort((_abstract_constants__WEBPACK_IMPORTED_MODULE_8___default().ORDER.GALAXY));\n          }\n        }\n        break;\n\n      default:\n        {\n          if (boxPages.includes(newPage)) {// Assuming no logic.\n          } else {\n            console.error(\"Unhandled path: \" + path); ///TODO some kind of 404?\n          }\n        }\n    }\n\n    _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].currentPage = newPage; // if(state.updating) {\n    // \tstate.path = path;\n    // \thistory.pushState(state, 'telephenesis : ' + newPage, path);\n    // }\n  }\n\n  function open(page) {\n    _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].currentPage = page;\n    var pageElement = document.getElementById(page + '-page');\n\n    if (pageElement) {\n      _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeWindow = pageElement;\n      document.body.appendChild(pageElement);\n      _libs_minlab_anm__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fadeIn(pageElement);\n    } else {\n      ///REVISIT\n      console.error(\"No element for page '\" + page + \"'\");\n    }\n  } ///:\n\n\n  function close(page) {\n    page = typeof page === \"undefined\" ? _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeWindow : page; ///:\n    // menuToggleElement.innerHTML = '|||';\n    // cor.rc(menuToggleElement, 'active');\n    // cor.rc(document.getElementById('menu'), 'active');\n\n    console.log(page);\n\n    if (page) {\n      switch (page) {\n        case 'place':\n          {\n            console.log(\"place\");\n          }\n          break;\n        //default: {\n        //}\n      }\n\n      _libs_minlab_anm__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fadeOut(page, 250, function () {\n        limbo.appendChild(page);\n      });\n    }\n\n    _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].currentPage = false;\n    _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeWindow = false;\n  }\n\n  function logout() {\n    ///REVISIT placement\n    return fetch('/ajax/logout', {\n      method: \"POST\",\n      body: {}\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      if (result.errors.length) {\n        console.error(result.errors); ///\n      } else {\n        var loginPageEle = document.getElementById('login-page');\n        loginPageEle.children[1].value = \"\";\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(document.body, 'in');\n        _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(document.body, 'creator');\n      }\n    })[\"catch\"](function (err) {\n      ///REVISIT client error handling\n      console.error(err);\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LDJEQUFBLENBQU9nQixRQUFRLENBQUMrRCxJQUFoQixFQUFzQixJQUF0QjtBQUNBL0UsUUFBQUEsMkRBQUEsQ0FBT2dCLFFBQVEsQ0FBQytELElBQWhCLEVBQXNCLFNBQXRCO0FBQ0E7QUFDRCxLQWRLLFdBZUMsVUFBQXlDLEdBQUcsRUFBSTtBQUNiO0FBQ0EvRCxNQUFBQSxPQUFPLENBQUNpQyxLQUFSLENBQWM4QixHQUFkO0FBQ0EsS0FsQkssQ0FBUDtBQW1CQTtBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVsZXBoZW5lc2lzLW5vZGVqcy8uL2NsaWVudC9qcy9jb21wb25lbnRzL05hdmlnYXRpb24uanM/MjNmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29yIGZyb20gJy4uL2xpYnMvbWlubGFiL2Nvcic7XHJcbmltcG9ydCBzcGMgZnJvbSAnLi4vbGlicy9taW5sYWIvc3BjJzsgLy8vIHJlbHlpbmcgb24gaW1wbGllZCBzaW5nbGV0b25cclxuaW1wb3J0IEFubSBmcm9tICcuLi9saWJzL21pbmxhYi9hbm0nO1xyXG5pbXBvcnQgSGlzdG9yeVRpbWUgZnJvbSAnLi4vbGlicy9oaXN0b3J5LXRpbWUnO1xyXG5cclxuaW1wb3J0IGNsaWVudFN0YXRlIGZyb20gJy4vQ2xpZW50U3RhdGUnO1xyXG5pbXBvcnQgSW50ZXJmYWNlIGZyb20gJy4vSW50ZXJmYWNlJztcclxuaW1wb3J0IFN0YXJzIGZyb20gJy4vU3RhcnMnO1xyXG5pbXBvcnQgQ3JlYXRvciBmcm9tICcuL0NyZWF0b3InO1xyXG5pbXBvcnQgQ09OU1RTIGZyb20gJy4uLy4uLy4uL2Fic3RyYWN0L2NvbnN0YW50cyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgQ2xpZW50TmF2aWdhdGlvbigpO1xyXG5cclxuLy8vVE9ETyBjb25zaWRlciBjb21iaW5pbmcgd2l0aCBJbnRlcmZhY2VcclxuLyoqXHJcbiAqIEhhbmRsZXMgcGFnZSB0cmFuc2l0aW9ucyBhbmQgbmF2aWdhdGlvbiBsaW5rcy5cclxuICogQGNvbnN0cnVjdG9yXHJcbiAqL1xyXG5mdW5jdGlvbiBDbGllbnROYXZpZ2F0aW9uKCkge1xyXG5cdHZhciBtZSA9IHRoaXM7XHJcblxyXG5cdHZhciBzdGFyQ29udGV4dE1lbnU7XHJcblx0dmFyIGdhbGF4eUNvbnRleHRNZW51O1xyXG5cclxuXHR2YXIgYm94UGFnZXMgPSBbXHJcblx0XHQnbG9naW4nLFxyXG5cdFx0J3JlZ2lzdGVyJyxcclxuXHRcdCdzZXR0aW5ncycsXHJcblx0XHQvLydpbnZpdGUnLFxyXG5cdFx0J2NyZWF0ZScsXHJcblx0XHQncmVjcmVhdGUnLFxyXG5cdFx0J2hlbHAnLFxyXG5cdFx0Ly8ncmVuYW1lU3RhcicsXHJcblx0XHQvLydkZWxldGVTdGFyJyxcclxuXHRdO1xyXG5cclxuXHR2YXIgY3JlYXRlUGFnZXMgPSBbXHJcblx0XHQnY3JlYXRlJyxcclxuXHRcdCdyZWNyZWF0ZScsXHJcblx0XHQncGxhY2UnLFxyXG5cdFx0J2NvbG9yJyxcclxuXHRdO1xyXG5cclxuXHR0aGlzLmluaXQgPSBmdW5jdGlvbigpIHtcclxuXHRcdC8vIFNldHVwIGVsZW1lbnQgcmVmZXJlbmNlczpcclxuXHRcdHN0YXJDb250ZXh0TWVudSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGFyQ29udGV4dE1lbnUnKTtcclxuXHRcdGdhbGF4eUNvbnRleHRNZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dhbGF4eUNvbnRleHRNZW51Jyk7XHJcblxyXG5cdFx0Ly8gQWRkIGxpc3RlbmVyIGZvciBVUkkgY2hhbmdlczpcclxuXHRcdEhpc3RvcnlUaW1lLmJpbmRQYXRoVG9DYWxsYmFjaygnKicsIG9ic2VydmVQYXRoKTtcclxuXHJcblx0XHQvLyBBZGQgbGlzdGVuZXJzIHRvIGludGVybmFsIG5hdmlnYXRpb24gbGlua3M6XHJcblx0XHR2YXIgbmF2TGlua3MgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCduYXYnKTsgLy8vUkVWSVNJVCBub3QgcmVhbGx5IGludG8gdGhpcyBjbGFzcyBuYW1lOyBzb21ldGhpbmcgbW9yZSBkZXNjcmlwdGl2ZT9cclxuXHRcdGZvcih2YXIgbmF2TGlua0luZGV4ID0gMDsgbmF2TGlua0luZGV4IDwgbmF2TGlua3MubGVuZ3RoOyBuYXZMaW5rSW5kZXgrKykge1xyXG5cdFx0XHR2YXIgbmF2TGluayA9IG5hdkxpbmtzW25hdkxpbmtJbmRleF07XHJcblx0XHRcdG5hdkxpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbk5hdkxpbmtDbGljayk7XHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIGFqYXhMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2EuYWpheCcpOyAvLy9SRVZJU0lUIGFyY2hpdGVjdHVyZVxyXG5cdFx0Zm9yKHZhciBhamF4TGlua0luZGV4ID0gMDsgYWpheExpbmtJbmRleCA8IGFqYXhMaW5rcy5sZW5ndGg7IGFqYXhMaW5rSW5kZXgrKykge1xyXG5cdFx0XHR2YXIgYWpheExpbmsgPSBhamF4TGlua3NbYWpheExpbmtJbmRleF07XHJcblx0XHRcdGFqYXhMaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb25BamF4TGlua0NsaWNrKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBDbG9zZSBjb250ZXh0IG1lbnVzIHdoZW4gb3V0ZXIgc3BhY2UgaXMgY2xpY2tlZDpcclxuXHRcdGNvci5hbChzcGMuZWxlbWVudCwgJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdFx0Y2xvc2VDb250ZXh0TWVudSgpO1xyXG5cclxuXHRcdFx0Ly9pZihldmVudC50YXJnZXQucGFyZW50Tm9kZS5pZCA9PSAnc3BjJyAmJiBIaXN0b3J5VGltZS5zdGF0ZS5wYXRoICE9ICcvJykgeyAvLy9cclxuXHRcdFx0Ly8gICAgICAgIC8vIHN0YXRlLnVwZGF0aW5nID0gdHJ1ZTtcclxuXHRcdFx0Ly8gICAgICAgIG1lLm5hdmlnYXRlKCcvJyk7IC8vLy8gcGFnZSB0aXRsZVxyXG5cdFx0XHQvL31cclxuXHRcdH0pO1xyXG5cclxuXHRcdC8vIE9wZW4gY29udGV4dCBtZW51IG9uIHJpZ2h0IGNsaWNrXHJcblx0XHRjb3IuYWwoc3BjLmVsZW1lbnQsICdjb250ZXh0bWVudScsIG9uQ29udGV4dE1lbnUpO1xyXG5cdH1cclxuXHJcblx0dGhpcy5yZWFkeSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0Ly8vUkVWSVNJVCBhcmNoaXRlY3R1cmU6XHJcblx0XHQvLyBTZXQgYWN0aXZlV2luZG93IGlmIHBhdGggY2FsbHMgZm9yIGl0OyBpdCB3aWxsIGFscmVhZHkgYmUgdmlzaWJsZVxyXG5cdFx0Ly8gZnJvbSB0aGUgc2VydmVyIHJlbmRlcjpcclxuXHRcdHZhciBwYWdlID0gbG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoJy8nKVsxXTtcclxuXHRcdGlmKHBhZ2UpIHtcclxuXHRcdFx0Ly8vUkVWSVNJVCB1Z2x5IGFyY2hpdGVjdHVyZTpcclxuXHRcdFx0aWYoYm94UGFnZXMuaW5jbHVkZXMocGFnZSkpIHtcclxuXHRcdFx0XHQvLyBBc3N1bWUgdGhlIHNlcnZlciBhbHJlYWR5IGRpc3BsYXllZCB0aGUgcGFnZTsgc2V0IHZhcmlhYmxlczpcclxuXHRcdFx0XHRjbGllbnRTdGF0ZS5jdXJyZW50UGFnZSA9IHBhZ2U7XHJcblx0XHRcdFx0dmFyIGluaXRpYWxQYWdlRWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocGFnZSArICctcGFnZScpO1xyXG5cdFx0XHRcdGNsaWVudFN0YXRlLmFjdGl2ZVdpbmRvdyA9IGluaXRpYWxQYWdlRWxlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRzd2l0Y2gocGFnZSkge1xyXG5cdFx0XHRcdGNhc2UgJ3N0YXInOlxyXG5cdFx0XHRcdGNhc2UgJ2NyZWF0ZSc6XHJcblx0XHRcdFx0Y2FzZSAncmVjcmVhdGUnOiB7XHJcblx0XHRcdFx0XHQvLyBSdW4gbm9ybWFsIHBhdGggbG9naWMsIHNldHRpbmcgcGFnZUluaXQgYXJnIHRvIHRydWU6XHJcblx0XHRcdFx0XHRvYnNlcnZlUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgdHJ1ZSk7XHJcblx0XHRcdFx0fSBicmVhaztcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIG9uTmF2TGlua0NsaWNrKGV2ZW50KSB7XHJcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRcdC8vIHN0YXRlLnVwZGF0aW5nID0gdHJ1ZTtcclxuXHJcblx0XHRtZS5uYXZpZ2F0ZShldmVudC50YXJnZXQucGF0aG5hbWUpOyAvLy8vLyBtYWtlIHBhZ2UgdGl0bGVzXHJcblxyXG5cdFx0Ly8gaWYoY29yLmNjKHRoaXMucGFyZW50Tm9kZSwgJ3N0YXInKSkge1xyXG5cdFx0Ly8gXHRuYXZpZ2F0ZShwYXRoKTtcclxuXHRcdC8vIH0gZWxzZSB7XHJcblx0XHQvLyBcdGlmKHN0YXRlLnBhdGggPT0gcGF0aCkgbmF2aWdhdGUoJy8nKTtcclxuXHRcdC8vIFx0ZWxzZSBuYXZpZ2F0ZShwYXRoKTtcclxuXHRcdC8vIH1cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIG9uQWpheExpbmtDbGljayhldmVudCkge1xyXG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcblx0XHQvLyBPYnNlcnZlIHBhdGggd2l0aG91dCBhY3R1YWxseSBjaGFuZ2luZyBpdDpcclxuXHRcdG9ic2VydmVQYXRoKGV2ZW50LnRhcmdldC5wYXRobmFtZSk7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBDYWxsYmFjayBmb3Igd2hlbiB1c2VyIG9wZW5zIHRoZSBjb250ZXh0IG1lbnUgKGkuZS4gcmlnaHQtY2xpY2tpbmcpLlxyXG5cdCAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50XHJcblx0ICoqL1xyXG5cdGZ1bmN0aW9uIG9uQ29udGV4dE1lbnUoZXZlbnQpIHtcclxuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcblx0XHRjbG9zZUNvbnRleHRNZW51KCk7XHJcblxyXG5cdFx0dmFyIGlzU3RhckNsaWNrID0gY29yLmNjKGV2ZW50LnRhcmdldC5wYXJlbnROb2RlLCAnc3RhcicpOyAvLy9SRVZJU0lUIHdlaXJkIGFyY2hpdGVjdHVyZT9cclxuXHRcdGlmKGlzU3RhckNsaWNrKSB7XHJcblx0XHRcdHZhciBzdGFyRWxlID0gZXZlbnQudGFyZ2V0LnBhcmVudE5vZGU7XHJcblx0XHRcdHZhciBzdGFySUQgPSBwYXJzZUludChzdGFyRWxlLmlkLnNwbGl0KCdzJylbMV0pO1xyXG5cdFx0XHRjb25zb2xlLmxvZyhTdGFycy5jbGllbnRTdGFycyk7XHJcblx0XHRcdHZhciBjbGllbnRTdGFyID0gU3RhcnMuY2xpZW50U3RhcnNbc3RhcklEXTtcclxuXHJcblx0XHRcdC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rvd25sb2FkJykuaHJlZiA9ICcvZi8nK3N0YXJJRCsnLm1wMyc7XHJcblx0XHRcdGNsaWVudFN0YXRlLmFjdGluZ1N0YXIgPSBjbGllbnRTdGFyO1xyXG5cclxuXHRcdFx0dmFyIGJvb2ttYXJrTGluayA9IHN0YXJDb250ZXh0TWVudS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdib29rbWFya1RvZ2dsZScpWzBdO1xyXG5cdFx0XHQvLy9UT0RPIGkgdGhpbmsgYWRkIHN0YXJJRHMgdG8gdGhlIFVSSXM/IGJ1dCBhY3R1YWxseSxcclxuXHRcdFx0Ly90aGVuIHBlb3BsZSBjYW4gc2VuZCB1c2VycyB0byB0aGF0IGxpbmsgdG8gZm9yY2UgdGhlbVxyXG5cdFx0XHQvL3RvIGJvb2ttYXJrOyBzbyBsZXQncyBub3QgLyBvciBhdCBsZWFzdCBoYXZlIGFcclxuXHRcdFx0Ly9jb25maXJtYXRpb24gYm94IGlmIHRoYXQgaGFwcGVucy5cclxuXHJcblx0XHRcdGlmKGNsaWVudFN0YXIuaXNCb29rbWFya2VkKSB7XHJcblx0XHRcdFx0Ym9va21hcmtMaW5rLmlubmVyVGV4dCA9IFwiUmVtb3ZlIEJvb2ttYXJrXCI7XHJcblx0XHRcdFx0Ym9va21hcmtMaW5rLmhyZWYgPSBcIi9yZW1vdmVCb29rbWFya1wiO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGJvb2ttYXJrTGluay5pbm5lclRleHQgPSBcIkJvb2ttYXJrXCI7XHJcblx0XHRcdFx0Ym9va21hcmtMaW5rLmhyZWYgPSBcIi9ib29rbWFya1wiO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZihJbnRlcmZhY2Uub3JkZXIgPT0gQ09OU1RTLk9SREVSLkdBTEFYWSkge1xyXG5cdFx0XHRcdHN0YXJDb250ZXh0TWVudS5zdHlsZS5sZWZ0ID0gY2xpZW50U3Rhci5wb3NpdGlvbi54ICsgMTIgKyAncHgnO1xyXG5cdFx0XHRcdHN0YXJDb250ZXh0TWVudS5zdHlsZS50b3AgPSBjbGllbnRTdGFyLnBvc2l0aW9uLnkgLSA1ICsgJ3B4JztcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRzdGFyQ29udGV4dE1lbnUuc3R5bGUubGVmdCA9IGV2ZW50LmNsaWVudFggKyAncHgnO1xyXG5cdFx0XHRcdHN0YXJDb250ZXh0TWVudS5zdHlsZS50b3AgPSBldmVudC5jbGllbnRZICsgJ3B4JztcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly9zdGFyQ29udGV4dE1lbnUuY2hpbGRyZW5bMV0uaHJlZiA9IHN0YXJJRCsnL3JlY3JlYXRlJztcclxuXHJcblx0XHRcdHNwYy5tYXAuYXBwZW5kQ2hpbGQoc3RhckNvbnRleHRNZW51KTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGNsb3NlQ29udGV4dE1lbnUoKTtcclxuXHRcdFx0Y2xpZW50U3RhdGUuYWN0aW5nU3RhciA9IGZhbHNlO1xyXG5cclxuXHRcdFx0Z2FsYXh5Q29udGV4dE1lbnUuc3R5bGUubGVmdCA9IGV2ZW50LmNsaWVudFggKyAncHgnO1xyXG5cdFx0XHRnYWxheHlDb250ZXh0TWVudS5zdHlsZS50b3AgPSBldmVudC5jbGllbnRZICsgJ3B4JztcclxuXHJcblx0XHRcdGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZ2FsYXh5Q29udGV4dE1lbnUpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogQ2xvc2UgYW55IG9wZW4gY29udGV4dCBtZW51LlxyXG5cdCAqKi9cclxuXHRmdW5jdGlvbiBjbG9zZUNvbnRleHRNZW51KCkge1xyXG5cdFx0Ly8gdmFyIG1lbnVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnc3RhciBtZW51Jyk7XHJcblx0XHQvLyBpZihtZW51cy5sZW5ndGgpIG1lbnVzWzBdLmNsYXNzTmFtZSA9ICdzdGFyJztcclxuXHRcdGxpbWJvLmFwcGVuZENoaWxkKHN0YXJDb250ZXh0TWVudSk7XHJcblx0XHRsaW1iby5hcHBlbmRDaGlsZChnYWxheHlDb250ZXh0TWVudSk7XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiBOYXZpZ2F0ZSB0byBhIFVSSSBwYXRoLlxyXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIC0gVGhlIHBhdGggdG8gbmF2aWdhdGUgdG8uXHJcblx0ICoqL1xyXG5cdHRoaXMubmF2aWdhdGUgPSBmdW5jdGlvbihwYXRoKSB7XHJcblx0XHR2YXIgcGF0aFBhcnRzID0gcGF0aC5zcGxpdCgnLycpO1xyXG5cdFx0dmFyIG5ld1BhZ2UgPSBwYXRoUGFydHNbMV07XHJcblxyXG5cdFx0dmFyIHBhZ2VUaXRsZSA9IFwidGVsZXBoZW5lc2lzXCI7XHJcblx0XHRpZihuZXdQYWdlKSB7XHJcblx0XHRcdC8vLy9UT0RPXHJcblx0XHRcdHBhZ2VUaXRsZSArPSAnIDogJyArIG5ld1BhZ2U7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gUGFzcyBzdGF0ZSBoYW5kbGluZyB0byBIaXN0b3J5VGltZTpcclxuXHRcdEhpc3RvcnlUaW1lLm5hdmlnYXRlVG8ocGF0aCwgcGFnZVRpdGxlKTtcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIFVubG9hZCBhbnl0aGluZyByZWxhdGVkIHRvIHRoZSBjdXJyZW50IHBhZ2UuXHJcblx0ICogQHBhcmFtIHtzdHJpbmd9IG5ld1BhZ2VcclxuXHQgKiovXHJcblx0ZnVuY3Rpb24gcHJlcGFyZVBhdGhDaGFuZ2UobmV3UGFnZSkge1xyXG5cdFx0dmFyIG9sZFBhZ2UgPSBjbGllbnRTdGF0ZS5jdXJyZW50UGFnZTtcclxuXHJcblx0XHQvLyBIYW5kbGUgcHJldmlvdXMgcGFnZSBzdGF0ZTogLy8vUkVWSVNJVCBtb3ZlIHRvIHNlcGFyYXRlIG1ldGhvZD9cclxuXHRcdGlmKGJveFBhZ2VzLmluY2x1ZGVzKGNsaWVudFN0YXRlLmN1cnJlbnRQYWdlKSkge1xyXG5cdFx0XHRjbG9zZSgpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0c3dpdGNoKG9sZFBhZ2UpIHtcclxuXHRcdFx0XHRjYXNlICcnOlxyXG5cdFx0XHRcdGNhc2UgJ3N0YXInOlxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdC8vIE5vdGhpbmcuXHJcblx0XHRcdFx0fSBicmVhaztcclxuXHJcblx0XHRcdFx0Y2FzZSAncGxhY2UnOlxyXG5cdFx0XHRcdGNhc2UgJ2NvbG9yJzpcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHQvLyBJZiBleGl0aW5nIGNyZWF0aW9uIGZsb3c6XHJcblx0XHRcdFx0XHRpZighY3JlYXRlUGFnZXMuaW5jbHVkZXMobmV3UGFnZSkpIHtcclxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlIHdvcmtpbmcgc3RhcjpcclxuXHRcdFx0XHRcdFx0Q3JlYXRvci5jYW5jZWwoKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9IGJyZWFrO1xyXG5cclxuXHRcdFx0XHRkZWZhdWx0OiB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmVycm9yKFwib2JzZXJ2ZVBhdGgoKTogdW5oYW5kbGVkIG9sZFBhZ2UgJ1wiICsgb2xkUGFnZSArICdcIicpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogTWFuaXB1bGF0ZXMgdGhlIHBhZ2Ugc3RhdGUgYWNjb3JkaW5nIHRvIHRoZSBwYXRoLlxyXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIC0gVGhlIHBhdGggdGhhdCB0aGUgY2xpZW50IG5hdmlnYXRlZCB0by5cclxuXHQgKiovXHJcblx0Ly8vUkVWSVNJVCBub3Qgc29sZCBvbiBhcmNoaXRlY3R1cmUgb2YgcGFnZUluaXRpYWxpemF0aW9uOlxyXG5cdGZ1bmN0aW9uIG9ic2VydmVQYXRoKHBhdGgsIHBhZ2VJbml0aWFsaXphdGlvbiA9IGZhbHNlKSB7XHJcblx0XHR2YXIgcGF0aFBhcnRzID0gcGF0aC5zcGxpdCgnLycpO1xyXG5cdFx0dmFyIG5ld1BhZ2UgPSBwYXRoUGFydHNbMV07XHJcblxyXG5cdFx0Ly8gSWYgdGhpcyBpcyBub3QgaW5pdGlhbCBwYWdlIGxvYWQ6XHJcblx0XHRpZighcGFnZUluaXRpYWxpemF0aW9uKSB7XHJcblx0XHRcdGNsb3NlQ29udGV4dE1lbnUoKTsgLy8vUkVWSVNJVCBhbHdheXM/XHJcblxyXG5cdFx0XHRwcmVwYXJlUGF0aENoYW5nZShuZXdQYWdlKTtcclxuXHJcblx0XHRcdGlmKGJveFBhZ2VzLmluY2x1ZGVzKG5ld1BhZ2UpKSB7XHJcblx0XHRcdFx0b3BlbihuZXdQYWdlKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYoY3JlYXRlUGFnZXMuaW5jbHVkZXMobmV3UGFnZSkpIHtcclxuXHRcdFx0XHRJbnRlcmZhY2Uuc29ydChDT05TVFMuT1JERVIuR0FMQVhZKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHN3aXRjaChuZXdQYWdlKSB7XHJcblx0XHRcdGNhc2UgJ3N0YXInOiB7XHJcblx0XHRcdFx0dmFyIHN0YXJJRCA9IHBhcnNlSW50KHBhdGhQYXJ0c1syXSk7XHJcblxyXG5cdFx0XHRcdGlmKHBhZ2VJbml0aWFsaXphdGlvbikgeyAvLy9SRVZJU0lUIG9ubHkgb24gcGFnZUluaXQgP1xyXG5cdFx0XHRcdFx0Ly8vUkVWSVNJVCBwcm9iYWJseSBkbyB0aGlzIG9uIHNlcnZlciBzaWRlOyB0aG91Z2ggbWF5YmUgaXQncyBjb29sXHJcblx0XHRcdFx0XHRzcGMuY3RyKFN0YXJzLmNsaWVudFN0YXJzW3N0YXJJRF0ucG9zaXRpb24ueCwgU3RhcnMuY2xpZW50U3RhcnNbc3RhcklEXS5wb3NpdGlvbi55KTsgLy8vVE9ETyBjaGFuZ2Ugc3BjIG92ZXIgdG8gVmVjdG9yc1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0U3RhcnMuY2xpZW50U3RhcnNbc3RhcklEXS5wbGF5KCk7XHJcblx0XHRcdH0gYnJlYWs7XHJcblxyXG5cdFx0XHRjYXNlICdjcmVhdGUnOiB7XHJcblx0XHRcdFx0Ly8gQ2hlY2sgaWYgdXNlciBoYXMgY3JlYXRpb24gdGlja2V0czpcclxuXHRcdFx0XHRpZighY2xpZW50U3RhdGUuY3JlYXRpb25UaWNrZXRzKSB7XHJcblx0XHRcdFx0XHRJbnRlcmZhY2UuZGlzcGxheUVycm9yKENPTlNUUy5FUlJPUi5OT19DUkVBVElPTl9USUNLRVRTKTtcclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdENyZWF0b3IuaW5pdGlhbGl6ZUNyZWF0aW9uKCk7XHJcblx0XHRcdH0gYnJlYWs7XHJcblxyXG5cdFx0XHRjYXNlICdyZWNyZWF0ZSc6IHtcclxuXHRcdFx0XHR2YXIgc3RhcklEID0gcGFyc2VJbnQocGF0aFBhcnRzWzJdKTtcclxuXHJcblx0XHRcdFx0Ly8gQ2hlY2sgaWYgdXNlciBoYXMgcmVjcmVhdGlvbiB0aWNrZXRzOlxyXG5cdFx0XHRcdGlmKCFjbGllbnRTdGF0ZS5yZWNyZWF0aW9uVGlja2V0cykge1xyXG5cdFx0XHRcdFx0SW50ZXJmYWNlLmRpc3BsYXlFcnJvcihDT05TVFMuRVJST1IuTk9fUkVDUkVBVElPTl9USUNLRVRTKTtcclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdENyZWF0b3IuaW5pdGlhbGl6ZUNyZWF0aW9uKFN0YXJzLmNsaWVudFN0YXJzW3N0YXJJRF0pO1xyXG5cdFx0XHR9IGJyZWFrO1xyXG5cclxuXHRcdFx0Y2FzZSAnYm9va21hcmsnOiB7XHJcblx0XHRcdFx0bGltYm8uYXBwZW5kQ2hpbGQoc3RhckNvbnRleHRNZW51KTsgLy8vUkVWSVNJVFxyXG5cdFx0XHRcdGNsaWVudFN0YXRlLmFjdGluZ1N0YXIuYm9va21hcmsoKTtcclxuXHRcdFx0fSBicmVhaztcclxuXHJcblx0XHRcdGNhc2UgJ3JlbW92ZUJvb2ttYXJrJzoge1xyXG5cdFx0XHRcdGxpbWJvLmFwcGVuZENoaWxkKHN0YXJDb250ZXh0TWVudSk7XHJcblx0XHRcdFx0Y2xpZW50U3RhdGUuYWN0aW5nU3Rhci5yZW1vdmVCb29rbWFyaygpO1xyXG5cdFx0XHR9IGJyZWFrO1xyXG5cclxuXHRcdFx0Y2FzZSAnbG9nb3V0Jzoge1xyXG5cdFx0XHRcdGxvZ291dCgpLnRoZW4oKCkgPT4gbWUubmF2aWdhdGUoJy8nKSk7XHJcblx0XHRcdH0gYnJlYWs7XHJcblxyXG5cdFx0XHRjYXNlICcnOiB7IC8vL1JFVklTSVQgYXJjaGl0ZWN0dXJlOyBzaG91bGQgbmV3UGFnZSBiZSBmYWxzZSBmb3IgdGhpcz9cclxuXHRcdFx0XHRpZihJbnRlcmZhY2Uub3JkZXIgIT0gQ09OU1RTLk9SREVSLkdBTEFYWSkge1xyXG5cdFx0XHRcdFx0SW50ZXJmYWNlLnNvcnQoQ09OU1RTLk9SREVSLkdBTEFYWSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGJyZWFrO1xyXG5cclxuXHRcdFx0ZGVmYXVsdDoge1xyXG5cdFx0XHRcdGlmKGJveFBhZ2VzLmluY2x1ZGVzKG5ld1BhZ2UpKSB7XHJcblx0XHRcdFx0XHQvLyBBc3N1bWluZyBubyBsb2dpYy5cclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5lcnJvcihcIlVuaGFuZGxlZCBwYXRoOiBcIiArIHBhdGgpO1xyXG5cdFx0XHRcdFx0Ly8vVE9ETyBzb21lIGtpbmQgb2YgNDA0P1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGNsaWVudFN0YXRlLmN1cnJlbnRQYWdlID0gbmV3UGFnZTtcclxuXHJcblx0XHQvLyBpZihzdGF0ZS51cGRhdGluZykge1xyXG5cdFx0Ly8gXHRzdGF0ZS5wYXRoID0gcGF0aDtcclxuXHRcdC8vIFx0aGlzdG9yeS5wdXNoU3RhdGUoc3RhdGUsICd0ZWxlcGhlbmVzaXMgOiAnICsgbmV3UGFnZSwgcGF0aCk7XHJcblx0XHQvLyB9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBvcGVuKHBhZ2UpIHtcclxuXHRcdGNsaWVudFN0YXRlLmN1cnJlbnRQYWdlID0gcGFnZTtcclxuXHJcblx0XHR2YXIgcGFnZUVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwYWdlICsgJy1wYWdlJyk7XHJcblx0XHRpZihwYWdlRWxlbWVudCkge1xyXG5cdFx0XHRjbGllbnRTdGF0ZS5hY3RpdmVXaW5kb3cgPSBwYWdlRWxlbWVudDtcclxuXHRcdFx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChwYWdlRWxlbWVudCk7XHJcblx0XHRcdEFubS5mYWRlSW4ocGFnZUVsZW1lbnQpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0Ly8vUkVWSVNJVFxyXG5cdFx0XHRjb25zb2xlLmVycm9yKFwiTm8gZWxlbWVudCBmb3IgcGFnZSAnXCIgKyBwYWdlICsgXCInXCIpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly8vOlxyXG5cdGZ1bmN0aW9uIGNsb3NlKHBhZ2UpIHtcclxuXHRcdHBhZ2UgPSAodHlwZW9mIHBhZ2UgPT09IFwidW5kZWZpbmVkXCIpID8gY2xpZW50U3RhdGUuYWN0aXZlV2luZG93IDogcGFnZTtcclxuXHJcblx0XHQvLy86XHJcblx0XHQvLyBtZW51VG9nZ2xlRWxlbWVudC5pbm5lckhUTUwgPSAnfHx8JztcclxuXHRcdC8vIGNvci5yYyhtZW51VG9nZ2xlRWxlbWVudCwgJ2FjdGl2ZScpO1xyXG5cdFx0Ly8gY29yLnJjKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZW51JyksICdhY3RpdmUnKTtcclxuXHJcblx0XHRjb25zb2xlLmxvZyhwYWdlKTtcclxuXHRcdGlmKHBhZ2UpIHtcclxuXHRcdFx0c3dpdGNoKHBhZ2UpIHtcclxuXHRcdFx0XHRjYXNlICdwbGFjZSc6IHtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwicGxhY2VcIik7XHJcblx0XHRcdFx0fSBicmVhaztcclxuXHJcblx0XHRcdFx0Ly9kZWZhdWx0OiB7XHJcblx0XHRcdFx0Ly99XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdEFubS5mYWRlT3V0KHBhZ2UsIDI1MCwgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0bGltYm8uYXBwZW5kQ2hpbGQocGFnZSk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdGNsaWVudFN0YXRlLmN1cnJlbnRQYWdlID0gZmFsc2U7XHJcblx0XHRjbGllbnRTdGF0ZS5hY3RpdmVXaW5kb3cgPSBmYWxzZTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGxvZ291dCgpIHsgLy8vUkVWSVNJVCBwbGFjZW1lbnRcclxuXHRcdHJldHVybiBmZXRjaCgnL2FqYXgvbG9nb3V0Jywge1xyXG5cdFx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0XHRib2R5OiB7fVxyXG5cdFx0fSlcclxuXHRcdFx0LnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxyXG5cdFx0XHQudGhlbihyZXN1bHQgPT4ge1xyXG5cdFx0XHRcdGlmKHJlc3VsdC5lcnJvcnMubGVuZ3RoKSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmVycm9yKHJlc3VsdC5lcnJvcnMpOyAvLy9cclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0dmFyIGxvZ2luUGFnZUVsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2dpbi1wYWdlJyk7XHJcblx0XHRcdFx0XHRsb2dpblBhZ2VFbGUuY2hpbGRyZW5bMV0udmFsdWUgPSBcIlwiO1xyXG5cdFx0XHRcdFx0Y29yLnJjKGRvY3VtZW50LmJvZHksICdpbicpO1xyXG5cdFx0XHRcdFx0Y29yLnJjKGRvY3VtZW50LmJvZHksICdjcmVhdG9yJyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KVxyXG5cdFx0XHQuY2F0Y2goZXJyID0+IHtcclxuXHRcdFx0XHQvLy9SRVZJU0lUIGNsaWVudCBlcnJvciBoYW5kbGluZ1xyXG5cdFx0XHRcdGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuXHRcdFx0fSk7XHJcblx0fVxyXG59XHJcbiJdLCJuYW1lcyI6WyJjb3IiLCJzcGMiLCJBbm0iLCJIaXN0b3J5VGltZSIsImNsaWVudFN0YXRlIiwiSW50ZXJmYWNlIiwiU3RhcnMiLCJDcmVhdG9yIiwiQ09OU1RTIiwiQ2xpZW50TmF2aWdhdGlvbiIsIm1lIiwic3RhckNvbnRleHRNZW51IiwiZ2FsYXh5Q29udGV4dE1lbnUiLCJib3hQYWdlcyIsImNyZWF0ZVBhZ2VzIiwiaW5pdCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJiaW5kUGF0aFRvQ2FsbGJhY2siLCJvYnNlcnZlUGF0aCIsIm5hdkxpbmtzIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsIm5hdkxpbmtJbmRleCIsImxlbmd0aCIsIm5hdkxpbmsiLCJhZGRFdmVudExpc3RlbmVyIiwib25OYXZMaW5rQ2xpY2siLCJhamF4TGlua3MiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYWpheExpbmtJbmRleCIsImFqYXhMaW5rIiwib25BamF4TGlua0NsaWNrIiwiYWwiLCJlbGVtZW50IiwiZXZlbnQiLCJjbG9zZUNvbnRleHRNZW51Iiwib25Db250ZXh0TWVudSIsInJlYWR5IiwicGFnZSIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJzcGxpdCIsImluY2x1ZGVzIiwiY3VycmVudFBhZ2UiLCJpbml0aWFsUGFnZUVsZSIsImFjdGl2ZVdpbmRvdyIsInByZXZlbnREZWZhdWx0IiwibmF2aWdhdGUiLCJ0YXJnZXQiLCJzdG9wUHJvcGFnYXRpb24iLCJpc1N0YXJDbGljayIsImNjIiwicGFyZW50Tm9kZSIsInN0YXJFbGUiLCJzdGFySUQiLCJwYXJzZUludCIsImlkIiwiY29uc29sZSIsImxvZyIsImNsaWVudFN0YXJzIiwiY2xpZW50U3RhciIsImFjdGluZ1N0YXIiLCJib29rbWFya0xpbmsiLCJpc0Jvb2ttYXJrZWQiLCJpbm5lclRleHQiLCJocmVmIiwib3JkZXIiLCJPUkRFUiIsIkdBTEFYWSIsInN0eWxlIiwibGVmdCIsInBvc2l0aW9uIiwieCIsInRvcCIsInkiLCJjbGllbnRYIiwiY2xpZW50WSIsIm1hcCIsImFwcGVuZENoaWxkIiwiYm9keSIsImxpbWJvIiwicGF0aCIsInBhdGhQYXJ0cyIsIm5ld1BhZ2UiLCJwYWdlVGl0bGUiLCJuYXZpZ2F0ZVRvIiwicHJlcGFyZVBhdGhDaGFuZ2UiLCJvbGRQYWdlIiwiY2xvc2UiLCJjYW5jZWwiLCJlcnJvciIsInBhZ2VJbml0aWFsaXphdGlvbiIsIm9wZW4iLCJzb3J0IiwiY3RyIiwicGxheSIsImNyZWF0aW9uVGlja2V0cyIsImRpc3BsYXlFcnJvciIsIkVSUk9SIiwiTk9fQ1JFQVRJT05fVElDS0VUUyIsImluaXRpYWxpemVDcmVhdGlvbiIsInJlY3JlYXRpb25UaWNrZXRzIiwiTk9fUkVDUkVBVElPTl9USUNLRVRTIiwiYm9va21hcmsiLCJyZW1vdmVCb29rbWFyayIsImxvZ291dCIsInRoZW4iLCJwYWdlRWxlbWVudCIsImZhZGVJbiIsImZhZGVPdXQiLCJmZXRjaCIsIm1ldGhvZCIsInJlc3BvbnNlIiwianNvbiIsInJlc3VsdCIsImVycm9ycyIsImxvZ2luUGFnZUVsZSIsImNoaWxkcmVuIiwidmFsdWUiLCJyYyIsImVyciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/js/components/Navigation.js\n");

/***/ }),

/***/ "./client/js/components/Stars.js":
/*!***************************************!*\
  !*** ./client/js/components/Stars.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../libs/minlab/cor */ \"./client/js/libs/minlab/cor.js\");\n/* harmony import */ var _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../libs/minlab/spc */ \"./client/js/libs/minlab/spc.js\");\n/* harmony import */ var animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! animejs/lib/anime.es.js */ \"./node_modules/animejs/lib/anime.es.js\");\n/* harmony import */ var _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scss/abstracts/_variables.scss */ \"./client/scss/abstracts/_variables.scss\");\n/* harmony import */ var _ClientState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ClientState */ \"./client/js/components/ClientState.js\");\n/* harmony import */ var _ClientEffects__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ClientEffects */ \"./client/js/components/ClientEffects.js\");\n/* harmony import */ var _ClientStar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ClientStar */ \"./client/js/components/ClientStar.js\");\n/* harmony import */ var _abstract_constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../abstract/constants.js */ \"./abstract/constants.js\");\n/* harmony import */ var _abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7__);\n\n\n // import Anm from './libs/minlab/anm';\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ClientStarsAPI());\n/**\r\n * Handles star sorting and physics.\r\n * @constructor\r\n **/\n\nfunction ClientStarsAPI() {\n  var me = this;\n  /** Active stars currently loaded on the client. **/\n\n  me.clientStars = [];\n  /** Enforced margin between stars. **/\n\n  var starSpacing = 50; ///REVISIT placement; in a central config file maybe?\n\n  /** Array of start and end points for lines between stars. **/\n\n  var constellationLines = [];\n  /** Array of indices in constellationLines[] for lines which are not finished drawing. **/\n\n  var animatingLines = [];\n  /** When the constellation drawing animation began. **/\n\n  var lineDrawStartMS;\n  /** Cached sort results of stars. **/\n\n  this.cachedSorts = {\n    'MOST_RECENT': null\n  };\n\n  this.init = function () {\n    // Convert DOMList to Array for utility:\n    ///REVISIT I have no idea why we need to convert this to an actual array but trying to iterate over\n    /// just getElementsByClassName() is not returning all of the elements and I just spent\n    /// hours trying to figure out why and I'm losing my mind and I give up so:\n    var starElements = Array.from(document.getElementsByClassName('star')); ////TODO not supported in IE, make sure there's something to fill the gap\n    // var starElements = document.getElementsByClassName('star');\n    // for (var starElement of document.getElementsByClassName('star')) {\n\n    for (var starIndex = 0; starIndex < starElements.length; starIndex++) {\n      var starElement = starElements[starIndex]; // Skip placement symbol; not a real star:\n\n      if (starElement.classList.contains('placementSymbol')) {\n        continue;\n      } // Load HTML element into a ClientStar:\n\n\n      var clientStar = new _ClientStar__WEBPACK_IMPORTED_MODULE_6__[\"default\"](starElement);\n      me.clientStars[clientStar.id] = clientStar;\n    } // Convert all styleVar properties to ints (from i.e. \"20px\" to 20)\n\n\n    for (var property in _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n      _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"][property] = parseInt(_scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"][property]);\n    }\n  }; // function onStarClick(event) {\n  // \tevent.preventDefault();\n  // \tplay(event.currentTarget);\n  // \t// if(state.path == path) return true;\n  // }\n\n\n  me.addStar = function (newStar) {\n    // me.attemptPosition(newStar, newStar.position);\n    me.clientStars[newStar.id] = newStar;\n  }; // /**\n  //  * Observe the placement or movement of a star and adjust positions if necessary.\n  //  * @param observedStar {Star} - The star which has moved or been placed.\n  //  */\n  // this.observeStar = function(observedStar) { ///REVISIT naming; observeStarMovement?\n  // \t// If star is too close:\n  // \tvar differenceVector = observedStar.position.subtract(me.position);\n  // \tvar starDistance = differenceVector.getMagnitude();\n  // \t// If star is too close and adjustments must be made:\n  // \tif(starDistance < starSpacing) {\n  // \t\tconst marginExcess = starSpacing - distance;\n  // \t\t// Move observedStar away from this star:\n  // \t\tvar observedStarMovement = differenceVector.normalize().scale(marginExcess);\n  // \t\tobservedStar.attemptPosition(observedStar.position.add(observedStarMovement));\n  // \t\t// Move this star away from observed star:\n  // \t\tvar starMovement = differenceVector.normalize.scale(-1 * marginExcess);\n  // \t\tme.attemptPosition(me.position.add(starMovement));\n  // \t}\n  // }\n\n  /**\r\n   * Attempt to move the star to a position, signaling nearby stars to also move if necessary.\r\n   * @param targetStar {ClientStar} - The star to move.\r\n   * @param newPosition {Vector} - Position to move the star to.\r\n   */\n\n\n  var starMovements = {}; ///ARCHITECTURE\n\n  this.attemptPosition = function (targetStar, newPosition) {\n    ///REVISIT naming/architecture\n    ////TODO this is currently a very dumb function, simply randomly checking for stars and\n    //// moving directly away from any stars which are too close. This likely can lead to\n    //// very inefficient loops where stars are constantly moving back and forth.\n    //// Perhaps the answer is pick a point and push stars outward from there, like a ripple.\n    // me.position = newPosition;\n    // var movingStars = []; ///REVISIT architecture\n    // if(starMovements[targetStar.id]) { ////DEBUGGING\n    // \treturn;\n    // }\n    starMovements[targetStar.id] = newPosition; ///REVISIT\n    // starMovements[targetStar.id] = newPosition;\n    // for(var clientStar of me.clientStars) {\n    // for (var starIndex = 0; starIndex < me.clientStars.length; starIndex++) {\n    // \tvar clientStar = me.clientStars[starIndex];\n\n    me.clientStars.forEach(function (clientStar, starIndex) {\n      if (clientStar.id == targetStar.id) {\n        ///REVISIT best check?\n        console.log('skipping self');\n        return; //continue;\n      }\n\n      var checkPosition = clientStar.position; // Check if we're already planning to move this star:\n\n      if (starMovements.hasOwnProperty(clientStar.id)) {\n        checkPosition = starMovements[clientStar.id];\n      } // Get distance between stars:\n\n\n      var differenceVector = newPosition.subtract(checkPosition);\n      var starDistance = differenceVector.getMagnitude();\n\n      if (starDistance == 0) {\n        console.log(targetStar);\n        console.log(clientStar);\n        throw \"yeah okay\";\n      } // If star is too close and adjustments must be made:\n\n\n      if (starDistance < starSpacing) {\n        // console.log(differenceVector);\n        var marginExcess = starSpacing - starDistance; // Move this clientStar away from targetStar:\n\n        var clientStarMovement = differenceVector.normalize().scale(-1 * (marginExcess + 10) / 2);\n        me.attemptPosition(clientStar, checkPosition.add(clientStarMovement)); // Move targetStar away from clientStar:\n\n        var targetStarMovement = differenceVector.normalize().scale((marginExcess + 10) / 2);\n        me.attemptPosition(targetStar, newPosition.add(targetStarMovement));\n      }\n    }); ///REVISIT should this wait until the root attemptPosition resolves?:\n    // console.log('actualize ' + targetStar.id);\n    // console.log(starMovements[targetStar.id]);\n\n    targetStar.position = starMovements[targetStar.id]; // for(var movingStar of movingStars) {\n    // \tmovingStar.position = starMovements[movingStar.id];\n    // }\n  };\n  /**\r\n   * Retrieve sorted stars; either from cached results or a method.\r\n   * @param {CONSTANTS.ORDER} order\r\n   **/\n\n\n  this.getSortedStars = function (order) {\n    ///TODO enable cache:\n    // if(me.cachedSorts[order] != null) {\n    // \t////CHECK if there have been changes to the loaded stars, we cannot use cache\n    // \treturn true;\n    // }\n    // Rank stars according to order\n    switch (order) {\n      case (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().ORDER.MOST_RECENT):\n        {\n          //me.cachedSorts[order] = [...me.clientStars] ///REVISIT not working\n          // Make a copy of the array:\n          me.cachedSorts[order] = me.clientStars.slice() // Sort by newest:\n          .sort(function (a, b) {\n            // If B is more recent than A, return true\n            return parseInt(b.element.getAttribute('data-timestamp')) - parseInt(a.element.getAttribute('data-timestamp'));\n          }).map(function (star) {\n            return star.element;\n          }) // Remove null/false elements:\n          .filter(function (starEle) {\n            return starEle;\n          }); ///REVISIT is this readable?\n\n          return me.cachedSorts[order];\n        }\n        break;\n\n      case (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().ORDER.CONSTELLATIONS):\n        {\n          var constellations = {};\n          me.clientStars.forEach(function (star) {\n            if (!constellations[star.constellationID]) {\n              constellations[star.constellationID] = [];\n            }\n\n            constellations[star.constellationID].push(star);\n          });\n          Object.keys(constellations).forEach(function (constellationID) {\n            ///REVISIT if we return from server and order elements in\n            //sequence of ID, this should be unnecessary:\n            constellations[constellationID].sort(function (a, b) {\n              return a.timestamp - b.timestamp;\n            });\n          }); ///REVISIT should we be concerned that this order returns a\n          //different data structure than others?:\n\n          me.cachedSorts[order] = constellations;\n          return me.cachedSorts[order];\n        }\n        break;\n\n      case (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().ORDER.MOST_POPULAR):\n        {\n          ///REVISIT we rely on the server to have output the stars in popularity order.\n          /// we should at the very least make this semantically clearer... or just leave a comment\n          return document.getElementsByClassName('star');\n        }\n        break;\n\n      case (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().ORDER.BOOKMARKS):\n        {\n          return document.getElementsByClassName('star bookmarked'); ///REVISIT optimize?\n        }\n        break;\n\n      default:\n        {\n          console.error(\"Unhandled order mode: \" + order);\n        }\n    }\n  };\n  /**\r\n   * Sort the stars by order and display them according to view.\r\n   * @param order {CONSTANTS.ORDER}\r\n   * @param view {CONSTANTS.VIEW}\r\n   **/\n\n\n  this.sort = function (order, view) {\n    ///REVISIT maybe separate into its own component? probably rename when we better understand how we will architect things\n    // if(!view) view = \"list\"; // Explicit because we pass in the value of getAttribute('data-view')\n    var xOffset = -_libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x;\n    var yOffset = -_libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].y;\n    me.clearConstellationLines(); // Reposition each star\n\n    switch (view) {\n      case (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.GALAXY):\n        {\n          _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].s = true; // for (var starIndex = 0; starIndex < me.clientStars.length; starIndex++) {\n          // \tvar starEle = me.clientStars[starIndex].element;\n\n          me.clientStars.forEach(function (clientStar, starIndex) {\n            _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(document.body, 'sorting'); ////\n\n            (0,animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n              targets: clientStar.element,\n              left: clientStar.element.getAttribute('data-x') + 'px',\n              top: clientStar.element.getAttribute('data-y') + 'px',\n              duration: 500 ///TODO move 500 into maybe styleVars or at least a const\n              //complete: function() {}\n\n            }); // Set the dimensions of the canvas to that of the window:\n\n            _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].canvas.width = document.body.offsetWidth;\n            _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].canvas.height = document.body.offsetHeight;\n          });\n        }\n        break;\n\n      case (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.CONSTELLATIONS):\n        {\n          _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].s = false;\n          var sortedElements = this.getSortedStars(order);\n          console.log(sortedElements);\n          _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(document.body, 'sorting');\n          var currentRow = 0;\n\n          for (var constellationID in sortedElements) {\n            var constellationStars = sortedElements[constellationID];\n\n            for (var starIndex = 0; starIndex < constellationStars.length; starIndex++) {\n              var constellationStar = constellationStars[starIndex];\n              var newX = starIndex * _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridSquareSize;\n              var newY = currentRow * _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridSquareSize;\n              (0,animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n                targets: constellationStar.element,\n                left: newX + xOffset + _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridPaddingX + 'px',\n                top: newY + yOffset + _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridPaddingY + 'px',\n                duration: 500\n              }); //constellationStar\n            }\n\n            currentRow += 1;\n          }\n        }\n        break;\n\n      case (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.GRID):\n      case (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.LIST):\n        {\n          _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].s = false;\n          var sortedElements = this.getSortedStars(order); ///REVISIT these variables only used by grid view; sort of odd placed here:\n\n          var currentRow = 0;\n          var columnCount = Math.floor(_scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridWidth / _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridSquareSize);\n          _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(document.body, 'sorting'); ////\n\n          for (var starEleIndex = 0; starEleIndex < sortedElements.length; starEleIndex++) {\n            var starEle = sortedElements[starEleIndex]; ///REVISIT architecture:\n\n            _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(starEle, 'odd');\n            _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rc(starEle, 'even');\n            _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ac(starEle, starEleIndex % 2 ? 'odd' : 'even'); // Calculate target position of the star\n\n            var newX;\n            var newY; // If grid view:\n\n            if (view == (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.GRID)) {\n              newX = _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridSquareSize * (starEleIndex % columnCount);\n              newY = _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridSquareSize * currentRow; // If list view:\n            } else if (view == (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.LIST)) {\n              newX = 0;\n              newY = (_scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridSquareSize + _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridMargin) * starEleIndex;\n            } // Animate the star to its target position\n\n\n            (0,animejs_lib_anime_es_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n              targets: starEle,\n              left: newX + _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridPaddingX + xOffset + 'px',\n              top: newY + _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridPaddingY + yOffset + 'px',\n              duration: 500\n            });\n\n            if (view == (_abstract_constants_js__WEBPACK_IMPORTED_MODULE_7___default().VIEW.GRID)) {\n              // Wrap grid if row filled\n              if (newX >= _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridWidth - _scss_abstracts_variables_scss__WEBPACK_IMPORTED_MODULE_3__[\"default\"].starGridSquareSize) {\n                currentRow += 1;\n              }\n            }\n          } // Redraw constellation lines:\n          ///REVISIT are we good to just use time of animation + 150ms here?:\n\n\n          setTimeout(function () {\n            me.generateConstellationLines();\n            _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].onResize();\n          }, 650);\n        }\n        break;\n      // case 'constellationRows': {\n      // \tvar constellationOrder = [];\n      // \tfor (var starEleIndex = 0; starEleIndex < me.cachedSorts[order].length; starEleIndex++) {\n      // \t\tvar starEle = me.cachedSorts[order][starEleIndex];\n      // \t\t// Calculate target position of the star\n      // \t\tvar newX = styleVars.starGridSquareSize * starEleIndex;\n      // \t\tvar constellationID = starEle.getAttribute('data-constellation');\n      // \t\tvar constellationOrderIndex = constellationOrder.indexOf(constellationID);\n      // \t\tif(constellationOrderIndex == -1) {\n      // \t\t\tconstellationOrderIndex = constellationOrder.length;\n      // \t\t\tconstellationOrder.push(constellationID);\n      // \t\t}\n      // \t\tvar newY = constellationOrderIndex * styleVars.starGridSquareSize;\n      // \t\t// Animate the star to its target position\n      // \t\tanime({\n      // \t\t\ttargets: starEle,\n      // \t\t\tleft: xPadding + newX + 'px',\n      // \t\t\ttop: newY + 'px',\n      // \t\t\tduration: 2000,\n      // \t\t\tcomplete: this.generateConstellationLines\n      // \t\t});\n      // \t}\n      // } break;\n\n      default:\n        {\n          console.error(\"Unhandled star view: \" + view);\n        }\n    }\n  };\n\n  function deleteStar(starElement) {\n    var starID = _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].actingStar.id;\n    var p = \"starID=\" + starID;\n    ajx('/ajax/deleteStar', p, function (d) {\n      var r = JSON.parse(d);\n\n      if (!r.error) {\n        _ClientState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].actingStar.element.fadeOut();\n      }\n    });\n    return false;\n  }\n  /**\r\n   * Prepare constellation lines for drawing.\r\n   **/\n\n\n  this.generateConstellationLines = function () {\n    lineDrawStartMS = performance.now();\n    constellationLines = [];\n    animatingLines = []; // isAnimating = true;\n    // Loop through stars and queue an animated line draw.\n\n    var lineIndex = 0; // for (var starIndex = 0; starIndex < me.clientStars.length; starIndex++) {\n    // \tvar clientStar = me.clientStars[starIndex];\n\n    me.clientStars.forEach(function (clientStar, starIndex) {\n      var starElement = clientStar.element;\n\n      if (clientStar.originStarID != -1) {\n        // If this is not an origin star\n        var rootStar = document.getElementById('s' + clientStar.originStarID);\n        rootStar.setAttribute('data-next', clientStar.id); ///TODO figure out what \"next\" means when there are multiple child stars; also this shouldn't be here if it were being used\n        // We use the star's style.left and .top in case we're in list/grid view:\n\n        constellationLines.push({\n          startX: parseInt(rootStar.style.left),\n          startY: parseInt(rootStar.style.top),\n          //endX: clientStar.position.x,\n          //endY: clientStar.position.y,\n          endX: parseInt(starElement.style.left),\n          endY: parseInt(starElement.style.top),\n          startColor: rootStar.getElementsByTagName('a')[0].style.backgroundColor,\n          ///\n          endColor: starElement.getElementsByTagName('a')[0].style.backgroundColor,\n          ///\n          tier: parseInt(starElement.getAttribute('data-tier')),\n          isAnimating: true /// OPTIMIZATION?\n\n        });\n        animatingLines.push(lineIndex++);\n      }\n    });\n    window.requestAnimationFrame(me.drawLineStep);\n  };\n  /**\r\n   * Draw a frame of the branching constellations.\r\n   * @param {number} currentMS\r\n   * @todo Rename, probably.\r\n   **/\n\n\n  this.drawLineStep = function (currentMS) {\n    //console.log(\"drawLineStep\");\n    _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].context.clearRect(0, 0, _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].canvas.width, _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].canvas.height);\n    var elapsedMS = currentMS - lineDrawStartMS; // for (var animationIndex = 0; animationIndex < animatingLines.length; animationIndex++) {\n    // var lineIndex = animatingLines[animationIndex];\n\n    for (var lineIndex = 0; lineIndex < constellationLines.length; lineIndex++) {\n      var line = constellationLines[lineIndex];\n      var progress;\n\n      if (line.isAnimating) {\n        // Slow down line drawing as it goes on:\n        var delay = (line.tier - 1) * 1000 - (line.tier - 1) * 915; //var delay = (line.tier * 1000) / (line.tier + 1);\n        // var delay = (line.tier - 1) * 1000;\n\n        progress = (elapsedMS - delay) / 1000;\n\n        if (progress < 0) {\n          continue;\n        }\n\n        if (progress >= 1) {\n          progress = 1; // Line fully drawn; remove line from animatingLines:\n\n          animatingLines.splice(animatingLines.indexOf(lineIndex), 1);\n          line.isAnimating = false; // Reduce lineIndex now that animatingLines has been spliced:\n\n          lineIndex -= 1;\n        }\n      } else {\n        progress = 1;\n      }\n\n      var lineVector = new _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Vec2(line.endX - line.startX, line.endY - line.startY).scale(progress);\n      var drawVec = new _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Vec2(line.startX + lineVector.x, line.startY + lineVector.y); // var lineGradient = effects.context.createLinearGradient(0,0,170,0);\n      // var lineGradient = effects.context.createLinearGradient(line.startX,line.startY,line.endX,line.endY);\n      // var lineGradient = effects.context.createLinearGradient(0, 0, line.endX + line.startX, line.endY + line.startY);\n\n      if (!drawVec.x) {\n        console.log(line);\n        console.log(drawVec);\n      }\n\n      var lineGradient = _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].context.createLinearGradient( ///TODO maybe save this with the line? or the data involved?\n      line.startX + _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x, line.startY + _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].y, drawVec.x + _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x, drawVec.y + _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].y);\n      lineGradient.addColorStop(\"0\", line.startColor);\n      lineGradient.addColorStop(\"1.0\", line.endColor); // effects.context.strokeStyle = 'rgb(200, 200, 200)';\n\n      _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].context.strokeStyle = lineGradient;\n      _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].context.beginPath();\n      _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].context.moveTo(line.startX + _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x, line.startY + _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].y);\n      _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].context.lineTo(drawVec.x + _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x, drawVec.y + _libs_minlab_spc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].y);\n      _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].context.stroke();\n    } /// optimize\n\n\n    if (animatingLines.length) {\n      window.requestAnimationFrame(me.drawLineStep); ////\n    }\n  };\n  /**\r\n   * Clear the canvas of the constellation lines.\r\n   * @todo /// make it not just clear the whole canvas or rename this method\r\n   **/\n\n\n  this.clearConstellationLines = function () {\n    _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].context.clearRect(0, 0, _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].canvas.width, _ClientEffects__WEBPACK_IMPORTED_MODULE_5__[\"default\"].canvas.height);\n    constellationLines = [];\n    animatingLines = [];\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/components/Stars.js\n");

/***/ }),

/***/ "./client/js/libs/history-time/index.js":
/*!**********************************************!*\
  !*** ./client/js/libs/history-time/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * Handles history state navigation in web browsers.\r\n */\nvar HistoryTime = /*#__PURE__*/function () {\n  //v0.1\n\n  /**\r\n   * Create a new instance of this class.\r\n   * @param [gtag] {Object}\r\n   */\n  function HistoryTime() {\n    var gtag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    _classCallCheck(this, HistoryTime);\n\n    this.gtag = gtag;\n    this.state = {\n      title: document.title,\n      //path: '/',\n      url: location.pathname + location.search,\n      ///REVISIT; should we prefer location.href?\n      updating: false\n    };\n    this.pathBinds = {};\n    this.bindPropToPath = this.bindPropToPath.bind(this);\n    this.popState = this.popState.bind(this);\n    window.addEventListener('popstate', this.popState, false); ///REVISIT; I think this is so we have a customized state object; but feels weird-- make sure we need it:\n    /// I think one thing this does is makes sure state.url does not contain the domain?\n\n    history.replaceState(this.state, this.state.title, this.state.url);\n    this.activePathBinds = [];\n  } // goBack(event) {\n  // \tevent.preventDefault();\n  // \thistory.back();\n  // }\n\n\n  _createClass(HistoryTime, [{\n    key: \"popState\",\n    value: function popState(event) {\n      this.state = event.state; // var pageTitle = this.state.url.split('/').pop();\n\n      if (this.gtag) {\n        this.gtag('config', 'GA_TRACKING_ID', {\n          'page_path': this.state.url\n        });\n      }\n\n      this.navigateTo(this.state.url, this.state.title, false);\n    }\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(path, pageTitle) {\n      var updateState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      // console.log('navigating to ' + path); ///TODO remove or create debug toggle\n      if (path[0] != '/') path = '/' + path; ///REVISIT is this what we want to do?\n\n      while (this.activePathBinds.length) {\n        ///REVISIT do we always want to clear the whole array on every navigateTo() call?\n        var activePathBind = this.activePathBinds.pop();\n        this.deactivatePathBind(activePathBind);\n      } // Run wildcard callbacks\n\n\n      for (var constantBindIndex = 0; constantBindIndex < this.pathBinds['*'].length; constantBindIndex++) {\n        var constantPathBind = this.pathBinds['*'][constantBindIndex];\n        this.activatePathBind(constantPathBind, path);\n      } // Run callbacks for target path\n\n\n      if (this.pathBinds.hasOwnProperty(path)) {\n        for (var bindIndex = 0; bindIndex < this.pathBinds[path].length; bindIndex++) {\n          var pathBind = this.pathBinds[path][bindIndex];\n          this.activatePathBind(pathBind, path);\n        }\n      }\n\n      document.title = pageTitle; //`\n\n      if (updateState) {\n        this.state.title = pageTitle; //`\n\n        this.state.url = path; // this.state.path = path;\n\n        history.pushState(this.state, this.state.title, this.state.url);\n      }\n    }\n  }, {\n    key: \"activatePathBind\",\n    value: function activatePathBind(pathBind, path) {\n      if (!pathBind.oneWay) {\n        this.activePathBinds.push(pathBind);\n      }\n\n      switch (pathBind.nature) {\n        case 'callback':\n          {\n            pathBind.pathCallback(path);\n          }\n          break;\n\n        case 'prop':\n          {\n            pathBind.component.setState(_defineProperty({}, pathBind.property, pathBind.onValue));\n          }\n          break;\n\n        default:\n          {///TODO error? maybe we don't really care.\n          }\n      }\n    }\n  }, {\n    key: \"deactivatePathBind\",\n    value: function deactivatePathBind(pathBind) {\n      switch (pathBind.nature) {\n        case 'callback':\n          {\n            if (pathBind.offCallback) {\n              pathBind.offCallback();\n            }\n          }\n          break;\n\n        case 'prop':\n          {\n            activePathBind.component.setState(_defineProperty({}, activePathBind.property, activePathBind.offValue));\n          }\n          break;\n      }\n    }\n  }, {\n    key: \"bindPathToCallback\",\n    value: function bindPathToCallback(path, pathCallback) {\n      var offCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (!this.pathBinds.hasOwnProperty(path)) {\n        this.pathBinds[path] = [];\n      }\n\n      var pathBind = {\n        nature: 'callback',\n        pathCallback: pathCallback,\n        offCallback: offCallback\n      };\n\n      if (this.state.url == path) {\n        this.activatePathBind(pathBind);\n      }\n\n      this.pathBinds[path].push(pathBind);\n    }\n  }, {\n    key: \"bindPropToPath\",\n    value: function bindPropToPath(path, component, property, onValue) {\n      var offValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var oneWay = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n      // path = this.boilPath(path);\n      if (!this.pathBinds.hasOwnProperty(path)) {\n        this.pathBinds[path] = [];\n      }\n\n      var pathBind = {\n        nature: 'prop',\n        component: component,\n        property: property,\n        onValue: onValue,\n        offValue: offValue,\n        oneWay: oneWay\n      };\n\n      if (this.state.url == path) {\n        this.activatePathBind(pathBind);\n      }\n\n      this.pathBinds[path].push(pathBind);\n    }\n  }, {\n    key: \"boilPath\",\n    value: function boilPath(path) {\n      ///TODO doesn't do anything at the moment. remove?\n      // var urlInstance = new URL(path);\n      // return urlInstance.hostname + urlInstance.pathname;\n      return path;\n    }\n  }]);\n\n  return HistoryTime;\n}(); ////\n\n\nvar singleInstance = {};\n\nif (typeof window !== \"undefined\") {\n  singleInstance = new HistoryTime();\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (singleInstance);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/libs/history-time/index.js\n");

/***/ }),

/***/ "./client/js/libs/minlab/anm.js":
/*!**************************************!*\
  !*** ./client/js/libs/minlab/anm.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  animate: animate,\n  fadeIn: fadeIn,\n  fadeOut: fadeOut\n});\n\nfunction animate(o, p, v, d) {\n  d = typeof d === \"undefined\" ? 250 : d;\n  var px = v.substr(-2) == 'px';\n  var f = 0;\n  var fs = d / 2 | 0;\n  var vi = o.style[p].split(' ');\n  var vs = v.split(' ');\n  var vd = [];\n\n  for (var i = 0, j = vs.length; i < j; i++) {\n    vs[i] = parseInt(vs[i]);\n    vi[i] = parseInt(vi[i]);\n    vd[i] = vs[i] - vi[i];\n  }\n\n  var l = function l() {\n    var vn = '';\n\n    for (var i = 0, j = vs.length; i < j; i++) {\n      if (i) vn += ' ';\n      vn += vi[i] + vd[i] * f / fs;\n      if (px) vn += 'px';\n    }\n\n    o.style[p] = vn;\n    f++;\n    if (f <= fs) setTimeout(l, 2); /// imprecise\n  };\n\n  l();\n} /// consolidate In and Out?\n\n\nfunction fadeIn(o, d, c) {\n  d = typeof d === \"undefined\" ? 250 : d;\n  c = typeof c === \"undefined\" ? false : c;\n  if (o.style.opacity == 1) return false;\n  var fs = d / 5 | 0;\n  var f = 0;\n  o.style.display = ''; ///\n\n  var l = function l() {\n    o.style.opacity = 0 + 1 * (f / fs);\n    f++;\n    if (f <= fs) setTimeout(l, 5);else if (c) c();\n  };\n\n  l();\n}\n\n;\n\nfunction fadeOut(o, d, c) {\n  d = typeof d === \"undefined\" ? 250 : d;\n  c = typeof c === \"undefined\" ? false : c;\n  var fs = d / 5 | 0;\n  var f = 0;\n  var t = null;\n\n  var l = function l() {\n    o.style.opacity = 1 - 1 * (f / fs);\n    f++;\n    if (f <= fs) t = setTimeout(l, 5);else {\n      o.style.display = 'none';\n      if (c) c();\n    }\n  };\n\n  l();\n}\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ZCxDQUFWLEtBQ0s7QUFBRWpCLE1BQUFBLENBQUMsQ0FBQ1MsS0FBRixDQUFRYSxPQUFSLEdBQWtCLE1BQWxCO0FBQTBCLFVBQUdGLENBQUgsRUFBTUEsQ0FBQztBQUFJO0FBQzVDLEdBTEQ7O0FBT0FILEVBQUFBLENBQUM7QUFDRDs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbGVwaGVuZXNpcy1ub2RlanMvLi9jbGllbnQvanMvbGlicy9taW5sYWIvYW5tLmpzP2IwNGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgeyBhbmltYXRlLCBmYWRlSW4sIGZhZGVPdXQgfTtcclxuXHJcbmZ1bmN0aW9uIGFuaW1hdGUobywgcCwgdiwgZCkge1xyXG5cdGQgPSAodHlwZW9mIGQgPT09IFwidW5kZWZpbmVkXCIpID8gMjUwIDogZDtcclxuXHR2YXIgcHggPSB2LnN1YnN0cigtMikgPT0gJ3B4JztcclxuXHR2YXIgZiA9IDA7XHJcblx0dmFyIGZzID0gZC8yIHwgMDtcclxuXHJcblx0dmFyIHZpID0gby5zdHlsZVtwXS5zcGxpdCgnICcpO1xyXG5cdHZhciB2cyA9IHYuc3BsaXQoJyAnKTtcclxuXHR2YXIgdmQgPSBbXTtcclxuXHJcblx0Zm9yKHZhciBpPTAsIGo9dnMubGVuZ3RoOyBpPGo7IGkrKykge1xyXG5cdFx0dnNbaV0gPSBwYXJzZUludCh2c1tpXSk7XHJcblx0XHR2aVtpXSA9IHBhcnNlSW50KHZpW2ldKTtcclxuXHRcdHZkW2ldID0gdnNbaV0gLSB2aVtpXTtcclxuXHR9XHJcblxyXG5cdHZhciBsID0gZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgdm4gPSAnJztcclxuXHRcdGZvcih2YXIgaT0wLCBqPXZzLmxlbmd0aDsgaTxqOyBpKyspIHtcclxuXHRcdFx0aWYoaSkgdm4gKz0gJyAnO1xyXG5cdFx0XHR2biArPSB2aVtpXSArICh2ZFtpXSAqIGYvZnMpO1xyXG5cdFx0XHRpZihweCkgdm4gKz0gJ3B4JztcclxuXHRcdH1cclxuXHJcblx0XHRvLnN0eWxlW3BdID0gdm47XHJcblxyXG5cdFx0ZisrO1xyXG5cdFx0aWYoZjw9ZnMpIHNldFRpbWVvdXQobCwgMik7IC8vLyBpbXByZWNpc2VcclxuXHR9O1xyXG5cclxuXHRsKCk7XHJcbn1cclxuXHJcblxyXG4vLy8gY29uc29saWRhdGUgSW4gYW5kIE91dD9cclxuZnVuY3Rpb24gZmFkZUluKG8sIGQsIGMpIHtcclxuXHRkID0gKHR5cGVvZiBkID09PSBcInVuZGVmaW5lZFwiKSA/IDI1MCA6IGQ7XHJcblx0YyA9ICh0eXBlb2YgYyA9PT0gXCJ1bmRlZmluZWRcIikgPyBmYWxzZSA6IGM7XHJcblxyXG5cdGlmKG8uc3R5bGUub3BhY2l0eSA9PSAxKSByZXR1cm4gZmFsc2U7XHJcblxyXG5cdHZhciBmcyA9IGQvNSB8IDA7XHJcblx0dmFyIGYgPSAwO1xyXG5cclxuXHRvLnN0eWxlLmRpc3BsYXkgPSAnJzsgLy8vXHJcblxyXG5cdHZhciBsID0gZnVuY3Rpb24oKSB7XHJcblx0XHRvLnN0eWxlLm9wYWNpdHkgPSAwKzEqKGYvZnMpO1xyXG5cdFx0ZisrO1xyXG5cdFx0aWYoZjw9ZnMpIHNldFRpbWVvdXQobCwgNSk7XHJcblx0XHRlbHNlIGlmKGMpIGMoKTtcclxuXHR9O1x0XHJcblxyXG5cdGwoKTtcclxufTtcclxuXHJcblxyXG5mdW5jdGlvbiBmYWRlT3V0KG8sIGQsIGMpIHtcclxuXHRkID0gKHR5cGVvZiBkID09PSBcInVuZGVmaW5lZFwiKSA/IDI1MCA6IGQ7XHJcblx0YyA9ICh0eXBlb2YgYyA9PT0gXCJ1bmRlZmluZWRcIikgPyBmYWxzZSA6IGM7XHJcblxyXG5cdHZhciBmcyA9IGQvNSB8IDA7XHJcblx0dmFyIGYgPSAwO1xyXG5cdHZhciB0ID0gbnVsbDtcclxuXHJcblx0dmFyIGwgPSBmdW5jdGlvbigpe1xyXG5cdFx0by5zdHlsZS5vcGFjaXR5ID0gMS0xKihmL2ZzKTtcclxuXHRcdGYrKztcclxuXHRcdGlmKGY8PWZzKSB0ID0gc2V0VGltZW91dChsLCA1KTtcclxuXHRcdGVsc2UgeyBvLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7IGlmKGMpIGMoKSB9XHJcblx0fTtcclxuXHJcblx0bCgpO1xyXG59O1xyXG4iXSwibmFtZXMiOlsiYW5pbWF0ZSIsImZhZGVJbiIsImZhZGVPdXQiLCJvIiwicCIsInYiLCJkIiwicHgiLCJzdWJzdHIiLCJmIiwiZnMiLCJ2aSIsInN0eWxlIiwic3BsaXQiLCJ2cyIsInZkIiwiaSIsImoiLCJsZW5ndGgiLCJwYXJzZUludCIsImwiLCJ2biIsInNldFRpbWVvdXQiLCJjIiwib3BhY2l0eSIsImRpc3BsYXkiLCJ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/js/libs/minlab/anm.js\n");

/***/ }),

/***/ "./client/js/libs/minlab/aud.js":
/*!**************************************!*\
  !*** ./client/js/libs/minlab/aud.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cor */ \"./client/js/libs/minlab/cor.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n/**\r\n * Simple class that wraps around an HTML5 audio element to \r\n * provide a minimalistic interface for handling media.\r\n * @param {string} [elementID=\"aud\"]\r\n * @param {Array} [callbacks]\r\n * @param {Element} [seekbar]\r\n **/\n\nvar Aud = /*#__PURE__*/function () {\n  function Aud() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      elementID: \"aud\",\n      callbacks: [],\n      seekbar: false\n    };\n\n    _classCallCheck(this, Aud);\n\n    this.init = this.init.bind(this);\n    this.update = this.update.bind(this);\n    this.onSeekbarClick = this.onSeekbarClick.bind(this);\n    this.options = options;\n    this.element;\n    this.autoplaying = false;\n\n    if (document.readyState != 'complete') {\n      document.addEventListener(\"DOMContentLoaded\", this.init);\n    } else {\n      this.init();\n    }\n  }\n  /** Initialize the player and setup media events. **/\n\n\n  _createClass(Aud, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      //loa = (typeof loa === \"function\") ? false : loa;\n      //pla = (typeof pla === \"undefined\") ? \"aud_pla\" : pla;\n      //pau = (typeof pau === \"undefined\") ? \"aud_pau\" : pau;\n      this.element = document.getElementById(this.options.elementID);\n      this.element.loop = false;\n\n      if (this.options.seekbar) {\n        this.options.seekbar.addEventListener('click', this.onSeekbarClick);\n      }\n\n      this.timeString = null;\n      this.playbackProgress = null;\n      this.aut = true;\n      this.autoplaying = false;\n      this.duration = null;\n      this.minuteLength = null;\n      this.secondLength = null;\n      _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(this.element, 'canplay', function () {\n        if (_this.autoplaying) {\n          _this.play();\n        }\n      });\n      _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(this.element, 'error', function () {\n        return _this.elementError();\n      }); // cor.rl(this.element, 'canplay', this.pl);\n\n      _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(this.element, 'timeupdate', function () {\n        return _this.update();\n      });\n    }\n    /** Play the active media. **/\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      this.duration = this.element.duration | 0;\n      this.minuteLength = this.duration / 60 | 0;\n      this.secondLength = this.duration - this.minuteLength * 60 + '';\n      if (this.secondLength.length < 2) this.secondLength = \"0\" + this.secondLength;\n      this.element.play();\n      return true;\n    }\n    /** Pause the active media. **/\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.element.pause();\n      return true;\n    }\n    /** Stop the active media. **/\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.element.pause();\n      this.element.currentTime = 0;\n      return true;\n    }\n    /** Load new media into the player. **/\n\n  }, {\n    key: \"load\",\n    value: function load(src) {\n      var autoplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.autoplaying = autoplay;\n      this.element.setAttribute('src', src);\n      this.element.load();\n    }\n    /** Audio class-specific error event callback. **/\n\n  }, {\n    key: \"elementError\",\n    value: function elementError() {\n      /// naming\n      ////\n      console.log(\"Audio Error:\");\n      console.log(this.element.error);\n    }\n    /** Update the player interface as a callback for media playback time changing. **/\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var currentTime = this.element.currentTime | 0;\n      var minutes = currentTime / 60 | 0;\n      var seconds = currentTime - minutes * 60 + '';\n\n      if (seconds.length < 2) {\n        seconds = \"0\" + seconds;\n      }\n\n      if (this.minuteLength == 'null') {\n        this.timeString = 'loading...';\n      } else {\n        this.timeString = minutes + ':' + seconds + ' / ' + this.minuteLength + ':' + this.secondLength;\n      }\n\n      this.playbackProgress = currentTime / this.duration;\n    }\n    /**\r\n     * Seek to playback time based on position of click in the seekbar.\r\n     * @param {Event} event - The click event.\r\n     **/\n\n  }, {\n    key: \"onSeekbarClick\",\n    value: function onSeekbarClick(event) {\n      var mousePos = _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].relativeToElement(this.options.seekbar, {\n        x: event.clientX,\n        y: event.clientY\n      });\n      var seekFloat = mousePos.x / this.options.seekbar.offsetWidth;\n      this.element.currentTime = seekFloat * this.element.duration;\n    }\n  }]);\n\n  return Aud;\n}(); // export default new Aud(\"aud\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Aud);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/libs/minlab/aud.js\n");

/***/ }),

/***/ "./client/js/libs/minlab/colorTool.js":
/*!********************************************!*\
  !*** ./client/js/libs/minlab/colorTool.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ColorTool());\n\nfunction ColorTool() {\n  /// naming\n  var me = this;\n\n  me.rgb = function (r, g, b) {\n    var min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v = max;\n    v = Math.floor(max / 255 * 100);\n    if (max != 0) s = Math.floor(delta / max * 100);else {\n      // black\n      return [0, 0, 0];\n    }\n    if (r == max) h = (g - b) / delta; // between yellow & magenta\n    else if (g == max) h = 2 + (b - r) / delta; // between cyan & yellow\n    else h = 4 + (r - g) / delta; // between magenta & cyan\n\n    h = Math.floor(h * 60); // degrees\n\n    if (h < 0) h += 360;\n    return [h, s, v];\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvanMvbGlicy9taW5sYWIvY29sb3JUb29sLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxJQUFJQSxTQUFKLEVBQWY7O0FBRUEsU0FBU0EsU0FBVCxHQUFxQjtBQUFFO0FBQ3RCLE1BQUlDLEVBQUUsR0FBRyxJQUFUOztBQUVBQSxFQUFBQSxFQUFFLENBQUNDLEdBQUgsR0FBUyxVQUFTQyxDQUFULEVBQVdDLENBQVgsRUFBYUMsQ0FBYixFQUFnQjtBQUNyQixRQUNJQyxHQUFHLEdBQUdDLElBQUksQ0FBQ0QsR0FBTCxDQUFTSCxDQUFULEVBQVlDLENBQVosRUFBZUMsQ0FBZixDQURWO0FBQUEsUUFFSUcsR0FBRyxHQUFHRCxJQUFJLENBQUNDLEdBQUwsQ0FBU0wsQ0FBVCxFQUFZQyxDQUFaLEVBQWVDLENBQWYsQ0FGVjtBQUFBLFFBR0lJLEtBQUssR0FBR0QsR0FBRyxHQUFHRixHQUhsQjtBQUFBLFFBSUlJLENBSko7QUFBQSxRQUlPQyxDQUpQO0FBQUEsUUFJVUMsQ0FBQyxHQUFHSixHQUpkO0FBTUFJLElBQUFBLENBQUMsR0FBR0wsSUFBSSxDQUFDTSxLQUFMLENBQVdMLEdBQUcsR0FBRyxHQUFOLEdBQVksR0FBdkIsQ0FBSjtBQUNBLFFBQUtBLEdBQUcsSUFBSSxDQUFaLEVBQWdCRyxDQUFDLEdBQUdKLElBQUksQ0FBQ00sS0FBTCxDQUFXSixLQUFLLEdBQUdELEdBQVIsR0FBYyxHQUF6QixDQUFKLENBQWhCLEtBQ0s7QUFDRDtBQUNBLGFBQU8sQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsQ0FBUDtBQUNIO0FBRUQsUUFBSUwsQ0FBQyxJQUFJSyxHQUFULEVBQWVFLENBQUMsR0FBRyxDQUFFTixDQUFDLEdBQUdDLENBQU4sSUFBWUksS0FBaEIsQ0FBZixDQUE4QztBQUE5QyxTQUNLLElBQUlMLENBQUMsSUFBSUksR0FBVCxFQUFlRSxDQUFDLEdBQUcsSUFBSSxDQUFFTCxDQUFDLEdBQUdGLENBQU4sSUFBWU0sS0FBcEIsQ0FBZixDQUE4QztBQUE5QyxTQUNBQyxDQUFDLEdBQUcsSUFBSSxDQUFFUCxDQUFDLEdBQUdDLENBQU4sSUFBWUssS0FBcEIsQ0FoQmdCLENBZ0JlOztBQUVwQ0MsSUFBQUEsQ0FBQyxHQUFHSCxJQUFJLENBQUNNLEtBQUwsQ0FBV0gsQ0FBQyxHQUFHLEVBQWYsQ0FBSixDQWxCcUIsQ0FrQmM7O0FBQ25DLFFBQUlBLENBQUMsR0FBRyxDQUFSLEVBQVlBLENBQUMsSUFBSSxHQUFMO0FBRVosV0FBTyxDQUFDQSxDQUFELEVBQUlDLENBQUosRUFBT0MsQ0FBUCxDQUFQO0FBQ0gsR0F0QkQ7QUF1QkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWxlcGhlbmVzaXMtbm9kZWpzLy4vY2xpZW50L2pzL2xpYnMvbWlubGFiL2NvbG9yVG9vbC5qcz8wYzk1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IG5ldyBDb2xvclRvb2woKTtcclxuXHJcbmZ1bmN0aW9uIENvbG9yVG9vbCgpIHsgLy8vIG5hbWluZ1xyXG5cdHZhciBtZSA9IHRoaXM7XHJcblxyXG5cdG1lLnJnYiA9IGZ1bmN0aW9uKHIsZyxiKSB7XHJcblx0ICAgIHZhclxyXG5cdCAgICAgICAgbWluID0gTWF0aC5taW4ociwgZywgYiksXHJcblx0ICAgICAgICBtYXggPSBNYXRoLm1heChyLCBnLCBiKSxcclxuXHQgICAgICAgIGRlbHRhID0gbWF4IC0gbWluLFxyXG5cdCAgICAgICAgaCwgcywgdiA9IG1heDtcclxuXHJcblx0ICAgIHYgPSBNYXRoLmZsb29yKG1heCAvIDI1NSAqIDEwMCk7XHJcblx0ICAgIGlmICggbWF4ICE9IDAgKSBzID0gTWF0aC5mbG9vcihkZWx0YSAvIG1heCAqIDEwMCk7XHJcblx0ICAgIGVsc2Uge1xyXG5cdCAgICAgICAgLy8gYmxhY2tcclxuXHQgICAgICAgIHJldHVybiBbMCwgMCwgMF07XHJcblx0ICAgIH1cclxuXHJcblx0ICAgIGlmKCByID09IG1heCApIGggPSAoIGcgLSBiICkgLyBkZWx0YTsgICAgICAgICAvLyBiZXR3ZWVuIHllbGxvdyAmIG1hZ2VudGFcclxuXHQgICAgZWxzZSBpZiggZyA9PSBtYXggKSBoID0gMiArICggYiAtIHIgKSAvIGRlbHRhOyAgICAgLy8gYmV0d2VlbiBjeWFuICYgeWVsbG93XHJcblx0ICAgIGVsc2UgaCA9IDQgKyAoIHIgLSBnICkgLyBkZWx0YTsgICAgIC8vIGJldHdlZW4gbWFnZW50YSAmIGN5YW5cclxuXHJcblx0ICAgIGggPSBNYXRoLmZsb29yKGggKiA2MCk7ICAgICAgICAgICAgLy8gZGVncmVlc1xyXG5cdCAgICBpZiggaCA8IDAgKSBoICs9IDM2MDtcclxuXHJcblx0ICAgIHJldHVybiBbaCwgcywgdl07XHJcblx0fVxyXG59XHJcblxyXG4iXSwibmFtZXMiOlsiQ29sb3JUb29sIiwibWUiLCJyZ2IiLCJyIiwiZyIsImIiLCJtaW4iLCJNYXRoIiwibWF4IiwiZGVsdGEiLCJoIiwicyIsInYiLCJmbG9vciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/js/libs/minlab/colorTool.js\n");

/***/ }),

/***/ "./client/js/libs/minlab/cor.js":
/*!**************************************!*\
  !*** ./client/js/libs/minlab/cor.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// var EXPORTED_SYMBOLS = ['al', 'rl', 'ac', 'rc', 'cc'];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  _: _,\n  relativeToElement: relativeToElement,\n  relativeToEventTarget: relativeToEventTarget,\n  al: al,\n  rl: rl,\n  ac: ac,\n  rc: rc,\n  cc: cc,\n  POST: POST\n});\n\nfunction _(selector) {\n  if (selector[0] == '#') {\n    var elementID = selector.slice(1); // remove '#'\n    //// more stuff\n\n    var selectedElement = document.getElementById(elementID);\n\n    if (selectedElement) {\n      return selectedElement;\n    } else {\n      console.log(\"_() did not find #\" + elementID);\n      return false;\n    }\n  } else if (selector[0] == '.') {\n    var className = selector.slice(1); // remove '#'\n\n    var selectedElements = document.getElementsByClassName(className);\n    return selectedElements;\n  }\n\n  return false; ////\n}\n\nfunction relativeToElement(element, vec2) {\n  var rect = element.getBoundingClientRect();\n  var x = vec2.x - rect.left;\n  var y = vec2.y - rect.top;\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction relativeToEventTarget(event) {\n  return relativeToElement(event.target, {\n    x: event.clientX,\n    y: event.clientY\n  });\n}\n\nfunction al(ele, eve, fnc) {\n  if (!ele) return false;\n  if (ele.addEventListener) ele.addEventListener(eve, fnc, false);else if (ele.attachEvent) ele.attachEvent('on' + eve, fnc);\n}\n\nfunction rl(ele, eve, fnc) {\n  if (!ele) return false;\n  if (ele.removeEventListener) ele.removeEventListener(eve, fnc, false);else if (ele.detachEvent) ele.detachEvent('on' + eve, fnc);\n}\n\nfunction ac(ele, cls) {\n  if ((' ' + ele.className + ' ').indexOf(' ' + cls + ' ') !== -1) return false;\n  ele.className += ' ' + cls;\n}\n\nfunction rc(ele, cls) {\n  if ((' ' + ele.className + ' ').indexOf(' ' + cls + ' ') === -1) return false;\n  ele.className = ele.className.replace(cls, ''); ///\n}\n\nfunction cc(ele, cls) {\n  if ((' ' + ele.className + ' ').indexOf(' ' + cls + ' ') !== -1) return true;else return;\n} // AJAX Methods:\n\n/**\r\n * Sends a POST request; attempts to automatically format body.\r\n * @param {string|FormData|Object} body\r\n **/\n\n\nfunction POST(url) {\n  var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var request = {\n    method: \"POST\",\n    headers: {},\n    body: null\n  };\n\n  if (_typeof(body) == 'object') {\n    request.body = JSON.stringify(body);\n    request.headers['Content-Type'] = 'application/json'; //} else if(body instanceof FormData) {\n  } else {\n    throw new Error(\"COR.POST(): unhandled body type '\" + _typeof(body) + '\"');\n  }\n\n  return fetch(url, request);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/libs/minlab/cor.js\n");

/***/ }),

/***/ "./client/js/libs/minlab/spc.js":
/*!**************************************!*\
  !*** ./client/js/libs/minlab/spc.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cor */ \"./client/js/libs/minlab/cor.js\");\n/* harmony import */ var _anm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./anm */ \"./client/js/libs/minlab/anm.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// v0.02\n\n/*\r\n\ts : state\r\n\r\n\td : drift\r\n\tl : loop\r\n\tm : map\r\n*/\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Spc()); // export default Spc;\n\n\n\n\nfunction Spc() {\n  var elementID = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"spc\";\n  /// a blurred animation for going to a point over space that isn't loaded\n  /// make mov() generic so you can get places without using the formula\n  /// background flt optionally independent of spc.map\n  var me = this;\n  document.addEventListener(\"DOMContentLoaded\", init); //// backwards-compatibility\n\n  var targetCenter = false;\n  var centering = false;\n  var bfr = 3; ///\n\n  var seg = 500; ///\n\n  var lastX;\n  var lastY;\n  var xc = 0;\n  var yc = 0;\n  var ld = {};\n  var lyr;\n  me.moveCallbacks = [];\n\n  function init() {\n    me.element = document.getElementById(elementID);\n    me.map = document.getElementById('map'); ///\n\n    lyr = document.getElementsByClassName('lyr'); /// ByClassName\n\n    _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(me.element, 'mousedown', grb);\n    _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(window, 'mouseup', rls); //al(window, 'mouseout', rls);\n\n    me.s = 1;\n    me.x = me.map.offsetLeft;\n    me.y = me.map.offsetTop;\n    me.map.style.left = me.map.offsetLeft + 'px';\n    me.map.style.top = me.map.offsetTop + 'px';\n\n    for (var i = lyr.length - 1; i >= 0; i--) {\n      lyr[i].style.backgroundPosition = me.map.offsetLeft / (1 + i * 0.5) + 'px ' + me.map.offsetTop / (1 + i * 0.5) + 'px';\n    }\n  }\n\n  me.Vec2 = /*#__PURE__*/function () {\n    function _class(x, y) {\n      _classCallCheck(this, _class);\n\n      this.x = x;\n      this.y = y;\n    }\n\n    _createClass(_class, [{\n      key: \"subtract\",\n      value: function subtract(otherVec2) {\n        return new me.Vec2(this.x - otherVec2.x, this.y - otherVec2.y);\n      }\n    }, {\n      key: \"scale\",\n      value: function scale(amount) {\n        return new me.Vec2(this.x * amount, this.y * amount);\n      }\n    }, {\n      key: \"getMagnitude\",\n      value: function getMagnitude() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n      }\n    }, {\n      key: \"normalize\",\n      value: function normalize() {\n        var magnitude = this.getMagnitude();\n        return new me.Vec2(this.x / magnitude, this.y / magnitude);\n      }\n    }]);\n\n    return _class;\n  }();\n\n  me.set = function (x, y) {\n    me.x = x;\n    me.y = y;\n    me.map.style.left = x + 'px';\n    me.map.style.top = y + 'px';\n\n    for (var i = lyr.length - 1; i >= 0; i--) {\n      lyr[i].style.backgroundPosition = x / (1 + i * 0.5) + 'px' + ' ' + y / (1 + i * 0.5) + 'px';\n    }\n\n    for (var callbackIndex = 0; callbackIndex < me.moveCallbacks.length; callbackIndex++) {\n      me.moveCallbacks[callbackIndex](x, y);\n    }\n  };\n\n  function stepCenter(ms) {\n    var curPos = new me.Vec2(me.x, me.y); /// use globally later\n\n    var diff = targetCenter.subtract(curPos);\n    var distance = diff.getMagnitude(); // console.log(distance);\n    // var speed = 9;\n\n    var speed = Math.max(Math.min(distance / 25, 25), 1);\n\n    if (distance > speed) {\n      var change = diff.normalize().scale(speed);\n      me.set(me.x + change.x, me.y + change.y); ///\n\n      window.requestAnimationFrame(stepCenter);\n    } else {\n      me.set(targetCenter.x, targetCenter.y);\n      centering = false;\n    }\n  } /// requires anm\n  /// if ctr is called again before anm is finished, stop first anm and start a new one\n\n\n  me.ctr = function (x, y) {\n    /// get rid of these / fix up architecture:\n    x = -x;\n    y = -y;\n    x += window.innerWidth / 2;\n    y += window.innerHeight / 2;\n    targetCenter = new me.Vec2(x, y);\n\n    if (!centering) {\n      centering = true;\n      window.requestAnimationFrame(stepCenter);\n    } // for(var i = lyr.length - 1; i >= 0; i--) {\n    // \tAnm.animate(lyr[i], 'backgroundPosition', x/(1+i*0.5)+'px '+y/(1+i*0.5)+'px');\n    // }\n    // Anm.animate(me.map, 'left', x+'px');\n    // Anm.animate(me.map, 'top', y+'px');\n\n  };\n\n  var fltVelocity = {\n    x: 0,\n    y: 0\n  };\n  var fltDirection = -1;\n  var fltStartPosition;\n  var fltStartTime;\n\n  me.flt = function () {\n    var on = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (!on) {\n      // turning off\n      me.ctr(fltStartPosition);\n    } else {\n      var tickFrame = function tickFrame(ms) {\n        var msSinceStart = performance.now() - fltStartTime; /// optimization:\n\n        if (msSinceStart < 1000) {\n          var v = msSinceStart / 1000;\n          fltVelocity.x = fltDirection * v;\n          fltVelocity.y = fltDirection * v;\n        } else {\n          fltVelocity.x = fltDirection;\n          fltVelocity.y = fltDirection;\n\n          if (msSinceStart > 19000) {\n            if (msSinceStart < 20000) {\n              var v = (1000 - msSinceStart % 19000) / 1000;\n              fltVelocity.x = fltDirection * v;\n              fltVelocity.y = fltDirection * v;\n            } else {\n              fltDirection *= -1;\n              fltStartTime = new Date();\n            }\n          }\n        }\n\n        var x = me.x += fltVelocity.x;\n        var y = me.y += fltVelocity.y;\n        me.x = x;\n        me.y = y;\n        me.set(x, y);\n\n        if (me.s == 'flt') {\n          window.requestAnimationFrame(tickFrame);\n        } // if(me.s == 'flt') setTimeout(l, 50);\n\n      };\n\n      if (me.s == 'flt') {\n        me.s = 'active';\n        return false;\n      }\n\n      me.s = 'flt';\n      fltStartPosition = {\n        x: me.x,\n        y: me.y\n      };\n      fltStartTime = performance.now();\n      tickFrame();\n    }\n  }; /// wip\n\n\n  me.hvr = function () {\n    me.s = 'hvr';\n\n    function l1() {\n      var x = me.x + dx;\n      var y = me.y + dy;\n      me.x = x;\n      me.y = y;\n      me.set(x, y);\n      if (me.s == 'hvr') window.requestAnimationFrame(l); // if(me.s == 'hvr') setTimeout(l1, 200);\n    }\n\n    function l2() {\n      dx = Math.random();\n    }\n\n    l1();\n  };\n\n  function grb(e) {\n    if (!me.s || e.button == 2) {\n      return false;\n    }\n\n    lastX = e.clientX;\n    lastY = e.clientY;\n    _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(me.element, 'mousemove', drg);\n    me.element.className = 'act';\n  }\n\n  function rls(e) {\n    _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rl(me.element, 'mousemove', drg);\n    me.element.removeAttribute('class');\n  }\n\n  function drg(e) {\n    var x = e.clientX - lastX + me.x;\n    var y = e.clientY - lastY + me.y; // me.x = x;\n    // me.y = y;\n\n    lastX = e.clientX;\n    lastY = e.clientY;\n    me.set(x, y); // me.ctr(Math.floor(x), Math.floor(y));\n    // centering = true;\n    // targetCenter = new me.Vec2(x, y);\n    // mov(x, y);\n  }\n\n  function mov(x, y) {\n    /// x and y just added\n    me.set(x, y); // var xb = x + (xc*seg);\n    // var yb = y + (yc*seg);\n    // if(xb > 500) { xc--; chk('l'); }\n    // else if(xb < -500) { xc++; chk('r'); }\n    // else if(yb > 500) { yc--; chk('u'); }\n    // else if(yb < -500) { yc++; chk('d'); }\n  }\n\n  function chk(d) {\n    for (var i = bfr * 2; i >= 0; i--) {\n      ///:\n      switch (d) {\n        case 'u':\n          var x = xc - bfr + i;\n          var y = yc + bfr;\n          break;\n\n        case 'd':\n          var x = xc - bfr + i;\n          var y = yc - bfr;\n          break;\n\n        case 'l':\n          var x = xc - bfr;\n          var y = yc - bfr + i;\n          break;\n\n        case 'r':\n          var x = xc + bfr;\n          var y = yc - bfr + i;\n          break;\n      }\n\n      if (!(x + '_' + y in ld)) {\n        ld[x + '_' + y] = true;\n        lds(x * seg, y * seg);\n      }\n    }\n  } /// make generic, move to telep:\n\n\n  function lds(x, y) {}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/libs/minlab/spc.js\n");

/***/ }),

/***/ "./client/js/libs/minlab/upl.js":
/*!**************************************!*\
  !*** ./client/js/libs/minlab/upl.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cor */ \"./client/js/libs/minlab/cor.js\");\n// v0.01\n// requires cor.js\n\n/*\r\ni : input\r\nd : data\r\nr : request\r\nu : url\r\np : progress\r\nc : completion\r\nf : failure\r\ns : stop\r\n*/\n/// add support for multiple files\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Upl);\n\n\nfunction Upl(u, i, progressCallback, completeCallback) {\n  /// ie>=10 only\n  var me = this;\n\n  window.onbeforeunload = function () {\n    return \"You're in the middle of an upload.\";\n  };\n\n  var d = new FormData();\n  d.append(i.name, i.files[0]); /// should we use getAttribute('name') ?\n\n  var r = new XMLHttpRequest();\n  _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(r.upload, \"progress\", progressCallback);\n  _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(r, \"load\", completeCallback);\n  _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(r, \"error\", defaultErrorCallback);\n  _cor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].al(r, \"abort\", me.s);\n  r.open('POST', u);\n  r.send(d);\n\n  function defaultErrorCallback(e) {\n    console.log(\"An error occurred while transferring the file.\");\n  }\n\n  me.s = function (e) {\n    console.log(\"The transfer has been canceled by the user.\");\n  }; // me.p = function(e) {\n  // \tconsole.log('t');\n  // \tif(e.lengthComputable) {\n  // \t\tvar percentComplete = e.loaded / e.total;\n  // \t\tprogress.innerHTML = Math.round(percentComplete*100) + '% uploaded';\n  // \t\t//link.style.background = 'rgba(100, 255, 100, '+percentComplete+')';\n  // \t} else {\n  // \t\tconsole.log('total size is unknown');\n  // \t}\n  // }\n  // me.c = function(e) {\n  // \twindow.onbeforeunload = false;\n  // \t/// check for errors\n  // \tconsole.log('e');\n  // \t//console.log(r.responseText);\n  // \t// var r = JSON.parse(r.responseText);\n  // \t// placer.id = 's'+r.sid;\n  // \t// if(!placed) uploaded = true;\n  // \t// else finish(r.sid, parseInt(placer.style.left), parseInt(placer.style.top), rgb);\n  // }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvanMvbGlicy9taW5sYWIvdXBsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUEsaUVBQWVBLEdBQWY7QUFFQTs7QUFFQSxTQUFTQSxHQUFULENBQWFFLENBQWIsRUFBZ0JDLENBQWhCLEVBQW1CQyxnQkFBbkIsRUFBcUNDLGdCQUFyQyxFQUF1RDtBQUN0RDtBQUVBLE1BQUlDLEVBQUUsR0FBRyxJQUFUOztBQUVBQyxFQUFBQSxNQUFNLENBQUNDLGNBQVAsR0FBd0IsWUFBVztBQUFFLFdBQU8sb0NBQVA7QUFBOEMsR0FBbkY7O0FBRUEsTUFBSUMsQ0FBQyxHQUFHLElBQUlDLFFBQUosRUFBUjtBQUNBRCxFQUFBQSxDQUFDLENBQUNFLE1BQUYsQ0FBU1IsQ0FBQyxDQUFDUyxJQUFYLEVBQWlCVCxDQUFDLENBQUNVLEtBQUYsQ0FBUSxDQUFSLENBQWpCLEVBUnNELENBUXhCOztBQUM5QixNQUFJQyxDQUFDLEdBQUcsSUFBSUMsY0FBSixFQUFSO0FBRUFkLEVBQUFBLCtDQUFBLENBQU9hLENBQUMsQ0FBQ0csTUFBVCxFQUFpQixVQUFqQixFQUE2QmIsZ0JBQTdCO0FBQ0FILEVBQUFBLCtDQUFBLENBQU9hLENBQVAsRUFBVSxNQUFWLEVBQWtCVCxnQkFBbEI7QUFDQUosRUFBQUEsK0NBQUEsQ0FBT2EsQ0FBUCxFQUFVLE9BQVYsRUFBbUJJLG9CQUFuQjtBQUNBakIsRUFBQUEsK0NBQUEsQ0FBT2EsQ0FBUCxFQUFVLE9BQVYsRUFBbUJSLEVBQUUsQ0FBQ2EsQ0FBdEI7QUFFQUwsRUFBQUEsQ0FBQyxDQUFDTSxJQUFGLENBQU8sTUFBUCxFQUFlbEIsQ0FBZjtBQUNBWSxFQUFBQSxDQUFDLENBQUNPLElBQUYsQ0FBT1osQ0FBUDs7QUFFQSxXQUFTUyxvQkFBVCxDQUE4QkksQ0FBOUIsRUFBaUM7QUFDaENDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdEQUFaO0FBQ0E7O0FBRURsQixFQUFBQSxFQUFFLENBQUNhLENBQUgsR0FBTyxVQUFTRyxDQUFULEVBQVk7QUFDbEJDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDZDQUFaO0FBQ0EsR0FGRCxDQXZCc0QsQ0EyQnREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWxlcGhlbmVzaXMtbm9kZWpzLy4vY2xpZW50L2pzL2xpYnMvbWlubGFiL3VwbC5qcz8wMGFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHYwLjAxXHJcbi8vIHJlcXVpcmVzIGNvci5qc1xyXG5cclxuLypcclxuaSA6IGlucHV0XHJcbmQgOiBkYXRhXHJcbnIgOiByZXF1ZXN0XHJcbnUgOiB1cmxcclxucCA6IHByb2dyZXNzXHJcbmMgOiBjb21wbGV0aW9uXHJcbmYgOiBmYWlsdXJlXHJcbnMgOiBzdG9wXHJcbiovXHJcblxyXG4vLy8gYWRkIHN1cHBvcnQgZm9yIG11bHRpcGxlIGZpbGVzXHJcblxyXG5leHBvcnQgZGVmYXVsdCBVcGw7XHJcblxyXG5pbXBvcnQgY29yIGZyb20gJy4vY29yJztcclxuXHJcbmZ1bmN0aW9uIFVwbCh1LCBpLCBwcm9ncmVzc0NhbGxiYWNrLCBjb21wbGV0ZUNhbGxiYWNrKSB7XHJcblx0Ly8vIGllPj0xMCBvbmx5XHJcblxyXG5cdHZhciBtZSA9IHRoaXM7XHJcblxyXG5cdHdpbmRvdy5vbmJlZm9yZXVubG9hZCA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCJZb3UncmUgaW4gdGhlIG1pZGRsZSBvZiBhbiB1cGxvYWQuXCI7IH1cclxuXHJcblx0dmFyIGQgPSBuZXcgRm9ybURhdGEoKTtcclxuXHRkLmFwcGVuZChpLm5hbWUsIGkuZmlsZXNbMF0pOyAvLy8gc2hvdWxkIHdlIHVzZSBnZXRBdHRyaWJ1dGUoJ25hbWUnKSA/XHJcblx0dmFyIHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuXHJcblx0Y29yLmFsKHIudXBsb2FkLCBcInByb2dyZXNzXCIsIHByb2dyZXNzQ2FsbGJhY2spO1xyXG5cdGNvci5hbChyLCBcImxvYWRcIiwgY29tcGxldGVDYWxsYmFjayk7XHJcblx0Y29yLmFsKHIsIFwiZXJyb3JcIiwgZGVmYXVsdEVycm9yQ2FsbGJhY2spO1xyXG5cdGNvci5hbChyLCBcImFib3J0XCIsIG1lLnMpO1xyXG5cclxuXHRyLm9wZW4oJ1BPU1QnLCB1KTtcclxuXHRyLnNlbmQoZCk7XHJcblxyXG5cdGZ1bmN0aW9uIGRlZmF1bHRFcnJvckNhbGxiYWNrKGUpIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgdHJhbnNmZXJyaW5nIHRoZSBmaWxlLlwiKTtcclxuXHR9XHJcblxyXG5cdG1lLnMgPSBmdW5jdGlvbihlKSB7XHJcblx0XHRjb25zb2xlLmxvZyhcIlRoZSB0cmFuc2ZlciBoYXMgYmVlbiBjYW5jZWxlZCBieSB0aGUgdXNlci5cIik7XHJcblx0fVxyXG5cclxuXHQvLyBtZS5wID0gZnVuY3Rpb24oZSkge1xyXG5cdC8vIFx0Y29uc29sZS5sb2coJ3QnKTtcclxuXHQvLyBcdGlmKGUubGVuZ3RoQ29tcHV0YWJsZSkge1xyXG5cdC8vIFx0XHR2YXIgcGVyY2VudENvbXBsZXRlID0gZS5sb2FkZWQgLyBlLnRvdGFsO1xyXG5cdC8vIFx0XHRwcm9ncmVzcy5pbm5lckhUTUwgPSBNYXRoLnJvdW5kKHBlcmNlbnRDb21wbGV0ZSoxMDApICsgJyUgdXBsb2FkZWQnO1xyXG5cdC8vIFx0XHQvL2xpbmsuc3R5bGUuYmFja2dyb3VuZCA9ICdyZ2JhKDEwMCwgMjU1LCAxMDAsICcrcGVyY2VudENvbXBsZXRlKycpJztcclxuXHQvLyBcdH0gZWxzZSB7XHJcblx0Ly8gXHRcdGNvbnNvbGUubG9nKCd0b3RhbCBzaXplIGlzIHVua25vd24nKTtcclxuXHQvLyBcdH1cclxuXHQvLyB9XHJcblxyXG5cdC8vIG1lLmMgPSBmdW5jdGlvbihlKSB7XHJcblx0Ly8gXHR3aW5kb3cub25iZWZvcmV1bmxvYWQgPSBmYWxzZTtcclxuXHQvLyBcdC8vLyBjaGVjayBmb3IgZXJyb3JzXHJcblx0Ly8gXHRjb25zb2xlLmxvZygnZScpO1xyXG5cdC8vIFx0Ly9jb25zb2xlLmxvZyhyLnJlc3BvbnNlVGV4dCk7XHJcblx0Ly8gXHQvLyB2YXIgciA9IEpTT04ucGFyc2Uoci5yZXNwb25zZVRleHQpO1xyXG5cdC8vIFx0Ly8gcGxhY2VyLmlkID0gJ3MnK3Iuc2lkO1xyXG5cdC8vIFx0Ly8gaWYoIXBsYWNlZCkgdXBsb2FkZWQgPSB0cnVlO1xyXG5cdC8vIFx0Ly8gZWxzZSBmaW5pc2goci5zaWQsIHBhcnNlSW50KHBsYWNlci5zdHlsZS5sZWZ0KSwgcGFyc2VJbnQocGxhY2VyLnN0eWxlLnRvcCksIHJnYik7XHJcblx0Ly8gfVxyXG59Il0sIm5hbWVzIjpbIlVwbCIsImNvciIsInUiLCJpIiwicHJvZ3Jlc3NDYWxsYmFjayIsImNvbXBsZXRlQ2FsbGJhY2siLCJtZSIsIndpbmRvdyIsIm9uYmVmb3JldW5sb2FkIiwiZCIsIkZvcm1EYXRhIiwiYXBwZW5kIiwibmFtZSIsImZpbGVzIiwiciIsIlhNTEh0dHBSZXF1ZXN0IiwiYWwiLCJ1cGxvYWQiLCJkZWZhdWx0RXJyb3JDYWxsYmFjayIsInMiLCJvcGVuIiwic2VuZCIsImUiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/js/libs/minlab/upl.js\n");

/***/ }),

/***/ "./client/js/libs/pijin-js/index.js":
/*!******************************************!*\
  !*** ./client/js/libs/pijin-js/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Pijin()); ///REVISIT architecture\n\nfunction Pijin() {\n  var me = this;\n  me.callbacks = {\n    'submit': [],\n    'response': []\n  };\n  me.selectorCallbacks = {\n    'submit': [],\n    'response': []\n  };\n  me.options = {\n    className: 'pijinForm',\n    actionAttribute: false,\n    submitCallback: false,\n    responseCallback: false\n  };\n\n  me.init = function (options) {\n    ///REVISIT architecture\n    Object.keys(options).forEach(function (prop) {\n      ///REVISIT architecture\n      if (!me.options.hasOwnProperty(prop)) {\n        throw Error(\"Pijin received unhandled option: \" + prop);\n      }\n    });\n    me.options = Object.assign(me.options, options);\n    var pijinForms = document.getElementsByClassName(me.options.className);\n\n    for (var formIndex = 0; formIndex < pijinForms.length; formIndex++) {\n      var pijinForm = pijinForms[formIndex]; // pijinForm.addEventListener('submit', me.onPijinFormSubmit);\n\n      pijinForm.addEventListener('submit', function (event) {\n        return me.onPijinFormSubmit(event);\n      });\n    }\n\n    if (me.options.submitCallback) {\n      me.callbacks.submit.push(me.options.submitCallback);\n    }\n\n    if (me.options.responseCallback) {\n      me.callbacks.response.push(me.options.responseCallback);\n    }\n  };\n\n  me.watch = function (selector, event, callback) {\n    ///REVISIT architecture\n    me.selectorCallbacks[event][selector] = callback; // if(selector[0] == '#') {\n    // \t// selecting an id\n    // \tvar ele = document.getElementById(selector);\n    // } else {\n    // \tthrow 'Pijin: unhandled selector'; ///REVISIT\n    // }\n  };\n\n  me.onPijinFormSubmit = function (submitEvent) {\n    //// temporary; should find more robust solution probably // converts all form elements to ajax\n    submitEvent.preventDefault();\n    var form = submitEvent.target; // Run user-defined general submit callbacks:\n\n    for (var cbIndex = 0; cbIndex < me.callbacks.submit.length; cbIndex++) {\n      var submitCallback = me.callbacks.submit[cbIndex];\n      submitCallback(submitEvent);\n    } // Run user-defined callbacks for matching selectors: ///TODO currently only one callback allowed\n\n\n    var selector = '#' + form.id;\n    var selectorSubmitCallback = me.selectorCallbacks['submit'][selector];\n\n    if (typeof selectorSubmitCallback === 'function') {\n      ///REVISIT should we make sure this returns before moving on?\n      selectorSubmitCallback(submitEvent);\n    }\n\n    me.submit(form, submitEvent);\n    return true;\n  };\n\n  me.submit = function (form) {\n    var submitEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    ///REVISIT architecture; maybe don't actually need to split this and onPijinFormSubmit\n    var method = form.method; ///REVISIT not really into this solution but for whatever reason there's no Element.getElementsByName():\n    // support PUT and DELETE even though form method attribute does not\n\n    var formInputs = form.getElementsByTagName('input');\n\n    for (var inputIndex = 0; inputIndex < formInputs.length; inputIndex++) {\n      var formInput = formInputs[inputIndex];\n\n      if (formInput.name == '_method') {\n        method = formInput.value;\n        break;\n      }\n    }\n\n    var payload = new FormData(form); // // store request data in object in case client wants to use it in callbacks\n    // var requestObject = {};\n    // PUT and DELETE currently do not often work with web servers and FormData\n    // So, we must use POST and deal with determining the intended method server-side.\n    ///REVISIT when they improve web standards\n\n    var brokenMethods = ['PUT', 'DELETE'];\n    var usingBrokenMethod = brokenMethods.indexOf(method) != -1;\n    var headers = {};\n    var hasFile = false;\n\n    if (hasFile) {\n      ///TODO implement!\n      throw 'Pijin does not yet handle file uploads.';\n      method = usingBrokenMethod ? method : 'POST';\n    } else {\n      if (usingBrokenMethod) {\n        // convert to normal object because PUT and DELETE are currently usually broken with FormData\n        headers['Content-Type'] = 'application/json';\n        payload = Object.fromEntries(payload); // requestObject = payload;\n\n        payload = JSON.stringify(payload);\n      }\n    }\n\n    var request = {\n      method: method,\n      headers: headers,\n      body: payload\n    };\n    var actionURI = form.action; // If form has user-defined action override attribute:\n\n    if (form.hasAttribute(me.options.actionAttribute)) {\n      actionURI = form.getAttribute(me.options.actionAttribute);\n    }\n\n    fetch(actionURI, request).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      ///TODO probably check classes, too. (and what about compound class selectors like .one.two ?)\n      for (var cbIndex = 0; cbIndex < me.callbacks.response.length; cbIndex++) {\n        var responseCallback = me.callbacks.response[cbIndex];\n        responseCallback(result, me.parseRequest(request), submitEvent);\n      }\n\n      var selector = '#' + form.id;\n      var selectorResponseCallback = me.selectorCallbacks['response'][selector]; // console.log(selectorCallback);\n\n      if (typeof selectorResponseCallback === 'function') {\n        // responsePromise = responsePromise.then(result => selectorResponseCallback);\n        selectorResponseCallback(result, // the parsed response\n        me.parseRequest(request), // the initial request as an object of params\n        submitEvent); ///TODO the nature of request.body is unreliable. do we want some convenience functions\n      }\n    });\n    return true;\n  };\n\n  me.parseRequest = function (request) {\n    switch (_typeof(request.body)) {\n      case 'object':\n        {\n          if (request.body instanceof FormData) {\n            request.body = Object.fromEntries(request.body);\n          }\n\n          return request;\n        }\n        break;\n\n      case 'string':\n        {\n          request.body = JSON.parse(request.body);\n          return request;\n        }\n        break;\n\n      default:\n        {\n          throw 'Pijin: unhandled request.body type somehow'; ///REVISIT\n        }\n    }\n  }; // formDataToObject(formData) { ///REVISIT implementation\n  // \tvar serializedObject = {};\n  // \t////TODO I.E. does not support formData.entries(); we will have to loop through input tags and build it ourselves, I think.\n  // \tfor (var entry of formData.entries()) {\n  // \t\tserializedObject[entry[0]] = entry[1];\n  // \t}\n  // \treturn serializedObject;\n  // }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/js/libs/pijin-js/index.js\n");

/***/ }),

/***/ "./client/js/telepClient.js":
/*!**********************************!*\
  !*** ./client/js/telepClient.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TelepClient\": () => (/* binding */ TelepClient)\n/* harmony export */ });\n/* harmony import */ var _libs_minlab_cor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./libs/minlab/cor */ \"./client/js/libs/minlab/cor.js\");\n/* harmony import */ var _admin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./admin */ \"./client/js/admin.js\");\n/* harmony import */ var _admin__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_admin__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ClientState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/ClientState */ \"./client/js/components/ClientState.js\");\n/* harmony import */ var _components_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/Interface */ \"./client/js/components/Interface.js\");\n/* harmony import */ var _components_Stars__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Stars */ \"./client/js/components/Stars.js\");\n/* harmony import */ var _components_Navigation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Navigation */ \"./client/js/components/Navigation.js\");\n/* harmony import */ var _components_Forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/Forms */ \"./client/js/components/Forms.js\");\n/* harmony import */ var _components_ClientEffects__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/ClientEffects */ \"./client/js/components/ClientEffects.js\");\n/* harmony import */ var _components_MediaPlayer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/MediaPlayer */ \"./client/js/components/MediaPlayer.js\");\n/* harmony import */ var _components_Admin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/Admin */ \"./client/js/components/Admin.js\");\n/* harmony import */ var _components_Creator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/Creator */ \"./client/js/components/Creator.js\");\n // import Spc from './libs/minlab/spc';\n// import navigate from \"./navigate\";\n// import starSystem from \"./starSystem\";\n\n\n\n\n\n\n\n\n\n\n // import \"./constellations.scss\";\n\n\nwindow.addEventListener('load', function () {\n  ///DOMonload?\n  new TelepClient().init(); /// change architecture after pondering on it some more\n});\n\nfunction TelepClient() {\n  var me = this;\n\n  me.init = function () {\n    /// doesn't need to be property\n    _components_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addComponent(_components_Interface__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n    _components_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addComponent(_components_ClientEffects__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n    _components_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addComponent(_components_Stars__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    _components_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addComponent(_components_Navigation__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    _components_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addComponent(_components_Forms__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n    _components_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addComponent(_components_MediaPlayer__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n    _components_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addComponent(_components_Admin__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n    _components_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addComponent(_components_Creator__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n    _components_ClientState__WEBPACK_IMPORTED_MODULE_2__[\"default\"].init();\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvanMvdGVsZXBDbGllbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztDQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Q0FHQTs7QUFFQTtBQUVBWSxNQUFNLENBQUNDLGdCQUFQLENBQXdCLE1BQXhCLEVBQWdDLFlBQVc7QUFBRTtBQUM1QyxNQUFJRixXQUFKLEdBQWtCRyxJQUFsQixHQUQwQyxDQUNoQjtBQUMxQixDQUZEOztBQUlBLFNBQVNILFdBQVQsR0FBdUI7QUFDdEIsTUFBSUksRUFBRSxHQUFHLElBQVQ7O0FBRUFBLEVBQUFBLEVBQUUsQ0FBQ0QsSUFBSCxHQUFVLFlBQVc7QUFBRTtBQUN0QlosSUFBQUEsNEVBQUEsQ0FBeUJDLDZEQUF6QjtBQUNBRCxJQUFBQSw0RUFBQSxDQUF5QkssaUVBQXpCO0FBQ0FMLElBQUFBLDRFQUFBLENBQXlCRSx5REFBekI7QUFDQUYsSUFBQUEsNEVBQUEsQ0FBeUJHLDhEQUF6QjtBQUNBSCxJQUFBQSw0RUFBQSxDQUF5QkkseURBQXpCO0FBQ0FKLElBQUFBLDRFQUFBLENBQXlCTSwrREFBekI7QUFDQU4sSUFBQUEsNEVBQUEsQ0FBeUJPLHlEQUF6QjtBQUNBUCxJQUFBQSw0RUFBQSxDQUF5QlEsNERBQXpCO0FBQ0FSLElBQUFBLG9FQUFBO0FBRUEsR0FYRDtBQVlBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVsZXBoZW5lc2lzLW5vZGVqcy8uL2NsaWVudC9qcy90ZWxlcENsaWVudC5qcz9lNGQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb3IgZnJvbSAnLi9saWJzL21pbmxhYi9jb3InO1xyXG4vLyBpbXBvcnQgU3BjIGZyb20gJy4vbGlicy9taW5sYWIvc3BjJztcclxuLy8gaW1wb3J0IG5hdmlnYXRlIGZyb20gXCIuL25hdmlnYXRlXCI7XHJcbi8vIGltcG9ydCBzdGFyU3lzdGVtIGZyb20gXCIuL3N0YXJTeXN0ZW1cIjtcclxuXHJcbmltcG9ydCBhZG1pbiBmcm9tIFwiLi9hZG1pblwiO1xyXG5cclxuaW1wb3J0IGNsaWVudFN0YXRlIGZyb20gJy4vY29tcG9uZW50cy9DbGllbnRTdGF0ZSc7XHJcbmltcG9ydCBJbnRlcmZhY2UgZnJvbSAnLi9jb21wb25lbnRzL0ludGVyZmFjZSc7XHJcbmltcG9ydCBTdGFycyBmcm9tICcuL2NvbXBvbmVudHMvU3RhcnMnO1xyXG5pbXBvcnQgTmF2aWdhdGlvbiBmcm9tICcuL2NvbXBvbmVudHMvTmF2aWdhdGlvbic7XHJcbmltcG9ydCBGb3JtcyBmcm9tICcuL2NvbXBvbmVudHMvRm9ybXMnO1xyXG5pbXBvcnQgQ2xpZW50RWZmZWN0cyBmcm9tICcuL2NvbXBvbmVudHMvQ2xpZW50RWZmZWN0cyc7XHJcbmltcG9ydCBtZWRpYVBsYXllciBmcm9tICcuL2NvbXBvbmVudHMvTWVkaWFQbGF5ZXInO1xyXG5pbXBvcnQgQWRtaW4gZnJvbSAnLi9jb21wb25lbnRzL0FkbWluJztcclxuaW1wb3J0IENyZWF0b3IgZnJvbSBcIi4vY29tcG9uZW50cy9DcmVhdG9yXCI7XHJcblxyXG4vLyBpbXBvcnQgXCIuL2NvbnN0ZWxsYXRpb25zLnNjc3NcIjtcclxuXHJcbmV4cG9ydCB7IFRlbGVwQ2xpZW50IH07XHJcblxyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uKCkgeyAvLy9ET01vbmxvYWQ/XHJcblx0bmV3IFRlbGVwQ2xpZW50KCkuaW5pdCgpOyAvLy8gY2hhbmdlIGFyY2hpdGVjdHVyZSBhZnRlciBwb25kZXJpbmcgb24gaXQgc29tZSBtb3JlXHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gVGVsZXBDbGllbnQoKSB7XHJcblx0dmFyIG1lID0gdGhpcztcclxuXHJcblx0bWUuaW5pdCA9IGZ1bmN0aW9uKCkgeyAvLy8gZG9lc24ndCBuZWVkIHRvIGJlIHByb3BlcnR5XHJcblx0XHRjbGllbnRTdGF0ZS5hZGRDb21wb25lbnQoSW50ZXJmYWNlKTtcclxuXHRcdGNsaWVudFN0YXRlLmFkZENvbXBvbmVudChDbGllbnRFZmZlY3RzKTtcclxuXHRcdGNsaWVudFN0YXRlLmFkZENvbXBvbmVudChTdGFycyk7XHJcblx0XHRjbGllbnRTdGF0ZS5hZGRDb21wb25lbnQoTmF2aWdhdGlvbik7XHJcblx0XHRjbGllbnRTdGF0ZS5hZGRDb21wb25lbnQoRm9ybXMpO1xyXG5cdFx0Y2xpZW50U3RhdGUuYWRkQ29tcG9uZW50KG1lZGlhUGxheWVyKTtcclxuXHRcdGNsaWVudFN0YXRlLmFkZENvbXBvbmVudChBZG1pbik7XHJcblx0XHRjbGllbnRTdGF0ZS5hZGRDb21wb25lbnQoQ3JlYXRvcik7XHJcblx0XHRjbGllbnRTdGF0ZS5pbml0KCk7XHJcblxyXG5cdH1cclxufVxyXG4iXSwibmFtZXMiOlsiY29yIiwiYWRtaW4iLCJjbGllbnRTdGF0ZSIsIkludGVyZmFjZSIsIlN0YXJzIiwiTmF2aWdhdGlvbiIsIkZvcm1zIiwiQ2xpZW50RWZmZWN0cyIsIm1lZGlhUGxheWVyIiwiQWRtaW4iLCJDcmVhdG9yIiwiVGVsZXBDbGllbnQiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiaW5pdCIsIm1lIiwiYWRkQ29tcG9uZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/js/telepClient.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./client/scss/abstracts/_variables.scss":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./client/scss/abstracts/_variables.scss ***!
  \********************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ \"./node_modules/css-loader/dist/runtime/cssWithMappingToString.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"starGridWidth\": \"500px\",\n\t\"starGridSquareSize\": \"50px\",\n\t\"starGridMargin\": \"20px\",\n\t\"starGridPaddingX\": \"200px\",\n\t\"starGridPaddingY\": \"200px\"\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jbGllbnQvc2Nzcy9hYnN0cmFjdHMvX3ZhcmlhYmxlcy5zY3NzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDNEg7QUFDN0I7QUFDL0YsOEJBQThCLG1GQUEyQixDQUFDLHdHQUFxQztBQUMvRjtBQUNBLGlEQUFpRCxrRUFBa0U7QUFDbkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVsZXBoZW5lc2lzLW5vZGVqcy8uL2NsaWVudC9zY3NzL2Fic3RyYWN0cy9fdmFyaWFibGVzLnNjc3M/NjdkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIlwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcInN0YXJHcmlkV2lkdGhcIjogXCI1MDBweFwiLFxuXHRcInN0YXJHcmlkU3F1YXJlU2l6ZVwiOiBcIjUwcHhcIixcblx0XCJzdGFyR3JpZE1hcmdpblwiOiBcIjIwcHhcIixcblx0XCJzdGFyR3JpZFBhZGRpbmdYXCI6IFwiMjAwcHhcIixcblx0XCJzdGFyR3JpZFBhZGRpbmdZXCI6IFwiMjAwcHhcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./client/scss/abstracts/_variables.scss\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw0Q0FBNEMscUJBQXFCO0FBQ2pFOztBQUVBO0FBQ0EsS0FBSztBQUNMLEtBQUs7QUFDTDs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFCQUFxQixxQkFBcUI7QUFDMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlbGVwaGVuZXNpcy1ub2RlanMvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/api.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js":
/*!************************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/cssWithMappingToString.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQ0FBa0M7O0FBRWxDLDhCQUE4Qjs7QUFFOUIsa0RBQWtELGdCQUFnQixnRUFBZ0Usd0RBQXdELDZEQUE2RCxzREFBc0Q7O0FBRTdTLHVDQUF1Qyx1REFBdUQsdUNBQXVDLFNBQVMsT0FBTyxvQkFBb0I7O0FBRXpLLHlDQUF5Qyw4RkFBOEYsd0JBQXdCLGVBQWUsZUFBZSxnQkFBZ0IsWUFBWSxNQUFNLHdCQUF3QiwrQkFBK0IsYUFBYSxxQkFBcUIsdUNBQXVDLGNBQWMsV0FBVyxZQUFZLFVBQVUsTUFBTSxtREFBbUQsVUFBVSxzQkFBc0I7O0FBRXZlLGdDQUFnQzs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWxlcGhlbmVzaXMtbm9kZWpzLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanM/NzVlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgdmFyIF9pID0gYXJyICYmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFycltcIkBAaXRlcmF0b3JcIl0pOyBpZiAoX2kgPT0gbnVsbCkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9zLCBfZTsgdHJ5IHsgZm9yIChfaSA9IF9pLmNhbGwoYXJyKTsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSkge1xuICB2YXIgX2l0ZW0gPSBfc2xpY2VkVG9BcnJheShpdGVtLCA0KSxcbiAgICAgIGNvbnRlbnQgPSBfaXRlbVsxXSxcbiAgICAgIGNzc01hcHBpbmcgPSBfaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/cssWithMappingToString.js\n");

/***/ }),

/***/ "./client/scss/abstracts/_variables.scss":
/*!***********************************************!*\
  !*** ./client/scss/abstracts/_variables.scss ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_variables_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../node_modules/sass-loader/dist/cjs.js!./_variables.scss */ \"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./client/scss/abstracts/_variables.scss\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_variables_scss__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_use_1_node_modules_sass_loader_dist_cjs_js_variables_scss__WEBPACK_IMPORTED_MODULE_1__[\"default\"].locals || {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc2Nzcy9hYnN0cmFjdHMvX3ZhcmlhYmxlcy5zY3NzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0Y7QUFDL0YsWUFBNks7O0FBRTdLOztBQUVBO0FBQ0E7O0FBRUEsYUFBYSwwR0FBRyxDQUFDLHdKQUFPOzs7O0FBSXhCLGlFQUFlLCtKQUFjLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWxlcGhlbmVzaXMtbm9kZWpzLy4vY2xpZW50L3Njc3MvYWJzdHJhY3RzL192YXJpYWJsZXMuc2Nzcz80YTQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcGkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9fdmFyaWFibGVzLnNjc3NcIjtcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgZGVmYXVsdCBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/scss/abstracts/_variables.scss\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./locale/en_us.json":
/*!***************************!*\
  !*** ./locale/en_us.json ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GALAXY":"Galaxy","CONSTELLATIONS":"Constellations","SORT-BY-CONSTELLATIONS":"Constellations","MOST_POPULAR":"Most Popular","SORT-BY-MOST_POPULAR":"Sorting by most popular","MOST_RECENT":"Most Recent","SORT-BY-MOST_RECENT":"Sorting by most recent","LIST":"List","GRID":"Grid","BOOKMARKS":"Bookmarks","SORT-BY-BOOKMARKS":"Your bookmarks"}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./client/js/telepClient.js");
/******/ 	
/******/ })()
;